  DINO interpreter is written with the usage of GNU configuration
utilities.  Therefore the installation of the tool set is analagous to
the instalation of many GNU software packages.

Installation in the same directory as one with sources files.
*************************************************************


  1. Run command file `configure' without arguments.  In the case of
     successful work `configure' in current directory generates files
     Makefile (from files `Makefile.in') in current directories and
     subdirectories, file `AMMUNITION/cocom-config.h'.  At the end of
     successful work `configure' write to standard output and file
     `config.status' configuration options were specified.

  2. Install the tool set, by the following command:

          make install

     This command create all object files and copies the tool set
     components into the directory /usr/local/bin and file the
     component man files into /usr/local/man/man1.  It also copies
     library files (libdino.a or/and libdino.so), into directory
     /usr/local/lib/ and DINO include files into directory
     /usr/local/include.

     If you wish to copy the files into other directories change
     values of Makefile variables `bindir', `libdir', `man1dir' and
     `prefix'. Use only full path name for the directories! For
     example, if you wish to copy the files into directories
     `/usr/local/DINO/bin', `/usr/local/DINO/lib', ,
     `/usr/local/DINO/include' and `/usr/local/DINO/man/man1'
     specify

           make install prefix=/usr/local/DINO
     
                           or

           make install bindir=/usr/local/DINO/bin\
                libdir=/usr/local/DINO/lib\
                includedir=/usr/local/DINO/include\
                man1dir=/usr/local/DINO/man/man1


Makefile contains following useful entries other than install:

  all       -- creation of all object and executable files;
  
  dist      -- unconditional creation of compressed distribution tar
	       file;

  clean     -- deletion of object files of the translator and executables;

  realclean -- Deletion all which can be built up automatically;
               
  TAGS      -- updating TAGS table for all DINO;

  uninstall -- delete the installed files and the empty installation
	       directories.



Installation in directory other than one with sources files.
************************************************************

  If you wish to build the object and executable files in a
subdirectory of the source directory make the same as in previous
sections. `configure' itself find out the sources.


In other case do follows:

  1. Go to that directory before running `configure':

          mkdir temp; cd temp

  2. Specify where to find `configure' when you run it:

          ../dino-0.55/configure ...

  3. Specify where to find the sources, as an argument `--srcdir' to
     `configure':

          ../dino-0.55/configure --srcdir=../dino-0.55

  4. It is better to use full directory path for --srcdir if you use
     EMACS compile command.


Other `configure' options and environment variables
***************************************************

  GNU `configure' has many ways to control configuration -- see
configure documentaion for details.  There are some environment
variables worth for mention.  These are environment variables:

  CC       - used compiler for compilation of DINO C sources
  CFLAGS   - C compiler options for compilation of DINO C sources
  CXX      - C++ compiler options for compilation of DINO C++ sources
  CXXFLAGS - used compiler for compilation of DINO C++ sources
  no_shlib - if it is an unempty string, it means that dynamic loading
             of foreign functions will be not supported (but packages
             mpi and ieee will be still available).
  cocom_debug - Use for thorough debugging DINO.  It means also
             no_shlib.

For example

      CC=gcc CXX=gcc no_shlib=yes configure

 
Vladimir Makarov 	(vmakarov@gcc.gnu.org) 

