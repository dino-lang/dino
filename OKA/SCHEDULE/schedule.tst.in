#!/bin/sh

#
# Script to test of the scheduler.
#
# Copyright (C) 1997-2007 Vladimir Makarov.
# 
# Written by Vladimir Makarov <vmakarov@gcc.gnu.org>
# 
# This file is part of the tool OKA.
# 
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
# 
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU CC; see the file COPYING.  If not, write to the Free
# Software Foundation, 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.
#
#
# Usage: schedule.tst
#
# The script outputs self-explanatory messages and returns zero exit code if 
# it is all ok.
#

CC='@CC@ @CFLAGS@ @DEFS@ -I. -I../../AMMUNITION -I@srcdir@/../../AMMUNITION'
result=fail
echo +++++++++++ Testing Scheduler for C ++++++++++++++++++++++++++++++++
echo ++++++++++Now building pipeline hazards recognizer
if ../oka -export @srcdir@/test.oka; then
        echo ++++++++++Now compilation of all scheduler files
        if $CC test.c @srcdir@/schedule.c @srcdir@/schedtst.c @srcdir@/../../AMMUNITION/allocate.c -o ./a.out; then
                echo ++++++++++Now scheduling
                if ./a.out >_test.res; then
                        if cat >_test1.res <<'EOF' && cmp _test.res _test1.res; then
******ORIGINAL
|01234567890123456789| Start  Stop Number Instruction
|I                   |     0     0      1 ADD	#1, #2, #3
|.I                  |     1    19      2 MUL	#5, #3, #4
|I...................|    20    52      3 DIV	#1, #2, #5
|.............I......|    53    85      4 DIV	#6, #2, #3
|             .I     |    54    72      5 MUL	#5, #5, #5
|              I     |    54    56      6 FMUL	#11, #12, #13
|              .I    |    55    57      7 FADD	#13, #13, #14
|               ...I |    58    85      8 FDIV	#11, #12, #13
Summary execution time = 85
critical path length = 38

******NEW
|01234567890123456789| Start  Stop Number Instruction
|I                   |     0    18      2 MUL	#5, #3, #4
|I                   |     0     2      6 FMUL	#11, #12, #13
|.I                  |     1    33      4 DIV	#6, #2, #3
| I                  |     1     3      7 FADD	#13, #13, #14
| .I                 |     2     2      1 ADD	#1, #2, #3
|  ..I               |     4    31      8 FDIV	#11, #12, #13
|..............I.....|    34    66      3 DIV	#1, #2, #5
|              .I    |    35    53      5 MUL	#5, #5, #5
Summary execution time = 66
critical path length = 38
EOF
                                result=ok
                        fi
                fi
        fi
fi

# Final message

if test $result = ok; then
	echo it is all ok
        rm -f a.out test.h test.c _test.res _test1.res
	exit 0
else
	echo '***' test is failed see _test.res _test1.res
	exit 1
fi
