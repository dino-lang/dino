/*
   Copyright (C) 1997-2016 Vladimir Makarov.

   Written by Vladimir Makarov <vmakarov@gcc.gnu.org>

   This file is part of the tool SHILKA.

   This is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This software is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GNU CC; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.

*/
%%
AND
ARRAY
BEGIN
BITS
BY
CASE
CONST
DIV
DO
ELSE
ELSIF
END
EVAL
EXCEPT
EXCEPTION
EXIT
EXPORTS
FINALLY
FOR
FROM
IF
IMPORT
INTERFACE
IN
INLINE
LOCK
METHODS
MOD
MODULE
NOT
OBJECT
OF
OR
PROCEDURE
RAISES
READONLY
RECORD
REF
REPEAT
RETURN
SET
THEN
TO
TRY
TYPE
TYPECASE
UNSAFE
UNTIL
UNTRACED
VALUE
VAR
WHILE
WITH
and
array
begin
bits
by
case
const
div
do
else
elsif
end
eval
except
exception
exit
exports
finally
for
from
if
import
interface
in
inline
lock
methods
mod
module
not
object
of
or
procedure
raises
readonly
record
ref
repeat
return
set
then
to
try
type
typecase
unsafe
until
untraced
value
var
while
with
