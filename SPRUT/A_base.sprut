/*
   Copyright (C) 1997-2016 Vladimir Makarov.

   Written by Vladimir Makarov <vmakarov@gcc.gnu.org>

   This file is part of the tool SPRUT.

   This is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This software is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GNU CC; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.

*/

%import {
typedef int integer_t;
typedef char *string_t;
}

%local {
static int is_null (IR_node_t node);

static void comment (const char *string);
}

%type integer_t string_t
%%
ident
%class
    number_of_idents : integer_t
    {comment ("long \
               commentary");  /* Once more commentary */}
%skeleton
    ident_string : string_t [!is_null ($$)] {comment ($);}
;
ident :: node
%class
    {comment ("once more action");}
;
node :: %root
%skeleton
    position : integer_t
;
number :: node
%skeleton
    number_value : integer_t
    {
#ifdef __IR_CPP__
      $$->IR_set_number_value (1);
#else
      IR_set_number_value ($$, 1);
#endif
     }
    [$ != 0]
;
%%
static int
is_null (IR_node_t node)
{
  return node == NULL;
}

static void
comment (const char *string)
{
}
