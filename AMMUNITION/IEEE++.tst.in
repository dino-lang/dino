#!/bin/sh
# @configure_input@

#
# Script to test of IEEE floating point arithmetic package
# (files `IEEE.h', `IEEEcpp.C').
#
#
#   Copyright (C) 1997-2016 Vladimir Makarov.
#
#   Written by Vladimir Makarov <vmakarov@gcc.gnu.org>
#
#   This is part of package IEEE; you can redistribute it and/or modify
#   it under the terms of the GNU Library General Public License as
#   published by the Free Software Foundation; either version 2, or (at
#   your option) any later version.
#
#   This software is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public
#   License along with GNU CC; see the file COPYING.  If not, write to
#   the Free Software Foundation, 59 Temple Place - Suite 330, Boston,
#   MA 02111-1307, USA.
#
#
# Usage: IEEE++.tst [start_test_number]
#
# The script outputs self-explanatory messages and returns zero exit code if 
# it is all ok.
#

script_file=$0
prefix=`basename $script_file .tst`
CXX='@CXX@'
CXX_options='@CXXFLAGS@ @DEFS@ -DIEEE_QUAD -I. -I@srcdir@'
source_addfiles='@srcdir@/bitscpp.C @srcdir@/arithmcpp.C @srcdir@/IEEEcpp.C'
addfiles="${prefix}_bitscpp.o ${prefix}_arithmcpp.o ${prefix}_IEEEcpp.o"
test_file=${prefix}_tIEEE.C
outfile=./${prefix}_a.out

if test x$1 = x
then
    start_test_number=1
else
    if expr $1 + 0 >/dev/null
    then
        start_test_number=`expr $1 + 0`
    else
        echo $script_file:invalid argument $1 2>&1
        exit 1
    fi
fi

# Compilation of addfiles

for i in $source_addfiles; do
  echo '      ' $CXX $CXX_options -c $i -o ${prefix}_`basename $i .C`.o
  if $CXX $CXX_options -c $i -o ${prefix}_`basename $i .C`.o; then
        result=ok
  else
        echo '***' $script_file: test is failed see file $test_file
        exit 1
  fi
done

# Test 1.
if test $result = ok -a $start_test_number -le 1; then
        cat >$test_file <<'TEST1'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f, pm, nm;
  char str [500], res [MAX_SINGLE_2_STRING_LENGTH+1], *r1, *r2;

  IEEE::reset ();
  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.0");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.00000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "2.");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("2.00000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-0.3e1");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-3.00000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.8p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.4p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.2p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.1p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+4");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("4.00000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = f.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+.");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.e-10000");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "5555.5");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("5.55550000e3", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+30");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.00000001e30", res) != 0
      || IEEE::get_sticky_status_bits () != 0 == 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, ".0000002E37");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("2.00000003e30", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "30000000e+23");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("2.99999989e30", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "4000000000000000000000000000000");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("4.00000006e30", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-12345.0000e-10");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.23450002e-6", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.2345678e+30");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.23456782e30", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.234567890e30");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.23456789e30", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1234567890");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.23456794e9", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+Inf");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-Inf");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "QNaN");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("QNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "SNaN");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("SNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "abracadabra");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || r1 != str || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+abracadabra");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || r1 != str + 1 || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-abracadabra");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || r1 != str + 1 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.abracadabra");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || r1 != str + 2 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.e+abracadabra");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || r1 != str + 2 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.e-1abracadabra");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || r1 != str + 5 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = f.from_string (str);
  pm.positive_maximum ();
  if (*r1 != '\0' || f != pm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = f.from_string (str);
  if (*r1 != '\0' || f != pm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e+39");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RN);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e+39");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  r1 = f.from_string (str);
  strcpy (str, "-1.e+39");
  nm.negative_maximum ();
  if (*r1 != '\0' || f != nm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  r1 = f.from_string (str);
  strcpy (str, "-1.e+39");
  if (*r1 != '\0' || f != nm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-46");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-46");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RN);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-46");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  r1 = f.from_string (str);
  strcpy (str, "-1.e-46");
  nm.negative_minimum ();
  if (*r1 != '\0' || f != nm
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RN);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-40");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-9.99994610e-41", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-40");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-9.99994610e-41", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-40");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-9.99994610e-41", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-40");
  r1 = f.from_string (str);
  r2 = f.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.00000862e-40", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pm.positive_maximum ();
  r2 = pm.to_binary_string (16, res);
  r1 = f.from_binary_string ("1.fffffep127", 16);
  if (r2 != res || *r1 != '\0' || strcmp ("1.fffffep127", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != f)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (8, res);
  r1 = f.from_binary_string ("1.77777776p127", 8);
  if (r2 != res || *r1 != '\0' || strcmp ("1.77777776p127", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != f)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (4, res);
  r1 = f.from_binary_string ("1.333333333332p127", 4);
  if (r2 != res || *r1 != '\0' || strcmp ("1.333333333332p127", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != f)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (2, res);
  r1 = f.from_binary_string ("1.11111111111111111111111p127", 2);
  if (r2 != res || *r1 != '\0' || strcmp ("1.11111111111111111111111p127", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != f)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pm.positive_minimum ();
  r2 = pm.to_binary_string (16, res);
  r1 = f.from_binary_string ("1.p-149", 16);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-149", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != f)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (8, res);
  r1 = f.from_binary_string ("1.p-149", 8);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-149", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != f)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (4, res);
  r1 = f.from_binary_string ("1.p-149", 4);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-149", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != f)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (2, res);
  r1 = f.from_binary_string ("1.p-149", 2);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-149", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != f)
    exit (1);
  exit (0);
}
TEST1

        echo test 1:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 2.
if test $result = ok -a $start_test_number -le 2; then
        cat >$test_file <<'TEST2'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d, pm, nm;
  char str [500], res [MAX_DOUBLE_2_STRING_LENGTH+1], *r1, *r2;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.0");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.0000000000000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "2.");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("2.0000000000000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-0.3e1");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-3.0000000000000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.8p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.4p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.2p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.1p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+4");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("4.0000000000000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+.");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.e-10000");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "5555.5");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("5.5555000000000000e3", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+300");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.0000000000000001e300", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, ".0000002e307");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("2.0000000000000001e300", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "30000000E+293");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("3.0000000000000002e300", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "4000000000000000000000000000000000000000000000000000000000000\
0000000000000000000000000000000000000000000000000000000000000000000000\
0000000000000000000000000000000000000000000000000000000000000000000000\
0000000000000000000000000000000000000000000000000000000000000000000000\
000000000000000000000000000000");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("4.0000000000000002e300", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-12345.000e-10");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.2345000000000000e-6", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.234567890123456e+300");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.2345678901234560e300", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.2345678901234567e300");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.2345678901234567e300", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "12345678901234561");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.2345678901234560e16", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+Inf");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-Inf");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "QNaN");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("QNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "SNaN");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("SNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 1 || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 1 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 2 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.e+abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 2 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.e-1abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 5 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = d.from_string (str);
  pm.positive_maximum ();
  if (*r1 != '\0' || d != pm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = d.from_string (str);
  if (*r1 != '\0' || d != pm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e+309");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RN);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e+309");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  r1 = d.from_string (str);
  strcpy (str, "-1.e+309");
  nm.negative_maximum ();
  if (*r1 != '\0' || d != nm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  r1 = d.from_string (str);
  strcpy (str, "-1.e+309");
  if (*r1 != '\0' || d != nm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-324");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-324");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RN);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-324");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  r1 = d.from_string (str);
  strcpy (str, "-1.e-324");
  nm.negative_minimum ();
  if (*r1 != '\0' || d != nm
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RN);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-310");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-9.9999999999999694e-311", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-310");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-9.9999999999999694e-311", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-310");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-9.9999999999999694e-311", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-310");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.0000000000000464e-310", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pm.positive_maximum ();
  r2 = pm.to_binary_string (16, res);
  r1 = d.from_binary_string ("1.fffffffffffffp1023", 16);
  if (r2 != res || *r1 != '\0' || strcmp ("1.fffffffffffffp1023", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (8, res);
  r1 = d.from_binary_string ("1.777777777777777774p1023", 8);
  if (r2 != res || *r1 != '\0' || strcmp ("1.777777777777777774p1023", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (4, res);
  r1 = d.from_binary_string ("1.33333333333333333333333333p1023", 4);
  if (r2 != res || *r1 != '\0' || strcmp ("1.33333333333333333333333333p1023", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (2, res);
  r1 = d.from_binary_string ("1.1111111111111111111111111111111111111111111111111111p1023", 2);
  if (r2 != res || *r1 != '\0' || strcmp ("1.1111111111111111111111111111111111111111111111111111p1023", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pm.positive_minimum ();
  r2 = pm.to_binary_string (16, res);
  r1 = d.from_binary_string ("1.p-1074", 16);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-1074", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (8, res);
  r1 = d.from_binary_string ("1.p-1074", 8);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-1074", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (4, res);
  r1 = d.from_binary_string ("1.p-1074", 4);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-1074", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (2, res);
  r1 = d.from_binary_string ("1.p-1074", 2);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-1074", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  exit (0);
}
TEST2

        echo test 2:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 3.
if test $result = ok -a $start_test_number -le 3; then
        cat >$test_file <<'TEST3'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f;
  char res [MAX_SINGLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  f.positive_zero ();
  r = f.to_string (res);
  if (!f.is_positive_zero () || r != res || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.negative_zero ();
  r = f.to_string (res);
  if (!f.is_negative_zero () || r != res || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.NaN ();
  r = f.to_string (res);
  if (!f.is_NaN () || r != res || strcmp ("QNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.trapping_NaN ();
  r = f.to_string (res);
  if (!f.is_trapping_NaN () || r != res || strcmp ("SNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.positive_infinity ();
  r = f.to_string (res);
  if (!f.is_positive_infinity () || r != res || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.negative_infinity ();
  r = f.to_string (res);
  if (!f.is_negative_infinity () || r != res || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.positive_maximum ();
  r = f.to_string (res);
  if (r != res || strcmp ("3.40282347e38", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.negative_maximum ();
  r = f.to_string (res);
  if (r != res || strcmp ("-3.40282347e38", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.positive_minimum ();
  r = f.to_string (res);
  if (r != res || strcmp ("1.40129846e-45", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.negative_minimum ();
  r = f.to_string (res);
  if (r != res || strcmp ("-1.40129846e-45", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST3

        echo test 3:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 4.
if test $result = ok -a $start_test_number -le 4; then
        cat >$test_file <<'TEST4'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d;
  char res [MAX_DOUBLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  d.positive_zero ();
  r = d.to_string (res);
  if (!d.is_positive_zero () || r != res || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_zero ();
  r = d.to_string (res);
  if (!d.is_negative_zero () || r != res || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.NaN ();
  r = d.to_string (res);
  if (!d.is_NaN () || r != res || strcmp ("QNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.trapping_NaN ();
  r = d.to_string (res);
  if (!d.is_trapping_NaN () || r != res || strcmp ("SNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_infinity ();
  r = d.to_string (res);
  if (!d.is_positive_infinity () || r != res
      || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_infinity ();
  r = d.to_string (res);
  if (!d.is_negative_infinity () || r != res
      || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_maximum ();
  r = d.to_string (res);
  if (r != res || strcmp ("1.7976931348623157e308", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_maximum ();
  r = d.to_string (res);
  if (r != res || strcmp ("-1.7976931348623157e308", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_minimum ();
  r = d.to_string (res);
  if (r != res || strcmp ("4.9406564584124654e-324", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_minimum ();
  r = d.to_string (res);
  if (r != res || strcmp ("-4.9406564584124654e-324", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST4

        echo test 4:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 5.
if test $result = ok -a $start_test_number -le 5; then
        cat >$test_file <<'TEST5'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  f.positive_zero ();
  if (f.is_normalized () || f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.negative_zero ();
  if (f.is_normalized () || f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.positive_infinity ();
  if (f.is_normalized () || f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.negative_infinity ();
  if (f.is_normalized () || f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.NaN ();
  if (f.is_normalized () || f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.trapping_NaN ();
  if (f.is_normalized () || f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.positive_maximum ();
  if (!f.is_normalized () || f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.negative_maximum ();
  if (!f.is_normalized () || f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.positive_minimum ();
  if (f.is_normalized () || !f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  f.negative_minimum ();
  if (f.is_normalized () || !f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1.e-40");
  if (*r != '\0'
      || f.is_normalized () || !f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1.e-37");
  if (*r != '\0'
      || !f.is_normalized () || f.is_denormalized ()
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST5

        echo test 5:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 6.
if test $result = ok -a $start_test_number -le 6; then
        cat >$test_file <<'TEST6'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  d.positive_zero ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_zero ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_infinity ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_infinity ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.NaN ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.trapping_NaN ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_maximum ();
  if (!d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_maximum ();
  if (!d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_minimum ();
  if (d.is_normalized () || !d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_minimum ();
  if (d.is_normalized () || !d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("-1.e-310");
  if (*r != '\0'
      || d.is_normalized () || !d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("-1.e-307");
  if (*r != '\0'
      || !d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST6

        echo test 6:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 7.
if test $result = ok -a $start_test_number -le 7; then
        cat >$test_file <<'TEST7'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f1, f2;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz == pz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz == nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz == pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz == f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz == nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz == pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz == f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi == pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi == f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni == ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni == f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(f1 == f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (f2 == f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  if (snan != snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz != pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz != nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz != pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz != ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz != f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz != nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz != pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz != ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz != f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi != pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi != ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi != f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (ni != ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni != f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (f1 != f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(f2 != f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST7

        echo test 7:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 8.
if test $result = ok -a $start_test_number -le 8; then
        cat >$test_file <<'TEST8'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d1, d2;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  r = d1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz == pz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz == nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz == pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz == nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz == pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi == pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni == ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(d1 == d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (d2 == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  if (snan != snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz != pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz != nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz != pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz != ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz != nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz != pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz != ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi != pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi != ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (ni != ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (d1 != d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(d2 != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST8

        echo test 8:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 9.
if test $result = ok -a $start_test_number -le 9; then
        cat >$test_file <<'TEST9'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f1, f2;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan > pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan > ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan > f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan > pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz > ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (pz > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz > ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nz > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi > pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (ni > ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmax > nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax > nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmin > nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmin > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (f1 > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(f2 > f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST9

        echo test 9:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 10.
if test $result = ok -a $start_test_number -le 10; then
        cat >$test_file <<'TEST10'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t f1, f2;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan > pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan > ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan > f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan > pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz > ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (pz > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz > ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nz > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi > pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (ni > ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmax > nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax > nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmin > nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmin > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (f1 > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(f2 > f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST10

        echo test 10:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 11.
if test $result = ok -a $start_test_number -le 11; then
        cat >$test_file <<'TEST11'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f1, f2;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <= f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan <= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <= ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <= ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi <= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni <= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmax <= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmin <= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmin <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(f1 <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (f2 <= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST11

        echo test 11:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 12.
if test $result = ok -a $start_test_number -le 12; then
        cat >$test_file <<'TEST12'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t f1, f2;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <= f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan <= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <= ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <= ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi <= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni <= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmax <= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmin <= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmin <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(f1 <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (f2 <= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST12

        echo test 12:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 13.
if test $result = ok -a $start_test_number -le 13; then
        cat >$test_file <<'TEST13'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f1, f2;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <  pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <  ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <  f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan <  pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <  pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <  pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <  pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz <  f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <  nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <  pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <  ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <  pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <  pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz <  f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (ni <  ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <  pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin <  f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmax <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <  nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <  f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmin <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmin <  f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (f1 <  f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (f2 <  f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST13

        echo test 13:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 14.
if test $result = ok -a $start_test_number -le 14; then
        cat >$test_file <<'TEST14'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d1, d2;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <  d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <  pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <  ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan <  d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan <  pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <  nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <  pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <  pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <  pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz <  d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <  nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <  pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <  ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <  pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <  pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz <  d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <  d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (ni <  ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <  d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <  d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <  pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin <  d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmax <  nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <  nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <  d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmin <  nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmin <  d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (d1 <  d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (d2 <  d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST14

        echo test 14:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 15.
if test $result = ok -a $start_test_number -le 15; then
        cat >$test_file <<'TEST15'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f1, f2;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan >= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan >= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan >= f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan >= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= pz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz >= pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz >= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz >= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (pz >= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz >= pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz >= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz >= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nz >= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin >= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin >= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmax >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax >= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax >= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmin >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmin >= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(f1 >= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(f2 >= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST15

        echo test 15:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 16.
if test $result = ok -a $start_test_number -le 16; then
        cat >$test_file <<'TEST16'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d1, d2;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan >= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan >= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (qnan >= d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan >= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= pz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz >= pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz >= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz >= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (pz >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz >= pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz >= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz >= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nz >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin >= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmax >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax >= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmin >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmin >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(d1 >= d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(d2 >= d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST16

        echo test 16:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 17.
if test $result = ok -a $start_test_number -le 17; then
        cat >$test_file <<'TEST17'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f1, f2;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char res [MAX_SINGLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + f1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan + pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan + ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan + f1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan + pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + pz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + nz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz + pmax) == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz + pmin) == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz + nmin) == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!((pz + f1) == f1)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + nz).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz + pmax) == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz + pmin) == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz + nmin) == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!((nz + f1) == f1)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + f1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni + ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + f1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax + pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax + pmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax + pmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmax + pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax + pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax + pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmax + nmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((pmax + nmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if ((pmax + nmin) == pmax
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((pmax + nmin) == pmax
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmax + f1) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + f1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax + f1) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax + f1) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin + pmin).to_string (res);
  if (strcmp (res, "2.80259693e-45") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmin + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((pmin + nmax) == nmax
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if ((pmin + nmax) == nmax
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmin + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin + nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmin + f1) == f1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmin + f1) == f1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmin + f1) == f1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (pmin + f1).to_string (res);
  if (strcmp (res, "1.23456713e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax + nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax + nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((nmax + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((nmax + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((nmax + nmin) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((nmax + nmin) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((nmax + nmin) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax + nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((nmax + f1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((nmax + f1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if ((nmax + f1) == nmax
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((nmax + f1) == nmax
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmin + nmin).to_string (res);
  if (strcmp (res, "-2.80259693e-45") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((nmin + f1) == f1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((nmin + f1) == f1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (nmin + f1).to_string (res);
  if (strcmp (res, "1.23456688e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (nmin + f1).to_string (res);
  if (strcmp (res, "1.23456688e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (f1 + f1).to_string (res);
  if (strcmp (res, "2.46913400e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (f1 + f2).to_string (res);
  if (strcmp (res, "2.46913500e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST17

        echo test 17:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 18.
if test $result = ok -a $start_test_number -le 18; then
        cat >$test_file <<'TEST18'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d1, d2;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char res [MAX_DOUBLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan + pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan + ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan + d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan + pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + pz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + nz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + pmax == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + pmin == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + nmax == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + nmin == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz + d1 == d1)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + nz).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + pmax == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + pmin == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + nmax == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + nmin == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz + d1 == d1)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni + ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax + pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax + pmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax + pmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax + pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax + pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax + pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax + nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if ((pmax + nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((pmax + nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax + d1 == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax + d1 == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax + d1 == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin + pmin).to_string (res);
  if (strcmp (res, "9.8813129168249309e-324") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin + nmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((pmin + nmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if ((pmin + nmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmin + nmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin + nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin + d1 == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin + d1 == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmin + d1 == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (pmin + d1).to_string (res);
  if (strcmp (res, "1.2345670000000002e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax + nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax + nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax + nmax == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax + nmax == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax + nmin == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax + nmin == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax + nmin == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax + nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax + d1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax + d1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if ((nmax + d1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((nmax + d1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmin + nmin).to_string (res);
  if (strcmp (res, "-9.8813129168249309e-324") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmin + d1 == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmin + d1 == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (nmin + d1).to_string (res);
  if (strcmp (res, "1.2345669999999998e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (nmin + d1).to_string (res);
  if (strcmp (res, "1.2345669999999998e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 + d1).to_string (res);
  if (strcmp (res, "2.4691340000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 + d2).to_string (res);
  if (strcmp (res, "2.4691350000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST18

        echo test 18:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 19.
if test $result = ok -a $start_test_number -le 19; then
        cat >$test_file <<'TEST19'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f1, f2;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char res [MAX_SINGLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("-1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - f1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan - pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan - ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan - f1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan - pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - nz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pi).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - nmax == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - nmin == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pmax == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pmin == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  (pz - f1).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - nz).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - pi).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - nmax == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - nmin == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - pmax == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - pmin == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  (nz - f1).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - f1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni - pi).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - f1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax - nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax - nmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax - nmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax - nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax - nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax - nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax - pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if ((pmax - pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((pmax - pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax - f1 == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - f1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax - f1 == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax - f1 == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin - nmin).to_string (res);
  if (strcmp (res, "2.80259693e-45") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin - pmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((pmin - pmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if ((pmin - pmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmin - pmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin - pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (pmin - f1).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (pmin - f1).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmin - f1).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (pmin - f1).to_string (res);
  if (strcmp (res, "1.23456713e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax - pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax - pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax - pmax == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax - pmax == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax - pmin == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax - pmin == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax - pmin == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax - pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax - f1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax - f1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if ((nmax - f1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((nmax - f1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmin - pmin).to_string (res);
  if (strcmp (res, "-2.80259693e-45") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (nmin - f1).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (nmin - f1).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (nmin - f1).to_string (res);
  if (strcmp (res, "1.23456688e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (nmin - f1).to_string (res);
  if (strcmp (res, "1.23456688e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(f1 - f1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (f1 - f2).to_string (res);
  if (strcmp (res, "-2.46913500e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST19

        echo test 19:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 20.
if test $result = ok -a $start_test_number -le 20; then
        cat >$test_file <<'TEST20'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d1, d2;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char res [MAX_DOUBLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("-1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan - pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan - ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan - d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan - pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - nz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pi).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - nmax == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - nmin == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pmax == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pmin == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  (pz - d1).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - nz).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - pi).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - nmax == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - nmin == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - pmax == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - pmin == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  (nz - d1).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni - pi).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax - nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax - nmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax - nmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax - nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax - nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax - nmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax - pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if ((pmax - pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((pmax - pmin == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax - d1 == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax - d1 == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax - d1 == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin - nmin).to_string (res);
  if (strcmp (res, "9.8813129168249309e-324") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin - pmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((pmin - pmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if ((pmin - pmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmin - pmax == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin - pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (pmin - d1).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (pmin - d1).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmin - d1).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (pmin - d1).to_string (res);
  if (strcmp (res, "1.2345670000000002e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax - pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax - pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax - pmax == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax - pmax == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax - pmin == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax - pmin == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax - pmin == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax - pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax - d1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax - d1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if ((nmax - d1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if ((nmax - d1 == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmin - pmin).to_string (res);
  if (strcmp (res, "-9.8813129168249309e-324") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (nmin - d1).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (nmin - d1).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (nmin - d1).to_string (res);
  if (strcmp (res, "1.2345669999999998e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (nmin - d1).to_string (res);
  if (strcmp (res, "1.2345669999999998e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(d1 - d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 - d2).to_string (res);
  if (strcmp (res, "-2.4691350000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST20

        echo test 20:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 21.
if test $result = ok -a $start_test_number -le 21; then
        cat >$test_file <<'TEST21'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f1, f2;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char res [MAX_SINGLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("-12345");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("123");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * f1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan * f1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan * pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * nz).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz * f1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * nz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * pmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * pmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * nmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz * f1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * f1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni * ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * f1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax * pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax * pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax * pmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax * pmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmax * pmin).to_string (res);
  if (strcmp (res, "4.76837130e-7") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmax * nmin).to_string (res);
  if (strcmp (res, "-4.76837130e-7") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax * f1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax * f1 == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax * f1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax * f1 == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin * pmin == pmin)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmin * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin * nmax).to_string (res);
  if (strcmp (res, "-4.76837130e-7") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmin * nmin == nmin)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (pmin * f1).to_string (res);
  if (strcmp (res, "-1.72990295e-41") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax * nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax * nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax * nmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax * nmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmax * nmin).to_string (res);
  if (strcmp (res, "4.76837130e-7") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax * f1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax * f1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax * f1 == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax * f1 == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmin * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmin * nmin == pmin)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmin * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmin * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (nmin * f1).to_string (res);
  if (strcmp (res, "1.72990295e-41") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (f1 * f1).to_string (res);
  if (strcmp (res, "1.52399024e8") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (f1 * f2).to_string (res);
  if (strcmp (res, "-1.51843500e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST21

        echo test 21:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 22.
if test $result = ok -a $start_test_number -le 22; then
        cat >$test_file <<'TEST22'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d1, d2;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char res [MAX_DOUBLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("-12345");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("123");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan * d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan * pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * nz).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz * d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * nz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * pmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * pmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * nmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz * d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni * ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax * pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax * pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax * pmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax * pmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmax * pmin).to_string (res);
  if (strcmp (res, "8.8817841970012513e-16") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmax * nmin).to_string (res);
  if (strcmp (res, "-8.8817841970012513e-16") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax * d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax * d1 == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax * d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax * d1 == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin * pmin == pmin)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmin * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin * nmax).to_string (res);
  if (strcmp (res, "-8.8817841970012513e-16") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmin * nmin == nmin)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (pmin * d1).to_string (res);
  if (strcmp (res, "-6.0992403979101886e-320") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax * nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax * nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax * nmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax * nmax == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmax * nmin).to_string (res);
  if (strcmp (res, "8.8817841970012513e-16") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax * d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax * d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax * d1 == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax * d1 == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmin * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmin * nmin == pmin)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmin * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmin * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (nmin * d1).to_string (res);
  if (strcmp (res, "6.0992403979101886e-320") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 * d1).to_string (res);
  if (strcmp (res, "1.5239902500000000e8") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 * d2).to_string (res);
  if (strcmp (res, "-1.5184350000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST22

        echo test 22:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 23.
if test $result = ok -a $start_test_number -le 23; then
        cat >$test_file <<'TEST23'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f1, f2;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char res [MAX_SINGLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("-12345");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("123");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / f1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan / pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan / f1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan / pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pi).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / ni).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz / f1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / pz).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax / pz).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin / pz).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmin / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(f1 / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / pi).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / ni).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / pmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / pmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / nmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz / f1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);

  if (!(pi / pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / f1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / f1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmax / pmax).to_string (res);
  if (strcmp (res, "1.00000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax / pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax / pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax / pmin == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax / pmin == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax / nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax / nmin == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax / nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax / nmin == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (pmax / f1).to_string (res);
  if (strcmp (res, "-2.75643864e34") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (pmax / f1).to_string (res);
  if (strcmp (res, "-2.75643839e34") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmax / f1).to_string (res);
  if (strcmp (res, "-2.75643864e34") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (pmax / f1).to_string (res);
  if (strcmp (res, "-2.75643839e34") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin / pmin).to_string (res);
  if (strcmp (res, "1.00000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmin / nmax).to_string (res);
  if (strcmp (res, "-1.40129846e-45") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin / nmin).to_string (res);
  if (strcmp (res, "-1.00000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin / f1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin / f1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmin / f1).to_string (res);
  if (strcmp (res, "-1.40129846e-45") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin / f1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmax / nmax).to_string (res);
  if (strcmp (res, "1.00000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax / nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax / nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax / nmin == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax / nmin == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (nmax / f1).to_string (res);
  if (strcmp (res, "2.75643864e34") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (nmax / f1).to_string (res);
  if (strcmp (res, "2.75643864e34") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (nmax / f1).to_string (res);
  if (strcmp (res, "2.75643839e34") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (nmax / f1).to_string (res);
  if (strcmp (res, "2.75643839e34") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmin / nmin).to_string (res);
  if (strcmp (res, "1.00000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmin / f1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (nmin / f1).to_string (res);
  if (strcmp (res, "1.40129846e-45") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmin / f1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmin / f1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (f1 / f1).to_string (res);
  if (strcmp (res, "1.00000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (f1 / f2).to_string (res);
  if (strcmp (res, "-1.00365852e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (f1 / f2).to_string (res);
  if (strcmp (res, "-1.00365852e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (f1 / f2).to_string (res);
  if (strcmp (res, "-1.00365860e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (f1 / f2).to_string (res);
  if (strcmp (res, "-1.00365852e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST23

        echo test 23:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 24.
if test $result = ok -a $start_test_number -le 24; then
        cat >$test_file <<'TEST24'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d1, d2;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char res [MAX_DOUBLE_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("-12345");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("123");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan / pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                      
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                          
  if (!(qnan / d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan / pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pi).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / ni).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz / d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / pz).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax / pz).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin / pz).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmin / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(d1 / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / pi).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / ni).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / pmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / pmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / nmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz / d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);

  if (!(pi / pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmax / pmax).to_string (res);
  if (strcmp (res, "1.0000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax / pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax / pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax / pmin == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax / pmin == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax / nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax / nmin == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax / nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmax / nmin == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (pmax / d1).to_string (res);
  if (strcmp (res, "-1.4562115308726738e304") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (pmax / d1).to_string (res);
  if (strcmp (res, "-1.4562115308726735e304") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmax / d1).to_string (res);
  if (strcmp (res, "-1.4562115308726738e304") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (pmax / d1).to_string (res);
  if (strcmp (res, "-1.4562115308726735e304") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin / pmin).to_string (res);
  if (strcmp (res, "1.0000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmin / nmax).to_string (res);
  if (strcmp (res, "-4.9406564584124654e-324") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin / nmin).to_string (res);
  if (strcmp (res, "-1.0000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin / d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin / d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmin / d1).to_string (res);
  if (strcmp (res, "-4.9406564584124654e-324") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin / d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmax / nmax).to_string (res);
  if (strcmp (res, "1.0000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax / nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax / nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax / nmin == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmax / nmin == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (nmax / d1).to_string (res);
  if (strcmp (res, "1.4562115308726738e304") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (nmax / d1).to_string (res);
  if (strcmp (res, "1.4562115308726738e304") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (nmax / d1).to_string (res);
  if (strcmp (res, "1.4562115308726735e304") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (nmax / d1).to_string (res);
  if (strcmp (res, "1.4562115308726735e304") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmin / nmin).to_string (res);
  if (strcmp (res, "1.0000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmin / d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (nmin / d1).to_string (res);
  if (strcmp (res, "4.9406564584124654e-324") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmin / d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmin / d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 / d1).to_string (res);
  if (strcmp (res, "1.0000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (d1 / d2).to_string (res);
  if (strcmp (res, "-1.0036585365853658e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (d1 / d2).to_string (res);
  if (strcmp (res, "-1.0036585365853658e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (d1 / d2).to_string (res);
  if (strcmp (res, "-1.0036585365853659e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (d1 / d2).to_string (res);
  if (strcmp (res, "-1.0036585365853658e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST24

        echo test 24:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 25.
if test $result = ok -a $start_test_number -le 25; then
        cat >$test_file <<'TEST25'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char *r;
  char res [MAX_DOUBLE_10_STRING_LENGTH+1];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  if (!snan.to_double ().is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!qnan.to_double ().is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!pz.to_double ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!nz.to_double ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!pi.to_double ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!ni.to_double ().is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pmax.to_double ().to_string (res);
  if (strcmp (res, "3.4028234663852886e38") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pmin.to_double ().to_string (res);
  if (strcmp (res, "1.4012984643248171e-45") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nmax.to_double ().to_string (res);
  if (strcmp (res, "-3.4028234663852886e38") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nmin.to_double ().to_string (res);
  if (strcmp (res, "-1.4012984643248171e-45") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_double ().to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_double ().to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_double ().to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_double ().to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST25

        echo test 25:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 26.
if test $result = ok -a $start_test_number -le 26; then
        cat >$test_file <<'TEST26'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char *r;
  char res [MAX_DOUBLE_10_STRING_LENGTH+1];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  if (!snan.to_single ().is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!qnan.to_single ().is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!pz.to_single ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!nz.to_single ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!pi.to_single ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!pi.to_single ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!pi.to_single ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!pi.to_single ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!ni.to_single ().is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  pmax.to_single ().to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  pmax.to_single ().to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  pmax.to_single ().to_string (res);
  if (strcmp (res, "3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  pmax.to_single ().to_string (res);
  if (strcmp (res, "3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!pmin.to_single ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  pmin.to_single ().to_string (res);
  if (strcmp (res, "1.40129846e-45") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!pmin.to_single ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!pmin.to_single ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  nmax.to_single ().to_string (res);
  if (strcmp (res, "-Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  nmax.to_single ().to_string (res);
  if (strcmp (res, "-3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  nmax.to_single ().to_string (res);
  if (strcmp (res, "-Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  nmax.to_single ().to_string (res);
  if (strcmp (res, "-3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!nmin.to_single ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!nmin.to_single ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  nmin.to_single ().to_string (res);
  if (strcmp (res, "-1.40129846e-45") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!nmin.to_single ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  r = d.from_string ("123456");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456000e5") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456000e5") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  r = d.from_string ("12345678990123");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456790e13") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456790e13") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456780e13") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456780e13") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST26

        echo test 26:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 27.
if test $result = ok -a $start_test_number -le 27; then
        cat >$test_file <<'TEST27'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  char res [MAX_SINGLE_10_STRING_LENGTH+1];
  unsigned char integer[4];
  unsigned char long_integer[17];
  IEEE_float_t f;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.from_signed_integer (4, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (4, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (4, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (4, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::from_string (4, "1234567", integer);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::from_string (4, "-1234567", integer);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "-1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "-1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "-1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "-1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::from_string (4, "1234567890", integer);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456794e9") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456794e9") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456781e9") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (4, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456781e9") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::maximum (17, long_integer);
  f.from_signed_integer (17, long_integer);
  f.to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (17, long_integer);
  f.to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (17, long_integer);
  f.to_string (res);
  if (strcmp (res, "3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (17, long_integer);
  f.to_string (res);
  if (strcmp (res, "3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST27

        echo test 27:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 28.
if test $result = ok -a $start_test_number -le 28; then
        cat >$test_file <<'TEST28'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  char res [MAX_DOUBLE_10_STRING_LENGTH+1];
  unsigned char integer[8];
  unsigned char long_integer[257];
  IEEE_double_t d;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.from_signed_integer (8, integer::zero_constant);
  d.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.from_signed_integer (8, integer::zero_constant);
  d.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.from_signed_integer (8, integer::zero_constant);
  d.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.from_signed_integer (8, integer::zero_constant);
  d.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::from_string (8, "1234567", integer);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::from_string (8, "-1234567", integer);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "-1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "-1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "-1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "-1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::from_string (8, "1234567890123456789", integer);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "1.2345678901234568e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "1.2345678901234570e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "1.2345678901234568e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.from_signed_integer (8, integer);
  d.to_string (res);
  if (strcmp (res, "1.2345678901234568e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::maximum (257, long_integer);
  d.from_signed_integer (257, long_integer);
  d.to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.from_signed_integer (257, long_integer);
  d.to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.from_signed_integer (257, long_integer);
  d.to_string (res);
  if (strcmp (res, "1.7976931348623157e308") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.from_signed_integer (257, long_integer);
  d.to_string (res);
  if (strcmp (res, "1.7976931348623157e308") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST28

        echo test 28:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 29.
if test $result = ok -a $start_test_number -le 29; then
        cat >$test_file <<'TEST29'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  char res [MAX_SINGLE_10_STRING_LENGTH+1];
  unsigned char unsigned_integer[4];
  unsigned char long_unsigned_integer[16];
  IEEE_float_t f;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.from_unsigned_integer (4, integer::zero_constant).to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_unsigned_integer (4, integer::zero_constant).to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_unsigned_integer (4, integer::zero_constant).to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_unsigned_integer (4, integer::zero_constant).to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  unsigned_integer::from_string (4, "1234567", unsigned_integer);
  f.from_unsigned_integer (4, unsigned_integer).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_unsigned_integer (4, unsigned_integer).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_unsigned_integer (4, unsigned_integer).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_unsigned_integer (4, unsigned_integer).to_string (res);
  if (strcmp (res, "1.23456700e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  unsigned_integer::from_string (4, "1234567890", unsigned_integer);
  f.from_unsigned_integer (4, unsigned_integer).to_string (res);
  if (strcmp (res, "1.23456794e9") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_unsigned_integer (4, unsigned_integer).to_string (res);
  if (strcmp (res, "1.23456794e9") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_unsigned_integer (4, unsigned_integer).to_string (res);
  if (strcmp (res, "1.23456781e9") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_unsigned_integer (4, unsigned_integer).to_string (res);
  if (strcmp (res, "1.23456781e9") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  unsigned_integer::maximum (16, long_unsigned_integer);
  f.from_unsigned_integer (16, long_unsigned_integer).to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_unsigned_integer (16, long_unsigned_integer).to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_unsigned_integer (16, long_unsigned_integer).to_string (res);
  if (strcmp (res, "3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_unsigned_integer (16, long_unsigned_integer).to_string (res);
  if (strcmp (res, "3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST29

        echo test 29:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 30.
if test $result = ok -a $start_test_number -le 30; then
        cat >$test_file <<'TEST30'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  char res [MAX_DOUBLE_10_STRING_LENGTH+1];
  unsigned char unsigned_integer[8];
  unsigned char long_unsigned_integer[128];
  IEEE_double_t d;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.from_unsigned_integer (8, integer::zero_constant).to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.from_unsigned_integer (8, integer::zero_constant).to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.from_unsigned_integer (8, integer::zero_constant).to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.from_unsigned_integer (8, integer::zero_constant).to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  unsigned_integer::from_string (8, "1234567", unsigned_integer);
  d.from_unsigned_integer (8, unsigned_integer).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.from_unsigned_integer (8, unsigned_integer).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.from_unsigned_integer (8, unsigned_integer).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.from_unsigned_integer (8, unsigned_integer).to_string (res);
  if (strcmp (res, "1.2345670000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  unsigned_integer::from_string (8, "1234567890123456789", unsigned_integer);
  d.from_unsigned_integer (8, unsigned_integer).to_string (res);
  if (strcmp (res, "1.2345678901234568e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.from_unsigned_integer (8, unsigned_integer).to_string (res);
  if (strcmp (res, "1.2345678901234570e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.from_unsigned_integer (8, unsigned_integer).to_string (res);
  if (strcmp (res, "1.2345678901234568e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.from_unsigned_integer (8, unsigned_integer).to_string (res);
  if (strcmp (res, "1.2345678901234568e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  unsigned_integer::maximum (128, long_unsigned_integer);
  d.from_unsigned_integer (128, long_unsigned_integer).to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.from_unsigned_integer (128, long_unsigned_integer).to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.from_unsigned_integer (128, long_unsigned_integer).to_string (res);
  if (strcmp (res, "1.7976931348623157e308") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.from_unsigned_integer (128, long_unsigned_integer).to_string (res);
  if (strcmp (res, "1.7976931348623157e308") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST30

        echo test 30:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 31.
if test $result = ok -a $start_test_number -le 31; then
        cat >$test_file <<'TEST31'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char *r;
  char res [MAX_SINGLE_10_STRING_LENGTH+1];
  unsigned char integer[4];
  unsigned char result[4];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  snan.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  qnan.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pz.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nz.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::maximum (4, result);
  pi.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::minimum (4, result);
  ni.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::maximum (4, result);
  pmax.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::minimum (4, result);
  nmax.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  pmin.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::from_string (4, "1", result);
  IEEE::set_round (IEEE_RP);
  pmin.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  pmin.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  pmin.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  nmin.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  nmin.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::from_string (4, "-1", result);
  IEEE::set_round (IEEE_RM);
  nmin.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  nmin.to_signed_integer (4, integer);
  if (signed_integer::ne (4, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "-1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "-1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "-1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (4, integer);
  signed_integer::to_string (4, integer, res);
  if (strcmp (res, "-1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST31

        echo test 31:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 32.
if test $result = ok -a $start_test_number -le 32; then
        cat >$test_file <<'TEST32'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t f;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char *r;
  char res [MAX_DOUBLE_10_STRING_LENGTH+1];
  unsigned char integer[8];
  unsigned char result[8];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  snan.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  qnan.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pz.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nz.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::maximum (8, result);
  pi.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::minimum (8, result);
  ni.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::maximum (8, result);
  pmax.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::minimum (8, result);
  nmax.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  pmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::from_string (8, "1", result);
  IEEE::set_round (IEEE_RP);
  pmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  pmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  pmin.to_signed_integer (8,  integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  nmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  nmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::from_string (8, "-1", result);
  IEEE::set_round (IEEE_RM);
  nmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  nmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST32

        echo test 32:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 33.
if test $result = ok -a $start_test_number -le 33; then
        cat >$test_file <<'TEST33'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char *r;
  char res [MAX_SINGLE_10_STRING_LENGTH+1];
  unsigned char unsigned_integer[4];
  unsigned char result[4];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  snan.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  qnan.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pz.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nz.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  unsigned_integer::maximum (4, result);
  pi.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  ni.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  unsigned_integer::maximum (4, result);
  pmax.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nmax.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  pmin.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  unsigned_integer::from_string (4, "1", result);
  IEEE::set_round (IEEE_RP);
  pmin.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  pmin.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  pmin.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  nmin.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  nmin.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  nmin.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  nmin.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_unsigned_integer (4, unsigned_integer);
  unsigned_integer::to_string (4, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_unsigned_integer (4, unsigned_integer);
  unsigned_integer::to_string (4, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_unsigned_integer (4, unsigned_integer);
  unsigned_integer::to_string (4, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_unsigned_integer (4, unsigned_integer);
  unsigned_integer::to_string (4, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  f.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_unsigned_integer (4, unsigned_integer);
  unsigned_integer::to_string (4, unsigned_integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_unsigned_integer (4, unsigned_integer);
  unsigned_integer::to_string (4, unsigned_integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_unsigned_integer (4, unsigned_integer);
  unsigned_integer::to_string (4, unsigned_integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_unsigned_integer (4, unsigned_integer);
  unsigned_integer::to_string (4, unsigned_integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  f.to_unsigned_integer (4, unsigned_integer);
  if (unsigned_integer::ne (4, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST33

        echo test 33:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 34.
if test $result = ok -a $start_test_number -le 34; then
        cat >$test_file <<'TEST34'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t d;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char *r;
  char res [MAX_DOUBLE_10_STRING_LENGTH+1];
  unsigned char unsigned_integer[8];
  unsigned char result[8];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                       | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  snan.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  qnan.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pz.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nz.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  unsigned_integer::maximum (8, result);
  pi.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  ni.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  unsigned_integer::maximum (8, result);
  pmax.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nmax.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  pmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  unsigned_integer::from_string (8, "1", result);
  IEEE::set_round (IEEE_RP);
  pmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  pmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  pmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  nmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  nmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  nmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  nmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("-1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  d.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("-1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  d.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST34

        echo test 34:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 35.
if test $result = ok -a $start_test_number -le 35; then
        cat >$test_file <<'TEST35'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d, pm, nm;
  char str [500], res [MAX_QUAD_2_STRING_LENGTH+1], *r1, *r2;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.0");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.00000000000000000000000000000000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "2.");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("2.00000000000000000000000000000000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-0.3e1");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-3.00000000000000000000000000000000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.8p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.4p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.2p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.1p1", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+4");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("4.00000000000000000000000000000000000", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (16, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (8, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (4, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  r2 = d.to_binary_string (2, res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p2", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+.");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.e-10000");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "5555.5");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("5.55550000000000000000000000000000000e3", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+4932");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.00000000000000000000000000000000001e4932", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, ".0000002e4938");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.99999999999999999999999999999999996e4931", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "30000000E+4924");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("2.99999999999999999999999999999999980e4931", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "4000000000000000000000000000000000000000000000000000000000000\
0000000000000000000000000000000000000000000000000000000000000000000000\
0000000000000000000000000000000000000000000000000000000000000000000000\
0000000000000000000000000000000000000000000000000000000000000000000000\
000000000000000000000000000000");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("4.00000000000000000000000000000000016e300", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-12345.000e-10");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.23450000000000000000000000000000005e-6", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.234567890123456e+4931");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.23456789012345600000000000000000003e4931", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.2345678901234567e4931");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.23456789012345669999999999999999996e4931", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1234567890123456101234567890123456780");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("1.23456789012345610123456789012345677e36", res) != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+Inf");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-Inf");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "QNaN");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("QNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "SNaN");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("SNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "+abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 1 || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 1 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 2 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.e+abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 2 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-.e-1abracadabra");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || r1 != str + 5 || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = d.from_string (str);
  pm.positive_maximum ();
  if (*r1 != '\0' || d != pm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "1.e+3333333333333333333333333333333333333333333");
  r1 = d.from_string (str);
  pm.positive_maximum ();
  if (*r1 != '\0' || d != pm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e+4933");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RN);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e+4933");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  r1 = d.from_string (str);
  strcpy (str, "-1.e+4933");
  nm.negative_maximum ();
  if (*r1 != '\0' || d != nm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  r1 = d.from_string (str);
  strcpy (str, "-1.e+4933");
  nm.negative_maximum ();
  if (*r1 != '\0' || d != nm
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-4977");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-4977");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RN);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-4977");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  r1 = d.from_string (str);
  strcpy (str, "-1.e-4977");
  nm.negative_minimum ();
  if (*r1 != '\0' || d != nm
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RN);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-4934");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-9.99999999999999999999999999999997705e-4935", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RP);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-4934");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-9.99999999999999999999999999999997705e-4935", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RZ);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-4934");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-9.99999999999999999999999999999997705e-4935", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_round (IEEE_RM);
  IEEE::set_sticky_status_bits (0);
  strcpy (str, "-1.e-4934");
  r1 = d.from_string (str);
  r2 = d.to_string (res);
  if (r2 != res || *r1 != '\0' || strcmp ("-1.00000000000000000000000000000006246e-4934", res) != 0
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pm.positive_maximum ();
  r2 = pm.to_binary_string (16, res);
  r1 = d.from_binary_string ("1.ffffffffffffffffffffffffffffp16383", 16);
  if (r2 != res || *r1 != '\0' || strcmp ("1.ffffffffffffffffffffffffffffp16383", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (8, res);
  r1 = d.from_binary_string ("1.77777777777777777777777777777777777774p16383", 8);
  if (r2 != res || *r1 != '\0' || strcmp ("1.77777777777777777777777777777777777774p16383", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (4, res);
  r1 = d.from_binary_string ("1.33333333333333333333333333333333333333333333333333333333p16383", 4);
  if (r2 != res || *r1 != '\0' || strcmp ("1.33333333333333333333333333333333333333333333333333333333p16383", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (2, res);
  r1 = d.from_binary_string ("1.1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111p16383", 2);
  if (r2 != res || *r1 != '\0' || strcmp ("1.1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111p16383", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pm.positive_minimum ();
  r2 = pm.to_binary_string (16, res);
  r1 = d.from_binary_string ("1.p-16494", 16);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-16494", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (8, res);
  r1 = d.from_binary_string ("1.p-16494", 8);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-16494", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (4, res);
  r1 = d.from_binary_string ("1.p-16494", 4);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-16494", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r2 = pm.to_binary_string (2, res);
  r1 = d.from_binary_string ("1.p-16494", 2);
  if (r2 != res || *r1 != '\0' || strcmp ("1.p-16494", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0
      || pm != d)
    exit (1);
  exit (0);
}
TEST35

        echo test 35:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 36.
if test $result = ok -a $start_test_number -le 36; then
        cat >$test_file <<'TEST36'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d;
  char res [MAX_QUAD_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  d.positive_zero ();
  r = d.to_string (res);
  if (!d.is_positive_zero () || r != res || strcmp ("+0", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_zero ();
  r = d.to_string (res);
  if (!d.is_negative_zero () || r != res || strcmp ("-0", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.NaN ();
  r = d.to_string (res);
  if (!d.is_NaN () || r != res || strcmp ("QNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.trapping_NaN ();
  r = d.to_string (res);
  if (!d.is_trapping_NaN () || r != res || strcmp ("SNaN", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_infinity ();
  r = d.to_string (res);
  if (!d.is_positive_infinity () || r != res
      || strcmp ("+Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_infinity ();
  r = d.to_string (res);
  if (!d.is_negative_infinity () || r != res
      || strcmp ("-Inf", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_maximum ();
  r = d.to_string (res);
  if (r != res || strcmp ("1.18973149535723176508575932662800702e4932", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_maximum ();
  r = d.to_string (res);
  if (r != res || strcmp ("-1.18973149535723176508575932662800702e4932", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_minimum ();
  r = d.to_string (res);
  if (r != res || strcmp ("6.47517511943802511092443895822764655e-4966", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_minimum ();
  r = d.to_string (res);
  if (r != res || strcmp ("-6.47517511943802511092443895822764655e-4966", res) != 0
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST36

        echo test 36:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 37.
if test $result = ok -a $start_test_number -le 37; then
        cat >$test_file <<'TEST37'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  d.positive_zero ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_zero ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_infinity ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_infinity ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.NaN ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.trapping_NaN ();
  if (d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_maximum ();
  if (!d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_maximum ();
  if (!d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.positive_minimum ();
  if (d.is_normalized () || !d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  d.negative_minimum ();
  if (d.is_normalized () || !d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("-1.e-4932");
  if (*r != '\0'
      || d.is_normalized () || !d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != (IEEE_UFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("-1.e-4930");
  if (*r != '\0'
      || !d.is_normalized () || d.is_denormalized ()
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST37

        echo test 37:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 38.
if test $result = ok -a $start_test_number -le 38; then
        cat >$test_file <<'TEST38'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d1, d2;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  r = d1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan == d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz == pz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz == nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz == pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz == nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz == pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi == pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi == ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni == ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(d1 == d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (d2 == d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  if (snan != snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan != d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan != d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz != pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz != nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz != pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz != ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz != nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz != pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz != ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi != pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi != ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (ni != ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (d1 != d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(d2 != d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST38

        echo test 38:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 39.
if test $result = ok -a $start_test_number -le 39; then
        cat >$test_file <<'TEST39'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t f1, f2;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan > f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan > pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan > ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan > f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan > pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan > nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz > ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (pz > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz > ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nz > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi > pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi > f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (ni > ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax > pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax > f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin > pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin > nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin > nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmax > nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax > nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmin > nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmin > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (f1 > f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(f2 > f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST39

        echo test 39:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 40.
if test $result = ok -a $start_test_number -le 40; then
        cat >$test_file <<'TEST40'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t f1, f2;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = f1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = f2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan <= f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan <= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan <= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan <= f1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan <= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan <= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <= ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <= ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi <= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi <= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni <= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax <= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax <= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin <= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin <= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmax <= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmin <= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmin <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(f1 <= f1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (f2 <= f1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST40

        echo test 40:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 41.
if test $result = ok -a $start_test_number -le 41; then
        cat >$test_file <<'TEST41'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d1, d2;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan < d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan < pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan < nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan < pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan < ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan < d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan < pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan < pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan < nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan < nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz < pz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz < nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz < pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz < ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz < pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz < pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz < nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz < nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz < d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz < nz || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz < pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz < ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz < pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz < pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz < nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz < nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz < d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi < pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi < ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi < pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi < pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi < nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi < nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pi < d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (ni < ni || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni < pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni < pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni < nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni < nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni < d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax < pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax < pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax < nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax < nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmax < d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin < pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin < nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin < nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin < d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmax < nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax < nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax < d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nmin < nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmin < d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (d1 < d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (d2 < d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST41

        echo test 41:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 42.
if test $result = ok -a $start_test_number -le 42; then
        cat >$test_file <<'TEST42'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d1, d2;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= snan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= qnan || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (snan >= d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= pz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= nz || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan >= pi || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan >= ni || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (qnan >= d1 || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (qnan >= pmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= pmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= nmax || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (qnan >= nmin || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= pz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz >= pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz >= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pz >= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (pz >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= nz) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz >= pi || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz >= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nz >= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (nz >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= pi) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi >= d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni >= ni) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= pmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= pmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= nmax || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (ni >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= pmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax >= d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin >= pmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (pmin >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmax >= nmax) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax >= nmin || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmax >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nmin >= nmin) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (nmin >= d1 || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(d1 >= d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(d2 >= d1) || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST42

        echo test 42:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 43.
if test $result = ok -a $start_test_number -le 43; then
        cat >$test_file <<'TEST43'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d1, d2;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char res [MAX_QUAD_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan + d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan + pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan + ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan + d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan + pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan + nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + pz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + nz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz + ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz + pmax) == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz + pmin) == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz + nmin) == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!((pz + d1) == d1)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + nz).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz + ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz + pmax) == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz + pmin) == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz + nmin) == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!((nz + d1) == d1)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi + d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni + ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni + d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax + pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax + pmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax + pmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmax + pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax + pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax + pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmax + nmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((pmax + nmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (((pmax + nmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (((pmax + nmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmax + d1) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax + d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax + d1) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax + d1) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin + pmin).to_string (res);
  if (strcmp (res, "1.29503502388760502218488779164552931e-4965") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmin + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (((pmin + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (((pmin + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmin + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin + nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmin + d1) == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmin + d1) == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmin + d1) == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (pmin + d1).to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000020e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax + nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax + nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((nmax + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((nmax + nmax) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((nmax + nmin) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((nmax + nmin) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((nmax + nmin) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax + nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((nmax + d1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((nmax + d1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (((nmax + d1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (((nmax + d1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmin + nmin).to_string (res);
  if (strcmp (res, "-1.29503502388760502218488779164552931e-4965") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((nmin + d1) == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((nmin + d1) == d1)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (nmin + d1).to_string (res);
  if (strcmp (res, "1.23456699999999999999999999999999980e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (nmin + d1).to_string (res);
  if (strcmp (res, "1.23456699999999999999999999999999980e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 + d1).to_string (res);
  if (strcmp (res, "2.46913400000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 + d2).to_string (res);
  if (strcmp (res, "2.46913500000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST43

        echo test 43:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 44.
if test $result = ok -a $start_test_number -le 44; then
        cat >$test_file <<'TEST44'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d1, d2;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char res [MAX_QUAD_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("-1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("1234568");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan - d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan - pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan - ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan - d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan - pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan - nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - nz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz - pi).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz - nmax) == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz - nmin) == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz - pmax) == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((pz - pmin) == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  (pz - d1).to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - nz).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz - pi).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz - nmax) == pmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz - nmin) == pmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz - pmax) == nmax)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!((nz - pmin) == nmin)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  (nz - d1).to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi - d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni - pi).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni - d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax - nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax - nmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax - nmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmax - nmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax - nmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax - nmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmax - pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((pmax - pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (((pmax - pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (((pmax - pmin) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmax - d1) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax - d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax - d1) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax - d1) == pmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin - nmin).to_string (res);
  if (strcmp (res, "1.29503502388760502218488779164552931e-4965") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((pmin - pmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (((pmin - pmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (((pmin - pmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmin - pmax) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin - pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (pmin - d1).to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (pmin - d1).to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmin - d1).to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (pmin - d1).to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000020e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax - pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax - pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((nmax - pmax) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((nmax - pmax) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_OFL | IEEE_IMP)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((nmax - pmin) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((nmax - pmin) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((nmax - pmin) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmax - pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!((nmax - d1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((nmax - d1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (((nmax - d1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (((nmax - d1) == nmax)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmin - pmin).to_string (res);
  if (strcmp (res, "-1.29503502388760502218488779164552931e-4965") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (nmin - d1).to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (nmin - d1).to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (nmin - d1).to_string (res);
  if (strcmp (res, "1.23456699999999999999999999999999980e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (nmin - d1).to_string (res);
  if (strcmp (res, "1.23456699999999999999999999999999980e6") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(d1 - d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 - d2).to_string (res);
  if (strcmp (res, "-2.46913500000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST44

        echo test 44:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 45.
if test $result = ok -a $start_test_number -le 45; then
        cat >$test_file <<'TEST45'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d1, d2;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char res [MAX_QUAD_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("-12345");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("123");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan * d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan * d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan * pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan * nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * nz).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz * d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * nz).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * pmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * pmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * nmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz * d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * pi).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * ni).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi * d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni * ni).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni * d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax * pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax * pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax * pmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax * pmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmax * pmin).to_string (res);
  if (strcmp (res, "7.70371977754894341222391177033970853e-34") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmax * nmin).to_string (res);
  if (strcmp (res, "-7.70371977754894341222391177033970853e-34") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax * d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((pmax * d1) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax * d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax * d1) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((pmin * pmin) == pmin)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmin * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin * pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin * nmax).to_string (res);
  if (strcmp (res, "-7.70371977754894341222391177033970853e-34") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmin * nmin) == nmin)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin * nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (pmin * d1).to_string (res);
  if (strcmp (res, "-7.99360368494624199943621989393202966e-4962") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax * nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax * nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((nmax * nmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((nmax * nmax) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmax * nmin).to_string (res);
  if (strcmp (res, "7.70371977754894341222391177033970853e-34") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax * d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax * d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((nmax * d1) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((nmax * d1) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmin * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((nmin * nmin) == pmin)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmin * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmin * nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (nmin * d1).to_string (res);
  if (strcmp (res, "7.99360368494624199943621989393202966e-4962") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 * d1).to_string (res);
  if (strcmp (res, "1.52399025000000000000000000000000000e8") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 * d2).to_string (res);
  if (strcmp (res, "-1.51843500000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST45

        echo test 45:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 46.
if test $result = ok -a $start_test_number -le 46; then
        cat >$test_file <<'TEST46'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d1, d2;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char res [MAX_QUAD_10_STRING_LENGTH+1], *r;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  r = d1.from_string ("-12345");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  r = d2.from_string ("123");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / snan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / qnan).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(snan / d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan / pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)                                       
    exit (1);                                                                
  IEEE::set_sticky_status_bits (0);                                           
  if (!(qnan / d1).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(qnan / pmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / pmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / nmax).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(qnan / nmin).is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pi).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / ni).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / pmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pz / nmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(pz / d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / pz).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmax / pz).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pmin / pz).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmax / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nmin / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(d1 / pz).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != IEEE_DZ
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / nz).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / pi).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / ni).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / pmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / pmin).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / nmax).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(nz / nmin).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(nz / d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);

  if (!(pi / pi).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / pmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / nmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(pi / d1).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  if (!(ni / ni).is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV | IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / pmax).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / pmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / nmax).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!(ni / d1).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmax / pmax).to_string (res);
  if (strcmp (res, "1.00000000000000000000000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax / pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmax / pmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((pmax / pmin) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax / pmin) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmax / nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!((pmax / nmin) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(pmax / nmin).is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((pmax / nmin) == nmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (pmax / d1).to_string (res);
  if (strcmp (res, "-9.63735516692775832390246518127182742e4927") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (pmax / d1).to_string (res);
  if (strcmp (res, "-9.63735516692775832390246518127182602e4927") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmax / d1).to_string (res);
  if (strcmp (res, "-9.63735516692775832390246518127182742e4927") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (pmax / d1).to_string (res);
  if (strcmp (res, "-9.63735516692775832390246518127182602e4927") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin / pmin).to_string (res);
  if (strcmp (res, "1.00000000000000000000000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmin / nmax).to_string (res);
  if (strcmp (res, "-6.47517511943802511092443895822764655e-4966") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin / nmax).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (pmin / nmin).to_string (res);
  if (strcmp (res, "-1.00000000000000000000000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(pmin / d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(pmin / d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (pmin / d1).to_string (res);
  if (strcmp (res, "-6.47517511943802511092443895822764655e-4966") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(pmin / d1).is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmax / nmax).to_string (res);
  if (strcmp (res, "1.00000000000000000000000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmax / nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!(nmax / nmin).is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!((nmax / nmin) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!((nmax / nmin) == pmax)
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (nmax / d1).to_string (res);
  if (strcmp (res, "9.63735516692775832390246518127182742e4927") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (nmax / d1).to_string (res);
  if (strcmp (res, "9.63735516692775832390246518127182742e4927") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (nmax / d1).to_string (res);
  if (strcmp (res, "9.63735516692775832390246518127182602e4927") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (nmax / d1).to_string (res);
  if (strcmp (res, "9.63735516692775832390246518127182602e4927") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (nmin / nmin).to_string (res);
  if (strcmp (res, "1.00000000000000000000000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!(nmin / d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (nmin / d1).to_string (res);
  if (strcmp (res, "6.47517511943802511092443895822764655e-4966") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!(nmin / d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!(nmin / d1).is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  (d1 / d1).to_string (res);
  if (strcmp (res, "1.00000000000000000000000000000000000") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  (d1 / d2).to_string (res);
  if (strcmp (res, "-1.00365853658536585365853658536585361e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  (d1 / d2).to_string (res);
  if (strcmp (res, "-1.00365853658536585365853658536585361e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  (d1 / d2).to_string (res);
  if (strcmp (res, "-1.00365853658536585365853658536585373e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  (d1 / d2).to_string (res);
  if (strcmp (res, "-1.00365853658536585365853658536585361e2") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST46

        echo test 46:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 47.
if test $result = ok -a $start_test_number -le 47; then
        cat >$test_file <<'TEST47'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_float_t f;
  IEEE_float_t snan;
  IEEE_float_t qnan;
  IEEE_float_t pz;
  IEEE_float_t nz;
  IEEE_float_t pi;
  IEEE_float_t ni;
  IEEE_float_t pmax;
  IEEE_float_t nmax;
  IEEE_float_t pmin;
  IEEE_float_t nmin;
  char *r;
  char res [MAX_QUAD_10_STRING_LENGTH+1];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  if (!snan.to_quad ().is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!qnan.to_quad ().is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!pz.to_quad ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!nz.to_quad ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!pi.to_quad ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!ni.to_quad ().is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pmax.to_quad ().to_string (res);
  if (strcmp (res, "3.40282346638528859811704183484516925e38") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pmin.to_quad ().to_string (res);
  if (strcmp (res, "1.40129846432481707092372958328991613e-45") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nmax.to_quad ().to_string (res);
  if (strcmp (res, "-3.40282346638528859811704183484516925e38") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nmin.to_quad ().to_string (res);
  if (strcmp (res, "-1.40129846432481707092372958328991613e-45") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_quad ().to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_quad ().to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_quad ().to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_quad ().to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST47

        echo test 47:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 48.
if test $result = ok -a $start_test_number -le 48; then
        cat >$test_file <<'TEST48'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char *r;
  char res [MAX_QUAD_10_STRING_LENGTH+1];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  if (!snan.to_single ().is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!qnan.to_single ().is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!pz.to_single ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!nz.to_single ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!pi.to_single ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!pi.to_single ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!pi.to_single ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!pi.to_single ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!ni.to_single ().is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  pmax.to_single ().to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  pmax.to_single ().to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  pmax.to_single ().to_string (res);
  if (strcmp (res, "3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  pmax.to_single ().to_string (res);
  if (strcmp (res, "3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!pmin.to_single ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  pmin.to_single ().to_string (res);
  if (strcmp (res, "1.40129846e-45") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!pmin.to_single ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!pmin.to_single ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  nmax.to_single ().to_string (res);
  if (strcmp (res, "-Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  nmax.to_single ().to_string (res);
  if (strcmp (res, "-3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  nmax.to_single ().to_string (res);
  if (strcmp (res, "-Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  nmax.to_single ().to_string (res);
  if (strcmp (res, "-3.40282347e38") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!nmin.to_single ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!nmin.to_single ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  nmin.to_single ().to_string (res);
  if (strcmp (res, "-1.40129846e-45") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!nmin.to_single ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  r = d.from_string ("123456");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456000e5") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456000e5") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  r = d.from_string ("12345678990123");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456790e13") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456790e13") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456780e13") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.to_single ().to_string (res);
  if (strcmp (res, "1.23456780e13") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST48

        echo test 48:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 49.
if test $result = ok -a $start_test_number -le 49; then
        cat >$test_file <<'TEST49'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  char res [MAX_QUAD_10_STRING_LENGTH+1];
  unsigned char integer[16];
  unsigned char long_integer[4095];
  IEEE_quad_t f;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.from_signed_integer (16, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (16, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (16, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (16, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::from_string (16, "1234567", integer);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::from_string (16, "-1234567", integer);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "-1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "-1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "-1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "-1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::from_string (16, "123456789012345678901234567890123456789", integer);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456789012345678901234567890123456e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456789012345678901234567890123473e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456789012345678901234567890123456e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (16, integer);
  f.to_string (res);
  if (strcmp (res, "1.23456789012345678901234567890123456e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  signed_integer::maximum (4095, long_integer);
  f.from_signed_integer (4095, long_integer);
  f.to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_signed_integer (4095, long_integer);
  f.to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_signed_integer (4094, long_integer);
  f.to_string (res);
  if (strcmp (res, "1.18973149535723176508575932662800702e4932") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_signed_integer (4094, long_integer);
  f.to_string (res);
  if (strcmp (res, "1.18973149535723176508575932662800702e4932") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST49

        echo test 49:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 50.
if test $result = ok -a $start_test_number -le 50; then
        cat >$test_file <<'TEST50'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  char res [MAX_QUAD_10_STRING_LENGTH+1];
  unsigned char unsigned_integer[16];
  unsigned char long_unsigned_integer[2048];
  IEEE_quad_t f;

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.from_unsigned_integer (16, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_unsigned_integer (16, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_unsigned_integer (16, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_unsigned_integer (16, integer::zero_constant);
  f.to_string (res);
  if (strcmp (res, "+0") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  unsigned_integer::from_string (16, "1234567", unsigned_integer);
  f.from_unsigned_integer (16, unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_unsigned_integer (16, unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_unsigned_integer (16, unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_unsigned_integer (16, unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  unsigned_integer::from_string (16, "123456789012345678901234567890123456789", unsigned_integer);
  f.from_unsigned_integer (16, unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.23456789012345678901234567890123456e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_unsigned_integer (16, unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.23456789012345678901234567890123473e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_unsigned_integer (16, unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.23456789012345678901234567890123456e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_unsigned_integer (16, unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.23456789012345678901234567890123456e38") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  unsigned_integer::maximum (2048, long_unsigned_integer);
  f.from_unsigned_integer (2048, long_unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.from_unsigned_integer (2048, long_unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.from_unsigned_integer (2048, long_unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.18973149535723176508575932662800702e4932") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.from_unsigned_integer (2048, long_unsigned_integer);
  f.to_string (res);
  if (strcmp (res, "1.18973149535723176508575932662800702e4932") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST50

        echo test 50:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 51.
if test $result = ok -a $start_test_number -le 51; then
        cat >$test_file <<'TEST51'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t f;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char *r;
  char res [MAX_QUAD_10_STRING_LENGTH+1];
  unsigned char integer[8];
  unsigned char result[8];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  snan.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  qnan.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pz.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nz.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::maximum (8, result);
  pi.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::minimum (8, result);
  ni.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::maximum (8, result);
  pmax.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::minimum (8, result);
  nmax.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  pmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::from_string (8, "1", result);
  IEEE::set_round (IEEE_RP);
  pmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  pmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  pmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  nmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  nmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  signed_integer::from_string (8, "-1", result);
  IEEE::set_round (IEEE_RM);
  nmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  nmin.to_signed_integer (8, integer);
  if (signed_integer::ne (8, integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("-1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_signed_integer (8, integer);
  signed_integer::to_string (8, integer, res);
  if (strcmp (res, "-1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST51

        echo test 51:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 52.
if test $result = ok -a $start_test_number -le 52; then
        cat >$test_file <<'TEST52'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char *r;
  char res [MAX_QUAD_10_STRING_LENGTH+1];
  unsigned char unsigned_integer[8];
  unsigned char result[8];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  snan.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  qnan.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pz.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nz.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  unsigned_integer::maximum (8, result);
  pi.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  ni.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  unsigned_integer::maximum (8, result);
  pmax.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nmax.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  pmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  unsigned_integer::from_string (8, "1", result);
  IEEE::set_round (IEEE_RP);
  pmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, result)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  pmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  pmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  nmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  nmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  nmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  nmin.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234567") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("-1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  d.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1235") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.to_unsigned_integer (8, unsigned_integer);
  unsigned_integer::to_string (8, unsigned_integer, res);
  if (strcmp (res, "1234") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);

  IEEE::set_sticky_status_bits (0);
  r = d.from_string ("-1234.567");
  if (*r != '\0' || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  d.to_unsigned_integer (8, unsigned_integer);
  if (unsigned_integer::ne (8, unsigned_integer, integer::zero_constant)
      || IEEE::get_sticky_status_bits () != IEEE_INV
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST52

        echo test 52:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 53.
if test $result = ok -a $start_test_number -le 53; then
        cat >$test_file <<'TEST53'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_double_t f;
  IEEE_double_t snan;
  IEEE_double_t qnan;
  IEEE_double_t pz;
  IEEE_double_t nz;
  IEEE_double_t pi;
  IEEE_double_t ni;
  IEEE_double_t pmax;
  IEEE_double_t nmax;
  IEEE_double_t pmin;
  IEEE_double_t nmin;
  char *r;
  char res [MAX_QUAD_10_STRING_LENGTH+1];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  if (!snan.to_quad ().is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!qnan.to_quad ().is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!pz.to_quad ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!nz.to_quad ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!pi.to_quad ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!ni.to_quad ().is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pmax.to_quad ().to_string (res);
  if (strcmp (res, "1.79769313486231570814527423731704357e308") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  pmin.to_quad ().to_string (res);
  if (strcmp (res, "4.94065645841246544176568792868221372e-324") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nmax.to_quad ().to_string (res);
  if (strcmp (res, "-1.79769313486231570814527423731704357e308") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  nmin.to_quad ().to_string (res);
  if (strcmp (res, "-4.94065645841246544176568792868221372e-324") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  r = f.from_string ("1234567");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  f.to_quad ().to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  f.to_quad ().to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  f.to_quad ().to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  f.to_quad ().to_string (res);
  if (strcmp (res, "1.23456700000000000000000000000000000e6") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST53

        echo test 53:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Test 54.
if test $result = ok -a $start_test_number -le 54; then
        cat >$test_file <<'TEST54'
#include <string.h>
#include "arithm.h"
#include "IEEE.h"
int main ()
{
  IEEE_quad_t d;
  IEEE_quad_t snan;
  IEEE_quad_t qnan;
  IEEE_quad_t pz;
  IEEE_quad_t nz;
  IEEE_quad_t pi;
  IEEE_quad_t ni;
  IEEE_quad_t pmax;
  IEEE_quad_t nmax;
  IEEE_quad_t pmin;
  IEEE_quad_t nmin;
  char *r;
  char res [MAX_QUAD_10_STRING_LENGTH+1];

  IEEE::set_trap_mask (IEEE_INV | IEEE_RO | IEEE_OFL | IEEE_UFL | IEEE_IMP
                      | IEEE_DZ);
  IEEE::set_sticky_status_bits (0);
  qnan.NaN ();
  snan.trapping_NaN ();
  pz.positive_zero ();
  nz.negative_zero ();
  pi.positive_infinity ();
  ni.negative_infinity ();
  pmax.positive_maximum ();
  nmax.negative_maximum ();
  pmin.positive_minimum ();
  nmin.negative_minimum ();
  IEEE::set_sticky_status_bits (0);
  if (!snan.to_double ().is_NaN ()
      || IEEE::get_sticky_status_bits () != (IEEE_INV |IEEE_RO)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!qnan.to_double ().is_NaN ()
      || IEEE::get_sticky_status_bits () != IEEE_RO
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!pz.to_double ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!nz.to_double ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!pi.to_double ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!pi.to_double ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!pi.to_double ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!pi.to_double ().is_positive_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  if (!ni.to_double ().is_negative_infinity ()
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  pmax.to_double ().to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  pmax.to_double ().to_string (res);
  if (strcmp (res, "+Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  pmax.to_double ().to_string (res);
  if (strcmp (res, "1.7976931348623157e308") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  pmax.to_double ().to_string (res);
  if (strcmp (res, "1.7976931348623157e308") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!pmin.to_double ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  pmin.to_double ().to_string (res);
  if (strcmp (res, "4.9406564584124654e-324") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  if (!pmin.to_double ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!pmin.to_double ().is_positive_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  nmax.to_double ().to_string (res);
  if (strcmp (res, "-Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  nmax.to_double ().to_string (res);
  if (strcmp (res, "-1.7976931348623157e308") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  nmax.to_double ().to_string (res);
  if (strcmp (res, "-Inf") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  nmax.to_double ().to_string (res);
  if (strcmp (res, "-1.7976931348623157e308") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_OFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  if (!nmin.to_double ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  if (!nmin.to_double ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  nmin.to_double ().to_string (res);
  if (strcmp (res, "-4.9406564584124654e-324") != 0
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  if (!nmin.to_double ().is_negative_zero ()
      || IEEE::get_sticky_status_bits () != (IEEE_IMP | IEEE_UFL)
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  r = d.from_string ("123456");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_double ().to_string (res);
  if (strcmp (res, "1.2345600000000000e5") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_double ().to_string (res);
  if (strcmp (res, "1.2345600000000000e5") != 0
      || IEEE::get_sticky_status_bits () != 0
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  r = d.from_string ("1234567899012356789");
  if (*r != '\0'
      || IEEE::get_sticky_status_bits () != 0 || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RN);
  d.to_double ().to_string (res);
  if (strcmp (res, "1.2345678990123569e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RP);
  d.to_double ().to_string (res);
  if (strcmp (res, "1.2345678990123569e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RM);
  d.to_double ().to_string (res);
  if (strcmp (res, "1.2345678990123566e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  IEEE::set_sticky_status_bits (0);
  IEEE::set_round (IEEE_RZ);
  d.to_double ().to_string (res);
  if (strcmp (res, "1.2345678990123566e18") != 0
      || IEEE::get_sticky_status_bits () != IEEE_IMP
      || IEEE::get_status_bits () != 0)
    exit (1);
  exit (0);
}
TEST54

        echo test 54:
        echo '      ' $CXX $CXX_options $test_file $addfiles -o $outfile
        if $CXX $CXX_options $test_file $addfiles -o $outfile; then
                echo '      ' $outfile
                if $outfile; then
                        result=ok
                else
                        result=fail
                fi
        else
                result=fail
        fi
fi

# Final message

if test $result = ok; then
        echo $script_file: it is all ok
        rm -f $addfiles $test_file $outfile
        exit 0
else
        echo '***' $script_file: test is failed see file $test_file
        exit 1
fi
