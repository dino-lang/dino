  The interpreter of programming language DINO and COCOM tool set is
written with the usage of GNU configuration utilities.  Therefore the
installation of the tool set is analogous to the installation of many
GNU software packages.

Installation in the same directory as one with sources files.
*************************************************************


  1. Run command file `configure' without arguments.  In the case of
     successful work `configure' in current directory generates files
     Makefile (from files `Makefile.in') and config.h files in current
     directories and subdirectories.

  2. Install the tool set, by the following command:

          make install

     This command create all object files and copies the tool set
     components into the directory /usr/local/bin and documentation
     files into /usr/local/man/man1 and
     /usr/local/share/doc/<component-name>.  It also copies library
     files (libcocom and DINO libraries and standard SRUT description
     files), into directory /usr/local/lib/ and include files
     (AMMUNITION) into directory /usr/local/include.

     If you wish to copy the files into other directories change
     values of Makefile variables `bindir', `libdir', `man1dir',
     `docdir' and `prefix'. Use only full path name for the
     directories!  For example, if you wish to copy the files into
     directories `/usr/local/DINO/bin', `/usr/local/DINO/lib',
     `/usr/local/DINO/include', `/usr/local/DINO/man/man1' etc specify

           make install prefix=/usr/local/DINO

Makefile contains following useful entries other than install:

  all       -- creation of all object and executable files;
  
  dist      -- unconditional creation of compressed distribution tar
	       file;

  clean     -- deletion of object files and executables;

  distclean -- Deletion all which can be built up automatically;
               
  uninstall -- delete the installed files and the empty installation
	       directories.



Installation in directory other than one with sources files.
************************************************************

  If you wish to build the object and executable files in a
subdirectory of the source directory make the same as in previous
sections. `configure' itself find out the sources.


In other cases do follows:

  1. Go to that directory before running `configure':

          mkdir temp; cd temp

  2. Specify where to find `configure' when you run it:

          ../dino-0.97/configure ...

  3. Specify where to find the sources, as an argument `--srcdir' to
     `configure':

          ../dino-0.97/configure --srcdir=../dino-0.97


Debugging mode
**************

The configure script accepts option `--enable-debug'.  This option
switches off additional check code.  This mode can be very useful to
find bugs but it makes code slower up to 10 times (for DINO
interpreter).


Other `configure' options and environment variables
***************************************************

  GNU `configure' has many ways to control configuration -- see
configure documentation for details.  There are some environment
variables worth for mention.  These are environment variables:

  CC       - used compiler for compilation of DINO/COCOM C sources
  CFLAGS   - C compiler options for compilation of DINO/COCOM C sources
  CXX      - C++ compiler options for compilation of DINO/COCOM C++ sources
  CXXFLAGS - used compiler for compilation of DINO/COCOM C++ sources

For example

      CC=gcc CXX=gcc configure


Installing DINO/COCOM on Windows
********************************

To build DINO/COCOM on Window, CYWGIN should be installed with gcc,
g++, bison, flex, libgmp, libiconv.  After that the installation is
analogous to one described above.


Installing DINO/COCOM on Mac OSX
********************************

To build DINO/COCOM on MAC OSX, Xcode should be installed.  You need
to install gmp package additionally.  After that the installation is
analogous to Linux one.


Vladimir Makarov 	(vmakarov@gcc.gnu.org) 

