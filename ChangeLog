2016-02-13  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/process_ucodedb.d: Use re.split instead of split.

2016-02-12  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Change 'make test' on 'make check'.

2016-02-12  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_inference.c (initiate_inference_pass): Change loop bound.

2016-02-12  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_context.c (second_expr_processing): Fix typo in an assert
	cond (=).

2016-02-11  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_inference.c (insn_defs_num_cache): Change length to
	BC_NM__error.
	(insn_defs_num_cache): Uses.
	* DINO/dino.tst.in (874-878, 880, 881): Use = instead of == in
	expr.

2016-02-10  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Examples/extern.d: Remove.
	* DINO/Examples/{fact, fibonacci, sieve, tak, mult}.d: Remove
	copyright.  Change func to fun.  Format the code.
	* DINO/Examples/tmult.d: Ditto.  Use new syntax for tables.
	* DINO/Examples/prodcons.d: Remove copyright.  Change func
	to fun.  Format the code.  Use new syntax for wait.
	* DINO/Examples/idcount.d: Remove copyright.  Change func to fun.
	Format the code.  Use re.split and just eof.
	* DINO/Examples/forest-fire.d: New.

2016-02-09  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/dino.sgml.in (singleton object): Describe place of
	declarations.
	(expose-clause): New.
	* DINO/dino.{dvi, ps, pdf, html, info, txt}: Update.
	* DINO/dino-{3, 4, 10}.html: Ditto.

2016-02-09  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Add future directions.
	* AMMUNITION/README: Change email address.
	* DINO/README: Ditto.
	* {MSTA, NONA, OKA, SHILKA, SPRUT}/README: Ditto.
	* DINO/d_ir.sprut (ENVIRONMENT): Remove a space before
	invencoding.
	* DINO/dino.sgml.in: Describe spaces and pre-declared identifiers
	according to spaces.
	* DINO/dino.{html, info, pdf, ps, dvi, txt}: Update.
	* DINO/dino-{4, 5, 8, 9}.html: Update.

2016-02-08  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_bc.sprut (LANG_CNAME, IO_CNAME, SYS_CNAME, MATH_CNAME): New.
	(RE_CNAME, YAEP_CNAME): Ditto.
	(bc_decl_entry bc_decls_table): Use them for object classes.
	* DINO/d_bcio.c (get_token): Permit start $ in identifier.
	* DINO/d_func.c (internal_inside_call): Permit stack for where.
	* DINO/d_yacc.y (process_obj_header): Return class ident.
	(process_obj_block): Accept class identifier.
	(declaration): Pass class identifier.
	* DINO/dino.tst.in (409): Accept object.
	(883, 884): Undeclared ident for expose inside object.
	(899): New.
	* DINO/mpi.d (check): Use mpi instead of mpis.
	* DINO/d_errors.[ch] (ERR_expose_clause_inside_referring_object):
	Remove.
	* DINO/d_context.c (find_expose_designator_decl): Remove error,
	make an assert.

2016-02-07  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Change release date.
	* DINO/d_ir.sprut (ENVIRONMENT): Create spaces lang, io, sys,
	math, re, yaep.  Expose lang and io.
	* DINO/d_bc.sprut (bc_decls_table): Rearrange definitions.  Use
	the obj contexts.  Put entries for objs twice.
	(LANG_NAME, lang_bc_decl): New.
	(IO_NAME, io_bc_decl): New.
	(SYS_NAME, sys_bc_decl): New.
	(MATH_NAME, math_bc_decl): New.
	(RE_NAME, re_bc_decl): New.
	(YAEP_NAME, yaep_bc_decl): New.
	* DINO/d_run.sprut (get_obj_stack): New.
	* DINO/d_yacc.y (process_obj_block): Use source_position instead
	of actual_parameters_construction_pos.
	* DINO/d_context.c (first_block_passing): Process expose decl fore
	use-clause.
	(get_bcode_decl): Process expose decl.
	(second_expr_processing): Use result for expose decl ident.
	* DINO/d_eval.c (evaluate_program): Don't call initiate_vars.
	(initiate_vars): Move to ...
	* DINO/d_func.c: ... here.
	(split_call, put_call, putln_call, print_call, println_call): Use
	get_obj_stack to access the standard obj items.
	(get_call, getln_call, getf_call, scan_call, scanln_call): Ditto.
	(putf_call, strtime_calll, tree_to_heap): Ditto.
	(init_call): Ditto.  Call initiate_vars.
	* DINO/d_gen.c (common_omicall): Assign to stack.
	* DINO/d_heap.c (expand_uppest_stack): Remove assert for cprocess.
	(activate_given_process): Add param.  Define curr_thread depending
	on param value.
	(block_cprocess, delete_cprocess): Pass the param.
	(delete_cprocess_during_exception, initiate_processes): Ditto.
	* DINO/d_minimize.d: Use re.match, sys.system, and sys.time.
	* DINO/dino.tst.in: Use obj prefixes or expose where necessary.
	(898): New test for object use.
	* DINO/ieee.d: Use obj and move excpetions inside the obj.
	* DINO/ipcerr.d: Ditto.
	* DINO/mpi.d: Ditto.
	* DINO/socket.d: Ditto.
	* DINO/compare.tst (statistics): Use math.sqrt.
	(words count): Use re.split.
	(echo): Use sockets.socket_eof_except.
	(regexp): Use "expose re.*;".

2016-02-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_bc.sprut (CC_OPTIONS2): Add -xnone.
	(find_dllname): Add parameter.
	(gen_cfblock): Add "/" after standard library.

2016-02-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.in: Update.

2016-02-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.am (libdino_la_CFLAGS): Add
	-DSTANDARD_DINO_BIN_DIRECTORY.
	* DINO/d_bc.sprut (CC_OPTIONS, CC_OPTIONS2): Remove dll for
	CYGWIN.
	(find_dllname): New.
	(gen_cfblock): Use it add dll for CYGWIN.

2016-02-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.am (version_suffix, full_suffix): New.
	(libdino_la_CFLAGS): Transfer version_suffix as
	DINO_VERSION_SUFFIX.
	(test-installed): New entry.
	* DINO/configure.ac (DINO_VERSION_SUFFIX): New.
	* DINO/{configure, Makefile.in}: Update.

2016-02-02  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/conifgure.ac (DINO_MODULE_SUFFIX): Add version.
	* DINO/Makefile.am (mpi_lib, ieee_lib, ipcerr_lib, socket_lib):
	Remove dot.
	* DINO/{configure, Makefile.in}: Update.

2016-02-01  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/configure.ac (DINO_MODULE_SUFFIX): New.
	* DINO/configure: Update.
	* DINO/Makafile.am (module_suffix, mpi_lib, ieee_lib): New.
	(ipcerr_lib, socket_lib, DINO_EXTERN_LIBS_PATH): Ditto.
	(libdino_la_CFLAGS): Use DINO_EXTERN_LIBS_PATH.
	(EXTRA_DIST): Move mpi.d, ieee.d, ipcerr.d,
	socket.d to include_HEADERS.
	* DINO/Makefile.in: Update.

2016-02-01  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makafile.am (install-exec-hook): Add comment.
	* DINO/Makefile.in: Update.
	* {MSTA, SHILKA, SPRUT, NONA, OKA}/Makefile.am
	(install-exec-hook): A new fix for CYGWIN.
	* {MSTA, SHILKA, SPRUT, NONA, OKA}/Makefile.in: Update.

2016-02-01  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.am (install-exec-hook): A new fix for CYGWIN.
	* DINO/Makefile.in: Update.

2016-01-27  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.am (libdino_la_CFLAGS): Remove
	-DSTANDARD_DINO_LIB_NAME.
	* DINO/Makefile.in: Update.
	* DINO/d_dino.h (STNDARD_LIB_NAME): Remove.
	* SPRUT/Makefile.am (ird.c, ird.h): Remove rm.
	* SPRUT/Makefile.in: Update.

2016-01-25  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* COCOM-CHANGES, COCOM-README, DINO-CHANGES: Remove.
	* DINO-INSTALL, DINO-README, dino-copyright, dino.dsc, dino.spec:
	Ditto.
	* msta-template.bmp: Ditto.
	* cocom-copyright: Rename to copyright.  Use GPL version 2, add
	references to COPYING and COPYING.LIB.
	* COPYING: Update to version 2.
	* INSTALL: Modify.  Describe debug mode.  Add instructions for
	Windows and Mac OSX.
	* Makefile.am (dist_doc_DATA, EXTRA_DIST, ditclean-local): New.
	(cocom-doc): New.
	* Makefile.in: Update.
	* cocom.sgml.in: Change date.  Fix typo for cspset.
	* cocom.{dvi, html, info, pdf, ps, txt}: Update.

2016-01-25  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/Makefile.am: Remove *.out.dDYM
	* AMMUNITION/Makefile.in: Update.

2016-01-25  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* {AMMUNITION, MSTA, OKA, SHILKA}/Makefile.am: Remove *a.out.dDYM
	directories.
	* {AMMUNITION, MSTA, OKA, SHILKA}/Makefile.in: Update.

2016-01-25  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/compare_parsers.tst.in: Use DYLD_LIBRARY_PATH for
	Darwin.
	* install-sh: Add exec permission.

2016-01-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* SPRUT/Makefile.am: Use -o a.out.
	* SPRUT/Makefile.in: Update.

2016-01-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* OKA/Makefile.am (EXTRA_DITS): Remove oka.sgml.
	* OKA/Makefiel.in: Update.

2016-01-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* Makefile.am (doc): Call recursively.
	* Makefile.in: Update.
	* AMMUNITION/Makefile.am (doc): Generate all files.
	(BUILT_SOURCES): Remove sgml files.
	* {DINO, MSTA, NONA, OKA, SHILKA, SPRUT}/Makefile.am: Ditto.
	* AMMUNITION/Makefile.in: Update.
	* {DINO, MSTA, NONA, OKA, SHILKA, SPRUT}/Makefile.in: Ditto.
	* AMMUNITION/ammunition.{dvi, ps, pdf}: Update.
	* AMMUNITION/ammunition++.{dvi, ps, pdf}: Update.
	* DINO/dino.{dvi, ps, pdf}: Update.
	* MSTA/msta.{dvi, ps, pdf}: Update.
	* NONA/nona.{dvi, ps, pdf}: Update.
	* OKA/oka.{dvi, ps, pdf}: Update.
	* SHILKA/shilka.{dvi, ps, pdf}: Update.
	* SPRUT/sprut.{dvi, ps, pdf}: Update.

2016-01-23  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* configure.ac: Use 0.97 as the version.
	* configure: Update.

2016-01-23  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/Makefile.am (dist_doc_DATA): New.  Move doc files
	there.
	(install-data-local, uninstall-local): Remove.
	(BUILT_SOURCES): Add ammunition[++].sgml.
	(doc): Remove *.sgml from dependencies.
	(.txt, .html, .info, .dvi): Use dependencies from .sgml.in instead
	of .sgml.
	* AMMUNITION/Makefile.in: Update.
	* AMMUNITION/ammunition[++].{dvi, pdf, ps}: Update.
	* AMMUNITION/configure.ac (--enable-debug): New flag.
	(C_DEBUG_DEFINE): Rename to c_debug_define.  Add to
	CFLAGS/CXXFLAGS.
	(-g3): Save/restore cflags.
	* AMMUNITION/configure: Update.
	* AMMUNITION/cspset++.tst.in: Remove include_file.
	(C_DEBUG_DEFINE): Remove.
	* AMMUNITION/cspset.tst.in (C_DEBUG_DEFINE): Remove.
	* DINO/Makefile.am (extern.h): Use d_extern.h instead.
	(dist_doc_DATA): New.  Move doc files there.
	(include_HEADERS, nodist_include_HEADERS): New.
	(install-data-local, uninstall-local): Remove.
	(distclean-local): Remove d_genheader.i d_extern.h d_gen.i.
	(C_DEBUG_DEFINE): Remove.
	(BUILT_SOURCES): Add dino.sgml.
	(doc): Remove *.sgml from dependencies.
	(.txt, .html, .info, .dvi): Use dependencies from .sgml.in instead
	of .sgml.
	* DINO/Makefile.in: Update.
	* DINO/configure.ac (--enable-debug): New flag.
	(C_DEBUG_DEFINE): Rename to c_debug_define.  Add to
	CFLAGS/CXXFLAGS.
	(-g3): Save/restore cflags.
	* DINO/configure: Update.
	* DINO/dino.{dvi, pdf, ps}: Update.
	* MSTA/Makefile.am (dist_doc_DATA): New.  Move doc files there.
	(install-data-local, uninstall-local): Remove.
	(BUILT_SOURCES): Add msta.sgml.
	(doc): Remove *.sgml from dependencies.
	(.txt, .html, .info, .dvi): Use dependencies from .sgml.in instead
	of .sgml.
	* MSTA/configure.ac (--enable-debug): New flag.
	(C_DEBUG_DEFINE): Rename to c_debug_define.  Add to
	CFLAGS/CXXFLAGS.
	(-g3): Save/restore cflags.
	* MSTA/Makefile.in: Update.
	* MSTA/configure: Update.
	* MSTA/msta.{dvi, pdf, ps}: Update.
	* MSTA/quality.tst.in: Remove output_file and description_file in
	each test for success.  Remove temp_file and temp3_file at the
	end.
	* NONA/Makefile.am (dist_doc_DATA): New.  Move doc files there.
	(install-data-local, uninstall-local): Remove.
	(BUILT_SOURCES): Add nona.sgml.
	(doc): Remove *.sgml from dependencies.
	(.txt, .html, .info, .dvi): Use dependencies from .sgml.in instead
	of .sgml.
	* NONA/configure.ac (--enable-debug): New flag.
	(C_DEBUG_DEFINE): Rename to c_debug_define.  Add to
	CFLAGS/CXXFLAGS.
	(-g3): Save/restore cflags.
	* NONA/Makefile.in: Update.
	* NONA/configure: Update.
	* NONA/nona.{dvi, pdf, ps}: Update.
	* OKA/Makefile.am (dist_doc_DATA): New.  Move doc files there.
	(install-data-local, uninstall-local): Remove.
	(BUILT_SOURCES): Add oka.sgml.
	(doc): Remove *.sgml from dependencies.
	(.txt, .html, .info, .dvi): Use dependencies from .sgml.in instead
	of .sgml.
	* OKA/configure.ac (--enable-debug): New flag.
	(C_DEBUG_DEFINE): Rename to c_debug_define.  Add to
	CFLAGS/CXXFLAGS.
	(-g3): Save/restore cflags.
	* OKA/Makefile.in: Update.
	* OKA/configure: Update.
	* OKA/oka.{dvi, pdf, ps}: Update.
	* ONIGURUMA/Makefile.am (distclean-local): Remove oniguruma.pc.
	* ONIGURUMA/Makefile.in: Update.
	* SHILKA/Makefile.am (dist_doc_DATA): New.  Move doc files there.
	(install-data-local, uninstall-local): Remove.
	(BUILT_SOURCES): Add shilka.sgml.
	(doc): Remove *.sgml from dependencies.
	(.txt, .html, .info, .dvi): Use dependencies from .sgml.in instead
	of .sgml.
	* SHILKA/configure.ac (--enable-debug): New flag.
	(C_DEBUG_DEFINE): Rename to c_debug_define.  Add to
	CFLAGS/CXXFLAGS.
	(-g3): Save/restore cflags.
	* SHILKA/Makefile.in: Update.
	* SHILKA/configure: Update.
	* SHILKA/shilka.{dvi, pdf, ps}: Update.
	* SHILKA/shilka.tst.in: Remove `basename $test_shilka .shilka`.c.
	* SPRUT/Makefile.am (dist_doc_DATA): New.  Move doc files there.
	(include_HEADERS): New.  Move std_*.sprut files there.
	(install-data-local, uninstall-local): Remove.
	(BUILT_SOURCES): Add sprut.sgml.
	(doc): Remove *.sgml from dependencies.
	(.txt, .html, .info, .dvi): Use dependencies from .sgml.in instead
	of .sgml.
	* SPRUT/configure.ac (--enable-debug): New flag.
	(C_DEBUG_DEFINE): Rename to c_debug_define.  Add to
	CFLAGS/CXXFLAGS.
	(-g3): Save/restore cflags.
	* SPRUT/Makefile.in: Update.
	* SPRUT/configure: Update.
	* SPRUT/sprut.{dvi, pdf, ps}: Update.

2016-01-22  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.am: Add ammunition libs to PATH.
	* MSTA/Makefile.am: Ditto.
	* NONA/Makefile.am: Ditto.
	* OKA/Makefile.am: Ditto.
	* SHILKA/Makefile.am: Ditto.
	* SPRUT/Makefile.am: Ditto.
	* DINO/Makaefile.in: Update.
	* MSTA/Makaefile.in: Ditto.
	* NONA/Makaefile.in: Ditto.
	* OKA/Makaefile.in: Ditto.
	* SHILKA/Makaefile.in: Ditto.
	* SPRUT/Makaefile.in: Ditto.

2016-01-20  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/Makefile.am (EXTRA_DIST): Add IEEEtens.c and
	whole_gcc_test.i.
	* AMMUNITION/Makefile.in: Update.
	* AMMUNITION/ammunition[++].{dvi, pdf, ps}: Update.
	* AMMUNITION/compare_parsers.tst.in (LR_LIBRARY_PATH): Use
	YAEPLIBDIR instead of YAEPDIR.
	(BIG_TEST): Use ../AMMUNITION in the path.
	* AMMUNITION/configure.ac (YAEPLIBDIR): New.
	* AMMUNITION/configure: Update.
	* DINO/Makefile.am (EXTRA_DIST): Add d_gen.c and UnicodeDB.c.
	* DINO/Makefile.in: Update.
	* DINO/dino.{dvi, pdf, ps}: Update.
	* MSTA/Makefile.am (EXTRA_DIST): Add c5.y, cpp5.y, fcalc.y,
	fcalc1.y, fparse.y, gram.y, java.y, lex.y, m2c.y, oberon2-gram.y
	oberon2-kw.shilka, oberon2-lex.y, p-yacc.y, pascal.y, sql1.y.
	* MSTA/Makefile.in: Update.
	* MSTA/msta.{dvi, pdf, ps}: Update.
	* NONA/nona.{dvi, pdf, ps}: Update.
	* OKA/oka.{dvi, pdf, ps}: Update.
	* SHILKA/shilka.{dvi, pdf, ps}: Update.
	* SPRUT/sprut.{dvi, pdf, ps}: Update.

2016-01-18  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/{Makefile.in, configure, DINO/d_config.h.in}: Update.

2016-01-18  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/objstackcpp.C (os::os): Rename parameter to
	init_segment_length.
	* DINO/Makefile.am: Move @DINO_LIB_CFLAGS@ after -I options.
	* DINO/configure.ac: Move definitions DINO_{LIB_CFLAGS,
	LIB_LDFLAGS, MOD_LDFLAGS} before checking programs.  Add
	/usr/local/... to CFLAGS for Darwin and CYGWIN.
	(random): Check the function.
	* DINO/d_bcio.c (get_token): Clear errno after mpz_init_set_str.
	* DINO/d_conv.c (form_format_string): Clear errno at the end.
	Don't process errno.
	(implicit_arithmetic_conversion): Clear errno.
	* DINO/d_func.c (rename_call): Check the result of system function
	and process errno in case of error.
	(remove_call, mkdir_call, rmdir_call, getcwd_call, chdir_call):
	Ditto.
	(get_stat, general_chmod, open_call, close_call, flush_call): Ditto.
	(popen_call, tell_call, seek_call, getgroups_call): Ditto.
	(finish_output): Return ferror.
	(general_put_call, general_print_call, general_putf_call): Check
	finish_output_result.
	(get_file_char): Process errno from get_ucode_from_stream.
	(general_get_call, general_get_ln_file_call, get_token): Don't
	process errno.
	(general_scan_call): Ditto.
	(general_random_code): Add call of random/srandom.
	(process_errno_call): Save errno around to_vect_string_conversion.
	* DINO/d_socket.c (_sread, _swrite): Rename to _dsread, _dswrite.
	* DINO/socket.d: Ditto.
	* DINO/dino.tst.in (494): Make expected output in [] optional.
	(826): Use KOREAN for Darwin.
	(844): Add Illegal byte sequence as expected output.
	* MSTA/fparse.y: Use stdlib.h instead of malloc.h
	* NONA/gen.c (output_state_struct_class): Increase length of
	generated arrays.
	(output_cs_nonterminal_rule_function): Don't check this on NULL.
	(output_cs_it_is_axiom_function): Ditto.
	(output_cs_traverse_cover_pass_function): Ditto.
	(output_cs_traverse_cover_function): Ditto.
	(output_internal_cs_delete_cover_function): Ditto.
	(output_cs_delete_cover_function): Ditto.
	* OKA/SCHEDULE/schedule.c (ge_for_data_ready_list): More pars
	around &&.
	(build_data_dependence_graph): Call finish_resource_history.
	* OKA/SCHEDULE/schedule.cpp
	(scheduler_state::ge_for_data_ready_list): More pars
	around &&.
	* OKA/gen.c (output_transition_table): Memset expanded vector.
	(output_is_dead_locked_vector): Ditto.
	* SPRUT/A_test.sprut (number): Put more pars.
	* SPRUT/gen.c (output_node_type_macros_functions): Don't check
	this on NULL.
	(output_rest_double_link_functions_definitions): Ditto.
	(output_field_access_function_definition): Ditto.
	(output_set_double_link_function_definition): Ditto.
	(output_field_modification_function_definition): Ditto.
	(output_internal_graph_deletion_function): Ditto.
	(output_node_copy_function): Ditto.
	(output_internal_graph_copy_function): Ditto.
	(output_node_equality_function): Ditto.
	(output_internal_graph_equality_function): Ditto.
	(output_node_check_function): Ditto.
	(output_internal_graph_check_function): Ditto.
	(output_node_print_function): Ditto.
	(output_node_output_function): Ditto.
	(output_internal_traverse_function): Ditto.
	(output_internal_transformation_function): Ditto.
	(output_class_field_initiation_finalization_function): Generate
	default case too.
	
2016-01-16  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/compare.tst (17): Make 10 as minimal rep.
	* OKA/oka.tst: Remove CMP and SCMP for Cygwin.
	(2, 3): Make another variant with ab bit different # of combe
	vector elements.

2016-01-16  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.am
	(EXTRA_d_{mpi,ieee,ipcerr,socket}_la_DEPENDENCIES): New.
	* DINO/Makefile.in: Update.

2016-01-16  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.am: Don't use shell for compare.tst.  Use EXEEXT
	for dino.
	* DINO/Makefile.in: Update.
	* DINO/compare.tst (17): Use 6 as a divide factor.  Make 2 as
	minimal rep.

2016-01-15  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/compare.tst (17): Make divide factor 6 and minimal rep 2.
	(18): Add - when searching .so and .dll.
	* DINO/dino.tst.in: Ignore output from fgrep CYGWIN.
	(826): Make a special variant for Cygwin using KOREAN.
	* ONIGURUMA/configure.in (LIB_{C,LD}FLAGS): Use -static.
	* ONIGURUMA/configure: Update.

2016-01-15  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_bc.sprut (CC_OPTIONS, CC_OPTIONS2): Add dino dll for
	cygwin.
	* DINO/dino.tst.in: Use non cygwin CMP and SCMP for cygwin too.
	(140): Add space in expected group name.
	(258, 453, 493-497, 499-501, 501a): Add version for dll and so.
	(826): Use KOREAN instead of GREEK7.
	* DINO/comapre.tst:  Use time -p.
	(18): Find dl and so libraries for test.

2016-01-15  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* yacc.exe: Remove.

2016-01-14  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/dino.tst.in: Use version in dll and .libs.
	* DINO/Makefile.am: Add -release for modules.
	* DINO/Makefile.in: Update.

2016-01-14  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_minimize.d: Add progress bar and print compilations # and
	time.
	* DINO/d_bc.sprut (CC_OPTIONS, CC_OPTIONS2): Define for CYGWIN.
	(gen_cfblock): Move conditionals with options up.

2016-01-14  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/configure.ac (LIB_{C,LD{FLAGS}): Use quotes for
	values.
	* AMMUNITION/configure: Update.
	* DINO/configure.ac (DINO_LIB_{C,LD{FLAGS}, DINO_MOD_LDFLAGS): Use
	quotes for values.
	* DINO/Makefile.am: Remove time in d_gen.i generation.
	* DINO/{Makefile.in, configure}: Update.
	* DINO/UnicodeData.txt: Rename to UnicodeOriginalData.txt.
	* ONIGURUMA/configure.in (LIB_{C,LD{FLAGS}): Use quotes for
	values.
	* ONIGURUMA/Makefile.in: Update.
	* ONIGURUMA/{aclocal.m4, configure}: Update.
	* ONIGURUMA/sample/Makefile.in: Update.

2016-01-14  Vladimir Makarov  <vmakarov@gcc.gnu.org>

    	* AMMUNITION/configure.ac (LIB_{C, LD}FLAGS): New.
    	* AMMUNITION/Makefile.am (libcocom[cpp]_la_{C, LD}FLAGS): Use
    	them.
    	* AMMUNITION/{Makefile.in, configure}: Update.
    	* DINO/Makefile.am (UnicodeData.txt): Rename to
    	UnicodeOriginalData.txt.
    	* DINO/configure.ac (DINO_LIB_LDFLAGS, DINO_MOD_LDFLAGS): Add
    	-no-undefined for CYGWIN..
    	* DINO/configure: Update.
    	* ONIGURUMA/configure.in (LIB_{C, LD}FLAGS): New.
    	* ONIGURUMA/Makefile.am (libonig_la_{C, LD}FLAGS): Use them.
    	* ONIGURUMA/{Makefile.in, configure}: Update.
    	* ONIGURUMA/sample/Makefile.in: Update.

2016-01-13  Vladimir Makarov  <vmakarov@gcc.gnu.org>

    	* AMMUNITION/Makefile.am (libcocom[cpp]_la_LDFLAGS): New.
    	* AMMUNITION/Makefile.in: Update.
    	* DINO/configure.ac (DINO_LIB_CFLAGS, DINO_LIB_LDFLAGS): Define.
    	(DINO_MOD_LDFLAGS): Ditto.
    	* DINO/Makefile.am (libdino_la_CFLAGS): Use them.
    	(libdino_la_LDFLAGS): Ditto.
    	(d_{mpi, ieee, ipcerr, socket}_la_{C,LD}FLAGS): Ditto.
    	* DINO/{Makefile.in, configure}: Update.

2016-01-12  Vladimir Makarov  <vmakarov@gcc.gnu.org>

    	* DINO/configure.ac (DINO_LINK_OPTION): Set for cygwin.
    	* DINO/configure: Update.
    	* Makefile.in (DIST_COMMON): Remove TODO.

2016-01-12  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* {AMMUNITION, MSTA, NONA, OKA, SHILKA, SPRUT}/configure.ac: Add
	AM_MAINTAINER_MODE.
	* configure.ac: Ditto.
	* DINO/configure.ac: Ditto.  Check libiconv_open too.
	* [{AMMUNITION, DINO, MSTA, NONA, OKA, SHILKA, SPRUT}/]{configure,
	aclocal.m4, Makefile.in}: Update.
	* ONIGURUMA/{configure, m4/libtool.m4}: Update.

2016-01-11  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/compare.tst: Use printf when echo -n unavailable.  Use =
	for equality in expr.  Use ${#v} instead of expr length.  Use time
	-p.  Print additional spaces before scale.
	* SPRUT/common.c: Include stdio.h

2016-01-11  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.am (dino_LDFLAGS): Use DINO_LINK_OPTION.
	(d_genheader.i): Add CFLAGS.
	* DINO/configure: Update.
	* DINO/Makefile.in: Update.
	* DINO/aclocal.m4: Update.
	* DINO/configure.ac: Append to CFLAGS.
	(DINO_LINK_OPTION): New.
	* DINO/d_bc.sprut: Add -w to linux options.
	* DINO/dino.tst.in (831-833, 839, 840, 842-844): Use printf
	instead of echo.

2016-01-11  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/cspset.c (cspset_print): Remove additional arg to
	fprintf.
	* AMMUNITION/cspsetcpp.C (cspset::print): Ditto.
	* AMMUNITION/cspset.h (class cspset): Remove empty blocks for
	constructor and assignment.
	* AMMUNITION/errors[++].tst.in (3, 7-9): Add output with undefined
	error.
	* AMMUNITION/hashtab.tst.in (1): Include string.h
	* AMMUNITION/spset.c (spset_print): Remove additional arg to
	fprintf.
	* AMMUNITION/spsetcpp.C (spset::print): Ditto.
	* AMMUNITION/spset.h (class spset): Remove empty blocks for
	constructor and assignment.
	* AMMUNITION/yaep.c (make_parse): Use %lu for printing top.
	* DINO/d_bc.sprut (print_node): Use explicit cast for print arg.
	(CC_OPTIONS, CC_OPTIONS2): Define for Apple.
	(form_fname): Use %lu for getpid value.
	(gen_cfblock): Return NULL if options is not defined.  Use pclose.
	* DINO/d_bcio.c (dump_code): Exchange arg places for %.*g.
	* DINO/d_context.c (set_field_ident_number): Make void return
	type.
	(create_pattern_vars): Add default for switch.
	(make_designator_lvalue): Use BC_node_mode_t for return type.
	* DINO/d_dino.c (i2a, i2mpz): Use explicit cast for print arg.
	(encode_byte_str_vlo): Use explicit cast for strlen arg.
	(encode_byte_str_vlo): Use explicit cast for is assignment.
	(get_ucode_from_stream): Use parentheses around &&.
	(check_encoding_on_ascii): Use size_t cast.
	(dino_main): Use cast to byte_t * in encode_byte_str_vlo call.
	* DINO/d_eval.c (load_packed_vector_element): Use cast to
	type_val_t for ER_NM_type case.
	(store_packed_vector_element): Use cast to ER_node_mode_t for
	ER_NM_type case.
	(find_catch_pc): Use cast to byte_t * in encode_byte_str_vlo call.
	* DINO/d_extern.sprut (ER_mpz_ptr): Remove expr before comma.
	* DINO/d_func.c (find_regex): Use cast to OnigUchar *.
	(internal_match_call): Ditto.
	(gmatch_call, generall_sub_call, split_call): Ditto.
	(cmpv_call): Fix typo (== instead of =).
	(print_val): Don't use %d.  Use explicit casts for sprintf args.
	(readdir_call): Use cast to byte_t * in encode_byte_str_vlo call.
	* DINO/d_gen.c (fbend): Return TRUE.
	* DINO/d_heap.c (ucodevect_to_bytevect_if_possible): Use cast to
	byte_t *.
	* DINO/d_ir.sprut (hash_func): Use type ucode_t for ch.  Use cast
	to char * for chp.
	* DINO/d_minimize.d: Use -Werror=implicit-function-declaration
	-Werror=implicit-int instead of -Werror
	-Wimplicit-function-declaration.  Use try around remove call.
	* DINO/dino.tst.in (140):  Add . for group name regexep.
	(831-833, 839, 840, 842-844): Use $'' instead -e for echo.

2016-01-09  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/configure.ac: Check libiconv.
	* DINO/configure: Update.
	* DINO/d_common.h (is_hex_digit): Put parentheses around &&.
	* DINO/d_dino.c (initiate_cds, set_conv_descs): Use UTF-32{BE,LE}
	instead if UTF32{BE,LE}.

2016-01-08  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* Makefile.am: Add EXTRA_DIST and doc.
	* Makefile.in: Update.
	* {AMMUNITION, SPRUT, SHILKA, MSTA, NONA, OKA, DINO}/Makefile.am
	(all-local, dist-local): Remove doc.
	* {AMMUNITION, SPRUT, SHILKA, MSTA, NONA, OKA, DINO}/Makefile.in: Updat.
	* DINO/d_bc.sprut (wait): Rename to waitcond.
	* DINO/d_bcn.shilka (wait): Ditto.
	* DINO/d_bcio.c (dump_code): Rename BC_NM_wait to BC_NM_waitcond.
	* DINO/d_eval.c (evaluate_code): Ditto.
	* DINO/d_gen.c (wait): Rename to waitcode.
	* DINO/d_inference.c (get_insn_op_place, type_transf): Rename
	BC_NM_wait to BC_NM_waitcond
	(specialize_insn): Ditto.

2016-01-07  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.am (all): Move dependecies to BUILT_SOURCES.
	(d_genheader.i): Add @DEFS@ and -I for current and source
	directory.  Generate target only if the generation is successful.
	* DINO/Makefile.in: Update.

2016-01-07  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* ONIGURUMA/test-drive: Add.

2016-01-07  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* ONIGURUMA/compile: Add.

2016-01-07  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/errorcpp.C: Add.

2016-01-07  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* missing: New.
	* AMMUNITION/{install-sh, ltmain.sh, missing, ylwrap}: New.
	* DINO/{install-sh, ltmain.sh, missing}: New.
	* MSTA/{install-sh, ltmain.sh, missing}: New.
	* NONA/{install-sh, ltmain.sh, missing}: New.
	* OKA/{install-sh, ltmain.sh, missing}: New.
	* SHILKA/{install-sh, ltmain.sh, missing}: New.
	* SPRUT/{install-sh, ltmain.sh, missing}: New.
	* AMMUNITION/m4/{libtool, ltoptions, ltsugar, ltversion,
	lt-obsolete}.m4: New.
	* DINO/m4/{libtool, ltoptions, ltsugar, ltversion,
	lt-obsolete}.m4: New.
	* MSTA/m4/{libtool, ltoptions, ltsugar, ltversion,
	lt-obsolete}.m4: New.
	* NONA/m4/{libtool, ltoptions, ltsugar, ltversion,
	lt-obsolete}.m4: New.
	* OKA/m4/{libtool, ltoptions, ltsugar, ltversion,
	lt-obsolete}.m4: New.
	* SHILKA/m4/{libtool, ltoptions, ltsugar, ltversion,
	lt-obsolete}.m4: New.
	* SPRUT/m4/{libtool, ltoptions, ltsugar, ltversion,
	lt-obsolete}.m4: New.

2016-01-07  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* compile, config.guess, config.sub, depcomp: New.
	* AMMUNITION/{compile, config.guess, config.sub, depcomp}: New.
	* SPRUT/{compile, config.guess, config.sub, depcomp}: New.
	* SHILKA/{compile, config.guess, config.sub, depcomp}: New.
	* MSTA/{compile, config.guess, config.sub, depcomp}: New.
	* NONA/{compile, config.guess, config.sub, depcomp}: New.
	* OKA/{compile, config.guess, config.sub, depcomp}: New.
	* DINO/{compile, config.guess, config.sub, depcomp}: New.

2016-01-07  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/allocate++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use allocatecpp.C instead of
	allocate.cpp.
	* AMMUNITION/allocate.tst.in: Add return type to main functions.
	* AMMUNITION/allocate.c: Change config code.
	* AMMUNITION/allocate.cpp: Ditto.  Rename to allocatecpp.C.
	* AMMUNITION/allocate.h: Remove config code.
	* AMMUNITION/IEEE++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use IEEEcpp.C instead of IEEE.cpp.
	* AMMUNITION/IEEE.tst.in: Add return type to main functions.
	* AMMUNITION/IEEE.c: Remove config code relative to assert, memcpy,
	memcmp, limits.
	* AMMUNITION/IEEE.cpp: Ditto.  Rename to IEEEcpp.C.
	* AMMUNITION/IEEE.h: Remove config code.
	* AMMUNITION/airthm++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use airthmcpp.C instead of airthm.cpp.
	Remove config code relative to limits.
	* AMMUNITION/airthm.tst.in: Add return type to main functions.
	Remove config code relative to limits.
	* AMMUNITION/airthm.c: Remove config code relative to assert, memcpy,
	memcmp, limits.
	* AMMUNITION/airthm.cpp: Ditto.  Rename to airthmcpp.C.
	* AMMUNITION/airthm.h: Remove config code.
	* AMMUNITION/bits++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use bitscpp.C instead of bits.cpp.
	* AMMUNITION/bits.tst.in: Add return type to main functions.
	* AMMUNITION/bits.c: Change config code.
	* AMMUNITION/bits.cpp: Ditto.  Rename to bitscpp.C.
	* AMMUNITION/bits.h: Remove config code.
	* AMMUNITION/commline++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use commlinecpp.C instead of commline.cpp.
	* AMMUNITION/commline.tst.in: Add return type to main functions.
	* AMMUNITION/commline.c: Change config code.
	* AMMUNITION/commline.cpp: Ditto.  Rename to commlinecpp.C.
	* AMMUNITION/commline.h: Remove config code.
	* AMMUNITION/cocom-config.h.in: Remove.
	* AMMUNITION/compare_parsers.tst.in: Forward declaration of yylex
	and yyerror.  Add return type to main functions.
	* AMMUNITION/cspset++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use cspsetcpp.C instead of cspset.cpp.
	* AMMUNITION/cspset.tst.in: Add return type to main functions.
	* AMMUNITION/cspset.c: Change config code.
	* AMMUNITION/cspset.cpp: Ditto.  Rename to cspsetcpp.C.
	* AMMUNITION/cspset.h: Remove config code.
	* AMMUNITION/errors++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use errorscpp.C instead of errors.cpp.
	* AMMUNITION/errors.tst.in: Add return type to main functions.
	* AMMUNITION/errors.c: Change config code.
	* AMMUNITION/errors.cpp: Ditto.  Rename to errorscpp.C.
	* AMMUNITION/errors.h: Remove config code.
	* AMMUNITION/hashtab++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use hashtabcpp.C instead of hashtab.cpp.
	* AMMUNITION/hashtab.tst.in: Add return type to main functions.
	* AMMUNITION/hashtab.c: Change config code.
	* AMMUNITION/hashtab.cpp: Ditto.  Rename to hashtabcpp.C.
	* AMMUNITION/hashtab.h: Remove config code.
	* AMMUNITION/objstack++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use objstackcpp.C instead of
	objstack.cpp.  Change congig code.
	* AMMUNITION/objstack.tst.in: Add return type to main functions.
	Change congig code.
	* AMMUNITION/objstack.c: Change config code.
	* AMMUNITION/objstack.cpp: Ditto.  Rename to objstackcpp.C.
	* AMMUNITION/objstack.h: Remove config code.
	* AMMUNITION/position++.tst.in: Add return type to main function.
	Use .C instead of .cpp.  Use positioncpp.C instead of position.cpp.
	* AMMUNITION/position.tst.in: Add return type to main function.
	* AMMUNITION/position.c: Change config code.
	* AMMUNITION/position.cpp: Ditto.  Rename to positioncpp.C.
	* AMMUNITION/position.h: Remove config code.
	* AMMUNITION/sgramm.y: Remove config code.
	* AMMUNITION/spset++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use spsetcpp.C instead of spset.cpp.
	* AMMUNITION/spset.tst.in: Add return type to main functions.
	* AMMUNITION/spset.c: Change config code.
	* AMMUNITION/spset.cpp: Ditto.  Rename to spsetcpp.C.
	* AMMUNITION/spset.h: Remove config code.
	* AMMUNITION/ticker++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use tickercpp.C instead of ticker.cpp.
	* AMMUNITION/ticker.tst.in: Add return type to main functions.
	* AMMUNITION/ticker.c: Change config code.
	* AMMUNITION/ticker.cpp: Ditto.  Rename to tickercpp.C.
	* AMMUNITION/ticker.h: Remove config code.
	* AMMUNITION/vlobject++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use vlobjectcpp.C instead of
	vlobject.cpp.  Change congig code.
	* AMMUNITION/vlobject.tst.in: Add return type to main functions.
	Change congig code.
	* AMMUNITION/vlobject.c: Change config code.
	* AMMUNITION/vlobject.cpp: Ditto.  Rename to vlobjectcpp.C.
	* AMMUNITION/vlobject.h: Remove config code.
	* AMMUNITION/yaep++.tst.in: Add return type to main functions.
	Use .C instead of .cpp.  Use yaepcpp.C instead of yaep.cpp.
	* AMMUNITION/yaep.tst.in: Add return type to main functions.
	* AMMUNITION/yaep.c: Change config code.
	* AMMUNITION/yaep.cpp: Ditto.  Rename to yaepcpp.C.
	* AMMUNITION/yaep.h: Remove config code.
	* AMMUNITION/configure.ac: New.
	* AMMUNITION/Makefile.am: New.
	* AMMUNITION/config.h.in: New.
	* AMMUNITION/Makefile.in: Update.
	* AMMUITION/configure: Update.
	* AMMUITION/aclocal.m4: New.
	* AMMUNITION/ammunition[++].{dvi, pdf, ps}: Update.
	* DINO/configure.ac: New.
	* DINO/Makefile.am: New.
	* DINO/d_config.h.in: New.
	* DINO/Makefile.in: Update.
	* DINO/configure: Update.
	* DINO/aclocal.m4: New.
	* DINO/compare.tst: Use libraries from .libs.
	* DINO/d_common.h: Remove config code relative to assert, memcpy,
	memcmp, limits, floats, errno.
	* DINO/d_dino.c: Remove config code for memcpy, memcmp.  Remove
	HAVE_STRTOLL.
	* DINO/d_heap.c (activate_given_porocess): Remove double declared
	block.
	* DINO/d_main.c: Remove code fro AIX_DLOPEN.
	(main): Remove code for ! NO_DINO_SHLIB.
	* DINO/d_types.h: Remove config code for floats, limits.
	* DINO/dino.{dvi, pdf, ps}: Update.
	* DINO/dino.tst.in: Use libraries from .libs.
	* MSTA/anal.c: Remove config code for limits and assert.
	* MSTA/contexts.c: Ditto.
	* MSTA/common.h: Use config.h.
	* MSTA/descript.c: Remove config code for assert.
	* MSTA/fcalc.y: Add forward decls for yyerror and yylex.  Add
	return type for main.
	* MSTA/gen-comm.c: Remove config code for assert, memcpy.
	* MSTA/gen.c: Remove config code for assert.
	* MSTA/ird.sprut: Ditto.
	* MSTA/la-trie.c: Ditto.
	* MSTA/lr-sets.c: Ditto.
	* MSTA/lr.c: Ditto.
	* MSTA/main.c: Ditto.
	* MSTA/output.c: Ditto.
	* MSTA/parser.c: Remove config code for assert, limits.
	* MSTA/regular.c: Remove config code for assert, memcmp.
	* MSTA/relation.c: Remove config code for assert.
	* MSTA/tab.c: Remove config code for assert, limits.
	* MSTA/yacc.y: Ditto.
	* MSTA/msta.{dvi, pdf, ps}: Update.
	* MSTA/msta.tst.in: Add return types to yylex and yyerror.
	* MSTA/configure.ac: New.
	* MSTA/Makefile.am: New.
	* MSTA/config.h.in: New.
	* MSTA/Makefile.in: Update.
	* MSTA/configure: Update.
	* MSTA/aclocal.m4: New.
	* NONA/configure.ac: New.
	* NONA/Makefile.am: New.
	* NONA/config.h.in: New.
	* NONA/Makefile.in: Update.
	* NONA/configure: Update.
	* NONA/aclocal.m4: New.
	* NONA/anal.c: Remove config code for assert.
	* NONA/gen.c: Ditto.
	* NONA/main.c: Ditto.
	* NONA/yacc.y: Ditto.
	* NONA/tab.c: Remove config code for assert and limits.
	* NONA/common.h: Modify config code.
	* NONA/nona.{dvi, pdf, ps}: Update.
	* OKA/configure.ac: New.
	* OKA/Makefile.am: New.
	* OKA/config.h.in: New.
	* OKA/Makefile.in: Update.
	* OKA/configure: Update.
	* OKA/aclocal.m4: New.
	* OKA/anal.c: Remove config code for assert.
	* OKA/main.c: Ditto.
	* OKA/yacc.y: Ditto.
	* OKA/gen.c: Remove config code for assert, floats, limits.
	* OKA/tab.c: Remove config code for assert and limits.
	* OKA/common.h: Modify config code.
	* OKA/oka.{dvi, pdf, ps}: Update.
	* OKA/SCHEDULE/schedtst.c (scheduler_execution_duration): Make int
	as return type.
	* OKA/SCHEDULE/schedule++.tst.in: Use srcdir instead of top_srcdir.
	* OKA/SCHEDULE/schedule.tst.in: Ditto.
	* ONIGURUMA/Makefile.in: Update.
	* ONIGURUMA/aclocal.m4: Ditto.
	* ONIGURUMA/configure: Ditto.
	* ONIGURUMA/sample/Makefile.in: Ditto.
	* ONIGURUMA/configure.in (AM_INIT_AUTOMAKE): Add foreign.
	* SHILKA/configure.ac: New.
	* SHILKA/Makefile.am: New.
	* SHILKA/config.h.in: New.
	* SHILKA/Makefile.in: Update.
	* SHILKA/configure: Update.
	* SHILKA/aclocal.m4: New.
	* SHILKA/anal.c: Remove config code for assert.
	* SHILKA/main.c: Ditto.
	* SHILKA/yacc.y: Ditto.
	* SHILKA/gen.c: Remove config code for assert, limits.
	* SHILKA/tab.c: Ditto.
	* SHILKA/common.[ch]: Modify config code.
	* SHILKA/shilka.{dvi, pdf, ps}: Update.
	* SHILKA/compare.tst.in: Use .libs.
	* SHILKA/shilka.tst.in: Add return types to main functions.
	* SPRUT/configure.ac: New.
	* SPRUT/Makefile.am: New.
	* SPRUT/config.h.in: New.
	* SPRUT/Makefile.in: Update.
	* SPRUT/configure: Update.
	* SPRUT/aclocal.m4: New.
	* SPRUT/anal.c: Remove config code for assert.
	* SPRUT/main.c: Ditto.
	* SPRUT/yacc.y: Ditto.
	* SPRUT/gen.c: Remove config code for assert, limits.
	* SPRUT/tab.c: Ditto.
	* SPRUT/common.h: Modify config code.
	* SPRUT/sprut-ird.c: Remove config code for memcpy.
	* SPRUT/sprut.{dvi, pdf, ps}: Update.
	* SPRUT/A_test.sprut: Add return types to main functions.
	* configure.in: Delete.
	* configure.ac: New.
	* Makefile.am: New.
	* config.h.in: New.
	* Makefile.in: Update.
	* configure: Update.
	* aclocal.m4: New.

2015-12-23  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_common.h (check_encoding_on_ascii): New.
	(ucodestrlen): Add return type.

2015-10-18  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_yacc.y (declaration): Use qual_ident in use-clause.
	* DINO/d_ir.sprut (use): Rename use_ident to use_qual_ident.
	* DINO/d_errors.[ch] (ERR_non_object_in_use_qual_ident): New.
	* DINO/d_context.c (first_block_passing): Process qual_ident in
	use-clause.
	* DINO/dino.tst.in (95): Change expected error.
	(838-840): New.

2015-10-16  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Break long lines.  Add description of objects as
	spaces and expose-clause.
	* DINO/d_kw.shilka (expose): New.
	* DINO/d_bc.sprut (ofun, oclass, ovfld, lovfld, lovfldv, omcall):
	New.
	(omicall, omicall, op2_decl, objomicall, ovfield): Ditto.
	(print_node): Add parameter for omcall, omicall, omitcall.
	* DINO/d_bcf.shilka (o_decl, ov_decl, om_decl, mfblock): New.
	* DINO/d_bcio.c (dump_code): Process the new nodes.
	(read_bc_program): Process the new fields.
	* DINO/d_bcn.shilka (ofun, oclass, ovfld, lovfld, lovfldv): New.
	(omcall, omicall, omicall): New.
	* DINO/d_context.c (first_expr_processing): Set up and propagate
	decl for period op component.
	(find_expose_designator_decl, create_expose_decl): New.
	(first_block_passing): Process expose-clause.
	(gen_decl_access, create_obj_decl_access): New.
	(exposed_objects): New.
	(second_expr_processing): Use gen_decl_access.  Add code for
	generating access to exposed idents.
	(make_designator_lvalue): Process ovfld.
	(modify_copied_pc): Process ovfield, op2_del.
	(second_block_passing): Generate omitcall.  Process ovfld,
	expose_decl.
	(initiate_context): Create exposed_objects.
	(finish_context): Delete exposed_objects.
	* DINO/d_errors.[ch] (ERR_no_public_declaration_in_object): New.
	(ERR_non_object_in_expose_clause): New.
	(ERR_expose_clause_inside_referring_object): New.
	* DINO/d_eval.c (evaluate_code): Add code for ofun, oclass, ovfld,
	lovfld, lovfldv, omcall, omicall, omicall.
	* DINO/d_gen.c (execute_ovld_operation, ofun, oclass, ovfld): New.
	(lovfld, lovfldv, omcall, common_omicall, omicall, omicall): New.
	(ofunclass, ofun, oclass): New.
	* DINO/d_inference.c (get_insn_op_place, type_transf): Process
	ofun, oclass, ovfld, lovfld, lovfldv, omcall, omicall, omicall.
	(specialize_insn): Ditto.
	* DINO/d_ir.sprut (class): Add obj_var.
	(expose, expose_decl): New.
	(hash_func, compare_func): Process expose_decl.
	* DINO/d_yacc.y (process_var_decl): Add parameter obj_block.
	(process_obj_block): Pass the new parameter.
	(EXPOSE): New terminal.
	(all_fields, expose_clause, expose_qual_ident, qual_ident): New
	nonterminals and rules for them.
	* DINO/dino.tst.in (817-837): New tests for object accesses and
	expose-clause.

2015-10-09  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.in: Revert changes from branch space creation.
	* DINO/d_context.c: Ditto.
	* DINO/d_gen.c: Ditto.
	* DINO/d_ir.sprut: Ditto.
	* DINO/d_kw.shilka: Ditto.
	* DINO/d_yacc.y: Ditto.

2015-12-16  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_dino.c (get_ucode_from_stream): Fix assert.
	(dino_main): Decode command line program.
	* DINO/d_func.c (process_onig_errors, find_regex): Add param.
	Pass the args to the calls.
	* DINO/dino.sgml.in: Describe \b.
	* DINO/dino-9.html: Update.
	* DINO/dino.{dvi, pdf, ps, info, txt): Ditto.
	* DINO/dino.tst.in (862-864): New tests.

2015-12-16  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_bc.sprut: Change regexp to regex.
	* DINO/d_errors.[ch]: Ditto.
	* DINO/d_ir.sprut: Ditto.
	* DINO/d_func.c: Ditto.
	(get_token): Read a new form of string.
	* DINO/d_yacc.y (yylex): Process a new form of string.
	* DINO/dino.sgml.in: Change regexp to regex.  Describe a ne form
	of string.  Rewrite regex description.
	* DINO/dino.{html, dvi, info, pdf, ps, txt}: Update.
	* DINO/dino-{3,4,9}.html: Update
	* DINO/dino.tst.in: Change regexp to regex.
	(849-861): New tests for string and regex.

2015-12-12  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* configure.in: Check getc_unlocked.
	* configure: Update.
	* AMMUNITION/cocom-config.h.in: Update.
	* DINO/Makefile.in: Update deps.
	(source): Add d_enc.shilka.
	(d_enc.c): New.
	(clean): Add d_enc.c.
	(depend): Ditto.
	* DINO/d_bc.sprut (FILE_ENCODING_TYPE_NAME): New.
	(file_encoding_type_bc_decl): New.
	(bc_decls_table): Add entry for file_encoding_type_bc_decl.
	* DINO/d_bcio.c: Use dino_getc instead of getc.
	* DINO/d_common.h (curr_encoding_name, get_encoding_type): New.
	(set_conv_descs, encode_byte_str_vlo, encode_ucode_str_vlo): Add
	param tp.
	(get_ucode_from_stream): Ditto.
	(dino_getc): New.
	(read_byte): Use dino_getc insteadd of fgetc.
	* DINO/d_dino.c: Include d_enc.c.
	(get_encoding_type, curr_encoding_type): New.
	(initiate_cds): Set up curr_encoding_type.
	(raw_encoding_name_p): Delete.  Use get_encoding_type instead.
	(set_conv_descs, encode_byte_str_vlo, encode_ucode_str_vlo): Add
	param tp.  Use it.
	(get_ucode_from_stream, print_ucode_string): Ditto.
	* DINO/d_eval.c (find_catch_pc): Pass new arg to
	encode_byte_str_vlo, encode_ucode_str_vlo.
	* DINO/d_func.c (get_file_encoding_type): New.
	(set_file_encoding, general_str_to_world, finish_output): Add
	param tp.  Pass it calls.
	(general_put_call, general_print_call, get_file_char): Ditto.
	(general_get_call, general_get_ln_file_call, get_char_code): Ditto.
	(invinput_error, get_token, scanel, general_scan_call): Ditto.
	(general_putf_call): Ditto.
	(number_file_encoding_type): New.  Setup it get_token.
	* DINO/d_ir.sprut (ENVIRONMENT): Add file_encoding_type.
	* DINO/d_types.h (enum encoding_type, encoding_type_t): New.
	* DINO/d_yacc.y: Pass type to get_ucode_from_stream,
	set_conv_descs, encode_byte_str_vlo, encode_ucode_str_vlo.  Use
	dino_getc instead of fgetc.
	* DINO/d_enc.shilka: New.

2015-12-10  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/dino.tst.in (DERR_in_ucode_encoding): Make more meaningful output.
	(DERR_unexpected_input_encoding): Ditto.
	* DINO/d_yacc.y (get_full_file_and_encoding_name): Process null
	fname after encoding.
	* DINO/dino.tst.in (844-848): New tests.

2015-12-10  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_common.h (RAW_STRING2): New.
	* DINO/d_dino.c (raw_encoding_name_p): Use it.
	(set_conv_descs): Recognize RAW encoding.
	* DINO/d_extern.sprut: Add comment for disp field.
	* DINO/d_func.c (process_errno_call): Add an assert.
	* DINO/dino.1: Add description of encoding and environment
	variable DINO_ENCODING.
	* DINO/dino.sgml.in: Descirbe \x, \u, \U, parvalue, invencoding,
	{get,set}_[file_]encoding.
	* DINO/dino-{2-5, 9, 11}.html: Update.
	* DINO/dino.{dvi, info, pdf, ps, txt}: Update.
	* DINO/dino.tst.in (72): Change [:alpha:] to [[:alpha:]].
	(843): New test for RAW.

2015-12-09  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/ammunition[++].{ps, dvi, pdf}: Update.
	* DINO/d_bc.sprut (EBRACK_NAME, REG_ERANGE_NAME, ECTYPE_NAME):
	Remove.
	(EPAREN_NAME, ESUBREG_NAME, EEND_NAME, EESCAPE_NAME, BADPAT_NAME):
	Ditto.
	(ESIZE_NAME, ESPACE_NAME): Ditto.
	(ebrack_bc_decl, reg_erange_bc_decl, ectype_bc_decl): Remove.
	(eparen_bc_decl, esubreg_bc_decl, eend_bc_decl, eescape_bc_decl):
	Ditto.
	(badpat_bc_decl, esize_bc_decl, espace_bc_decl): Ditto.
	(bc_decls_table): Remove the corresponding entries.
	* DINO/d_bcio.c (dump_code): Use isgraph_ascii instead of isgraph.
	(get_token): Use isalpha_ascii instead of isalpha.  Use
	isdigit_ascii instead of isdigit.
	* DINO/d_common.h (isalpha_ascii, isdigit_ascii, isspace_ascii):
	New.
	(isgraph_ascii, isprint_ascii): New.
	(print_ucode_string): Remove prototype.
	* DINO/d_conv.c (implicit_arithmetic_conversion): Use
	isdigit_ascii instead of isdigit.
	* DINO/d_dino.c (get_first_nondigit, read_dino_string_code): Use
	isdigit_ascii instead of isdigit.
	(read_dino_number): Ditto.
	(get_ucode_ascii_repr): Use isprint_ascii instead of isprint.
	(print_ucode_string): Make static.
	(get_ucode_from_stream): Zeroing errno for incomplete seq.
	* DINO/d_errors.[ch]
	(ERR_file_name_cannot_represented_in_current_encoding): New.
	(DERR_reg_ebrack, DERR_reg_erange, DERR_reg_ectype): Remove.
	(DERR_reg_eparen, DERR_reg_esubreg, DERR_reg_eend): Ditto.
	(DERR_reg_eescape, DERR_reg_badpat, DERR_reg_esize): Ditto.
	(DERR_reg_espace): Ditto.
	(DERR_regexp): New.
	* DINO/d_func.c (process_onig_errors): Remove switched of code.
	Use DERR_regexp.
	(get_char_code): Return int.  Use isdigit_ascii instead of
	isdigit.
	* DINO/d_ir.sprut (ENVIRONMENT): Remove exceptions ebrack, erange,
	ectype, eparen, esubreg, eend, eescape, badpat, esize, espace.
	* DINO/d_yacc.y (get_full_file_and_encoding_name): Pass name as
	IR_node_t.  Encode name.  Check it on null char.
	(add_include_file): Ditto.
	(temp_scanner_vlo2): New.
	(skip_spaces): Use isspace_ascii instead of isspace.
	(find_encoding): Use isalpha_ascii instead of isalpha.
	(yylex): Ditto. Use isdigit_ascii instead of isdigit.
	(initiate_scanner, finish_scanner): Create destroy
	temp_scanner_vlo2.
	* DINO/dino.sgml.in: Unicode escape codes.
	(ebrack, erange, ectype, eparen, esubreg, eend, eescape, badpat):
	Remove.
	(esize, espace): Remove.
	* DINO/dino-{3,4,9}.html: Update.
	* DINO/dino.{html, dvi, info, pdf, ps, txt}: Update.
	* DINO/dino.tst.in: Add file encoding.
	(82-87, 459): Change expected regexp errors.
	(831-832, 839, 840): Use echo -e.
	(841-842): New.

2015-09-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_common.h (value_of_hex_digit): Add 10 for letters.
	(print_string, print_byte): Remove.
	* DINO/d_dino.c (d_verror): Use fprintf instead of print_string.
	(get_ucode_from_stream): Start from the same char when input is
	incomplete.
	(print_string): Remove.
	(DEFAULT_DINO_ENCODING): New.
	(dino_main): Process DEFAULT_DINO_ENCODING. Use
	check_encoding_on_ascii.
	* DINO/d_errors.c (ERR_file_encoding): Rename to
	ERR_source_file_encoding.
	(ERR_file_decoding): Change message.
	(ERR_non_ascii_source_file_encoding): New.
	(DERR_non_ascii_default_encoding): New.
	* DINO/d_errors.h (ERR_file_encoding): Rename to
	ERR_source_file_encoding.
	(ERR_non_ascii_source_file_encoding): New.
	(DERR_non_ascii_default_encoding): New.
	* DINO/d_func.c (print_val): Use byte_t cast.
	(general_put_call): Use FALSE for res_byte_p.
	(set_encoding_call): Use check_encoding_on_ascii.
	* DINO/d_inference.c (get_insn_op_place, type_transf): Process
	ldus.
	(specialize_insn): Ditto.
	* DINO/d_yacc.y (push_curr_istream): Use check_encoding_on_ascii.
	(d_getc): Use current position for errors.
	* DINO/dino.tst.in: New tests 821-840.
	* Makefile.in: Remove REGEX mentioning.
	* README.md: Oniguruma, Unicode 8 support, and 2 Bcode
	representations.

2015-08-04  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_common.h (encode_byte_str_vlo): Add inout param len.
	(encode_ucode_str_vlo): Ditto.
	(encode_ucode_str_to_raw_vlo, get_ucode_from_stream): New.
	(print_string, print_ucode_string): New.
	(get_ucode_from_stream, get_ucode_from_utf8_stream): Remove.
	(put_ucode_to_utf8_stream, print_ucode_string_as_utf8): Ditto.
	* DINO/d_dino.c (dino_finish): Move deleting vlos below.
	(dino_start): Move created vlos up.
	(d_verror): Use print_string.
	(get_utf8_byte, utf8_str_to_ucode_vlo): Remove.
	(encode_byte_str_vlo): Add inout param len.
	(encode_ucode_str_vlo): Ditto.
	(encode_ucode_str_to_raw_vlo, get_ucode_from_stream): New.
	(print_string, print_ucode_string): New.
	(check_encoding_on_ascii): New.
	* DINO/d_eval.c (find_catch_pc): Add param to call
	encode_{byte,ucode}_str_vlo.
	* DINO/d_func.c (add_string_to_print): New.
	(print_contex): Add parameter.
	(ucode_str_to_raw): Remove.
	(general_str_to_world): Add parameter.
	(strvect_to_world): Add argumentto call of general_str_to_world.
	(in_str_p): Add parameter.
	(chumod_call, chgmode_call, chomod_call): Pass new arg to
	in_str_p.
	(popen_call): Add non-byte case.
	(print_ch): Add parameter.  Use add_string_to_print.
	(print_val): Change prototype.  Use add_string_to_print.
	(end_printed_string): New.
	(repl_print, general_put_call, general_print_call): Use it.
	(finish_output): Use fwrite.
	(general_putf_call): Process errno.
	* DINO/d_yacc.y (find_encoding): Permit /.: in encoding name.
	(get_read_line): Remove const from return type.
	* DINO/d_yacc.h (get_read_line): Ditto.

2015-07-20  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_yacc.y (temp_scanner_vlo): Move up.
	(read_line): Use current encoding.
	(read_str_line, find_encoding, skip_spaces): New.
	(read_file_encoding): Fully implement.
	* DINO/d_errors.[ch] (ERR_line_decoding): New.
	* DINO/d_dino.c (d_verror): Don't print line for
	ERR_line_decoding.

2015-07-19  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_dino.c (set_conv_descs): Process null byte_cd and
	ucode_cd.  Do not call eval_error, just return FALSE.
	(dino_finish): Finish unique strings later.
	(dino_start): Initiate unique strings earlier.
	(dino_main): Add encoding argment to calls of start_scanner_file.
	Use source_file_encoding.
	* DINO/d_errors.[ch] (ERR_file_encoding, ERR_file_decoding): New.
	(DERR_unexpected_input_encoding): New.
	* DINO/d_func.c (get_file_char): Add eval_error call.
	(general_get_call, general_get_ln_file_call): Ditto.
	(readdir_call): Use curr_reverse_ucode_cd.
	* DINO/d_yacc.h (source_file_encoding): New.
	(sstart_scanner file): Add parameter.  Set it up.
	* DINO/d_yacc.y (full_file_name): Rename to
	get_full_file_and_encoding_name.
	(struct istream_state): Add encoding_name.  Use conv_desc_t for
	cd.
	(initiate_istream_stack): Initiate cd and file_encoding.
	(finish_istream_stack): Finish cd.
	(push_curr_istream): Add parameter encoding_name.  Close cd.  Set
	up new encoding name and cd.
	(pop_istream_stack): Close old cd.  Set up new cd.
	(read_file_encoding, source_file_encoding): New.
	(d_getc): Use file encoding.  Check char correctness.
	(start_scanner_file): Add parameter encoding name.  Pass it to
	push_curr_istream.

2015-07-13  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_dino.c (command_line_os): Rename to command_line_vlo.
	Make it vlo.
	(encode_str_os): Remove.
	(dino_main): Use str_to_ucode_vlo to make command line.  Do not
	encode program_arguments.

2015-07-13  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.in: Update dependencies.
	* DINO/d_bc.sprut (UNGET_CHAR_NAME, unget_char_bc_decl): New.
	(bc_decls_table): Add entry for unget_char_bc_decl.
	* DINO/d_common.h: Move most definitions from d_dino.h.  Move
	ucode functions from d_types.h.
	(curr_byte_cd, curr_ucode_cd, curr_reverse_ucode_cd): Move from
	d_ir.sprut.
	(curr_encoding_name, RAW_STRING, UTF8_STRING, LATIN1_STRING):
	Ditto.
	(set_conv_descs): Move from d_func.c.
	(get_ucode_from_stream): New.
	(get_file_char): Remove.
	* DINO/d_dino.c (curr_byte_cd, curr_ucode_cd): Move from
	d_ir.sprut.
	(curr_reverse_ucode_cd, curr_encoding_name): Ditto.
	(initiate_cds, finish_cds): Move from d_eval.c.
	(set_cds): New.
	(raw_encoding_name, set_conv_descs): Move from d_func.c.
	(command_line_vlo): Rename to command_line_os.  Make it an
	objstack.
	(encode_str_os): New.
	(dino_finish): Call finish_cds.
	(dino_main): Use current encoding for command line and arguments.
	Print error if command line is not in this encoding.  Call set_cds
	and initiate_cds.
	* DINO/d_dino.h: Move most definitions to d_common.h.
	(DINO_ENCODING): New.
	* DINO/d_eval.h (finish_cds): Remove.
	* DINO/d_eval.c (initiate_cds, finish_cds): Move to d_dino.c.
	* DINO/d_func.c (get_file_unget_char_ptr): New.
	(raw_encoding_name, set_conv_descs): Move to d_dino.c.
	(place_file_instance): Initiate unget_char of the file.
	(get_file_char, unget_file_char): New.
	(general_get_call): Add param unget_char_ptr.
	(general_get_ln_file_call, invinput_error): Ditto.
	(finish_io): Ditto. Use unget_file_char.
	(get_call, getln_call, getf_call, fget_call, fgetln_call): Pass
	new param to general get calls.
	(fgetf_call): Ditto.
	(number_unget_char_ptr): New.
	(number_previous_char): Remove.
	(n_getc, n_ungetc): Rewrite using unget_char_ptr.
	(get_token, scanel, general_scan_call): Add param unget_char_ptr.
	(scan_call, scanln_call, fscan_call): Pass new param to general
	scan calls.
	(set_encoding_call, set_file_encoding_call): Check and report
	encoding correctness.
	* DINO/d_ir.sprut (ENVIRONMENT): Add unget_char to file.
	* DINO/d_run.sput (curr_byte_cd, curr_ucode_cd): Move to
	d_common.h.
	(curr_reverse_ucode_cd, curr_encoding_name, RAW_STRING): Ditto.
	(UTF8_STRING, LATIN1_STRING): Ditto.
	* DINO/d_types.h: Move to d_common.h.

2015-07-10  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/cocom-config.h.in (HAVE_ICONV_H): New undef.
	* configure.in (AC_CHECK_HEADERS): Add iconv.h.
	* configure: Update.
	* DINO/d_yacc.y (struct istream_state): Add cd.
	* DINO/d_run.sprut (curr_byte_cd, curr_ucode_cd): New.
	(curr_reverse_ucode_cd, curr_encoding_name): Ditto.
	(RAW_STRING, UTF8_STRING, LATIN1_STRING): Ditto.
	* DINO/d_dino.h (conv_desc_t, NO_CONV_DESC): New.
	* DINO/d_dino.c (str_hash_func, str_compare_func): Moved from
	d_bcio.c.
	(unique_strings, unique_string_hash_table): New.
	(initiate_unique_strings, get_unique_string): Ditto.
	(finish_unique_strings): Ditto.
	(dino_finish): Call finish_unique_string, finish_cds, and
	finish_funcs.
	(dino_start): Call initiate_unique_strings.
	(put_utf8_byte, ucode_str_to_utf8_vlo, ucode_char_to_utf8_vlo): Delete.
	(encode_byte_str_vlo, encode_ucode_str_vlo): New.
	* DINO/d_errors.[ch] (DERR_parameter_value): New.
	(DERR_in_ucode_encoding): New.
	* DINO/d_eval.c (find_catch_pc): Use encode functions.  Check null
	result.
	(initiate_cds, finish_cds): New.
	(evaluate_program): Call initiate_cds.
	* DINO/d_eval.h (finish_cds): New.
	* DINO/d_func.c (ifun_name): New.
	(curr_raw_p); Delete.
	(process_onig_errors): Remove function_name param.  Use ifun_name.
	(get_file_encoding): Rename to get_file_encoding_name.  Rewrite
	returning a string.
	(get_file): Remove function_name param.  Use ifun_name.  Delete
	param raw_p.  Add param file_instance.  Set it up.
	(get_file_input_cd, get_file_output_cd): New.
	(raw_encoding_name_p, setc_conv_descs, set_file_encoding): New.
	(place_file_instance): Remove raw_p param.  Use the new functions.
	(two_strings_fun_start, string_fun_start, get_stat): Remove
	function_name param.  Use ifun_name.
	(general_chmod, file_start): Ditto.
	(general_str_to_world): Remove raw_p, add byte_cd and unicode_cd.
	Use the encode functions.
	(strvect_to_world): Remove raw_p.  Use curr_byte_cd and
	curr_ucode_cd.
	(close_call): Close file cds.
	(print_val): Remove raw_p, add byte_cd and unicode_cd.
	(file_function_call_start): Remove function_name param.  Use
	ifun_name.  Delete param raw_p.  Add param file_instance.
	(finish_output, general_put_call, general_print_call): Remove
	raw_p, add byte_cd and unicode_cd.
	(put_call, putln_call, fput_call, fputln_call): Use
	get_file_output_cds.
	(print_call, println_call, fprint_call, fprintln_call): Ditto.
	(general_get_call): Remove param raw_p, add cd.
	(general_get_ln_file_call): Ditto.  Remove fun_name param.
	Use ifun_name.
	(get_call, getln_call, getf_call): Use get_file_input_cd.
	(fget_function_call_start): Remove function_name param.  Use
	ifun_name.
	(get_char_code, general_scan_call): Remove param raw_p, add cd.
	(invinput_error, get_token, scanel): Ditto.  Remove function_name
	param.  Use ifun_name.
	(number_file_raw_p): Delete.
	(number_file_cd): New.
	(function_without_par): Remove function_name param.  Use
	ifun_name.
	(general_putf_call): Remove raw_p, add byte_cd and unicode_cd.
	(putf_call, fputf_call): Use get_file_output_cds.
	(float_function_start, float_function_start2): Remove
	function_name param.  Use ifun_name.
	(float_function_finish, stat_start): Ditto.
	(set_encoding_call, get_encoding_call): Ditto.
	(set_file_encoding_call, get_file_encoding_call): Ditto.
	* DINO/d_func.h (finish_funcs): New.
	* DINO/d_ir.sprut (ENVORONMENT): Add parvalue, set_encoding,
	get_encoding, set_file_encoding, get_file_encoding.  Add file_icd,
	file_byte_ocd, file_ucode_ocd to file.
	* DINO/d_bc.spurt (PARVALUE_NAME, parvalue_bc_decl): New.
	(FILE_ICD_NAME, file_icd_bc_decl): Ditto.
	(FILE_BYTE_OCD_NAME, file_byte_ocd_bc_decl): Ditto.
	(FILE_UCODE_OCD_NAME, file_ucode_ocd_bc_decl): Ditto.
	(SET_ENCODING_NAME, set_encoding_bc_decl): Ditto.
	(GET_ENCODING_NAME, get_encoding_bc_decl): Ditto.
	(SET_FILE_ENCODING_NAME, set_file_encoding_bc_decl): Ditto.
	(GET_FILE_ENCODING_NAME, get_file_encoding_bc_decl): Ditto.
	(bc_decls_table): Add entries for parvalue_bc_decl,
	file_icd_bc_decl, file_byte_ocd_bc_decl, file_ucode_ocd_bc_decl,
	set_encoding_bc_decl, get_encoding_bc_decl,
	set_file_encoding_bc_decl, get_file_encoding_bc_decl.
	* DINO/d_bcio.c (str_hash_func, str_compare_func): Move to
	d_dino.c.
	* DINO/d_built.h (set_encoding_call, get_encoding_call): New.
	(set_file_encoding_call, get_file_encoding_call): Ditto.
	* DINO/d_common.h (str_hash_func, str_compare_func): New.
	(get_unique_string): Ditto.
	(ucode_str_to_utf8_vlo, ucode_char_to_utf8_vlo); Delete.
	(byte_str_to_utf8_vlo): Delete.
	(encode_byte_str_vlo, encode_ucode_str_vlo): New.
	(get_file_char): Make second paramater a conversion descriptor.

2015-07-01  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_ir.sprut (ENVIRONMENT): Add invencoding and
	file_encoding.
	* DINO/d_bc.sprut (INVENCODING_NAME, invencoding_bc_decl): New.
	(FILE_ENCODING_NAME, file_encoding_bc_decl): New.
	(bc_decls_table): Add entries for invencoding and file_encoding.
	* DINO/d_common.h (get_file_char): New.
	* DINO/d_dino.c: Add ???.
	* DINO/d_errors.[ch] (DERR_too_big_ucode_for_byte_representation):
	New.
	* DINO/d_func.c (curr_raw_p, get_file_encoding): New.
	(get_file): Return encoding.
	(place_file_instance): Set file encoding.
	(ucode_str_to_raw): New.
	(general_str_to_utf8): Rename to general_str_to_world, add
	encoding parameter.
	(strvect_to_utf8): Rename to strvect_to_world, add encoding
	parameter.
	(rename_call, remove_call, mkdir_call, rmdir_call, readdir_call):
	Use curr_raw_p.
	(chdir_call, get_stat, get_chmod, chumod_call, chgmod_call):
	Ditto.
	(chomod_call, isatty_call, popen_call, repl_print): Ditto.
	(file_start, file_function_call_start, finish_output): Add
	encoding parameter.
	(close_call, pclose_call, tell_call): Pass NULL arg to get_file.
	(seek_call): Ditto.  Use curr_raw_p.
	(print_val, general_put_call, general_print_call): Add encoding
	parameter.  Use it.
	(put_call, putln_call, fput_call, fputln_call): Use file encoding.
	(sput_call, sputln_call): Use raw encoding.
	(print_call, println_call, fprint_call, fprintln_call): Use file
	encoding.
	(sprint_call, sprintln_call): Use raw encoding.
	(general_get_call): Use get_file_char.
	(general_get_ln_file_call, get_char_code, invinput_error): Ditto.
	Add encoding parameter.  Use it.
	(get_token): Ditto.
	(get_call, getf_call, fget_call, fgetln_call, fgetf_call): Use
	file encoding.
	(fget_function_call_start, scanel, general_scan_call): Add
	encoding parameter.  Use it.
	(general_putf_call): Ditto.
	(number_file_raw_p, number_previous_char): New.
	(n_getc, n_ungetc): Rewrite using the above vars.
	(scan_call, scanln_call, fscan_call, fscanln_call): Use
	file encoding.
	(putf_call, fputf_call): Use file encoding.
	(sputf_call): Use raw encoding.
	(init_call): Pass utf8 encoding to place_file_instance.
	(initiate_funcs): Set curr_raw_p.
	(int_earley_parse_grammar): Use curr_raw_p.

2015-06-27  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_run.sprut (long higher_prime_number): New prototype.
	* DINO/d_heap.c (long higher_prime_number): Make it external.
	* DINO/d_func.c (struct subst_map_el): New.
	(subst_map_hash_index, subst_map_hash_index_len): New.
	(subst_map_els, subst_map_els_len, subst_map_els_bound): New.
	(initiate_subst_map, free_subst_map, finish_subst_map): New.
	(start_subst_map, set_map_subst, get_map_subst): New.
	(translit_call): Rewrite with the new functions.
	(initiate_funcs): Call initiate_subst_map.
	(finish_funcs): Call finish_subst_map.

2015-06-27  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_udb.h (ucode_tolower, ucode_toupper): New.
	* DINO/d_udb.c (ucode_tolower, ucode_toupper): New.
	* DINO/d_func.c (to_lower_upper): Permit chars.  Rewrite using the
	new functions.

2015-06-26  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_func.c (gmatch_call): Check empty string matched.  Check
	disp to break the loop.
	(general_sub_call): Add comment.  Change empty string match
	condition.
	(split_call): Scale els_number by ch_size.
	* DINO/dino.tst.in (818-820): New tests.

2015-06-26  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_func.c (split_call): Check disp to break loop.
	* DINO/dino.tst.in (73): Change expected output.
	(374): Check empty matched string.
	(817): New.

2015-06-26  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/{process_ucodedb.d, UnicodeDB.c, UnicodeData.txt): New
	files.
	* DINO/d_udb.[ch]: New files.
	* DINO/d_func.c (d_udb.h): Include.
	(initiate_funcs): Call check_ucode_db.
	(split_call): Use other criterium of empty pattern match.
	* DINO/Makefile.in: Update dependencies.
	(objects): Add d_udb.o.
	(sources): Add d_udb.h and d_udb.c.
	(additional_files): Add UnicodeData.txt and process_ucodedb.d.
	(prepare-unicode, $(srcdir)/UnicodeDB.c): New entries.

2015-06-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* REGEX: Remove all the directory.
	* DINO/Makefile.in: Update dependencies.

2015-06-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_bc.sprut (ucodestr_t): New type.
	(string_t): Remove.
	(ldus): New.
	* DINO/d_bcf.shilka (ustr): New.
	* DINO/d_bcio.c: Add comment about using only Latin-1.
	(print_ustr): New.
	(dump_code): Process ldus.
	(token): Add D_UCODESTR.
	(token_attr): Add new field ustr.
	(bc_getc): Check on NOT_A_CHAR.
	(bc_ungetc): Don't use ungetc.
	(ucodestr_hash_table): New.
	(hash_func, compare_func): Rename to str_hash_func and
	str_compare_func.
	(ustr_hash_func, ustr_compare_func): New.
	(initiate_string_table, delete_string_table): Rename to
	initiate_string_tables and delete_string_tables.  Handle new ustr
	tables.
	(ucodestr_to_table): New.
	(temp_vlo): New.
	(get_token): Process wrong escape code.  Create ucodestr if
	necessary.
	(get_decl): Process ustr field.
	(initiate_read_bc, finish_read_bc): Handle temp_vlo.
	* DINO/d_bcf.shilka (ldus): New.
	* DINO/d_common.h: Add #ifdef for the header.
	(big_endian_p): New.
	(get_ch_repr): Rename to get_ucode_ascii_repr.
	(read_string_code): Rename to read_dino_string_code.
	(copy_vlo, str_to_ucode_vlo): New.
	(ucode_str_to_utf8_vlo): New.
	(unicode_char_to_utf8_vlo, byte_str_to_utf8_vlo): New.
	* DINO/d_context.c (first_expr_processing): Process ucodestr.
	(second_expr_processing): Ditto.
	* DINO/d_conv.h (form_format_string): Transfer Dino vector for
	format instead of string.  Return byte string flag.
	(to_vect_string_conversion): Transfer Dino vector as format
	instead of string.
	* DINO/d_conv.c (cptr_add, ptr_add, ptr_ref, char_assign): New.
	(add_char): New.
	(form_format_string): Treat fmt as packed vector.  Deal with byte
	and ucode strings.  Return flag of byte string result.  Use the
	new functions.
	(to_vect_string_conversion ): Treat fmt as packed vector.  Call
	unconditionally try_full_pack instead of
	pack_vector-if_possible. Process byte and ucode strings after
	form_format_string.
	(implicit_arithmetic_conversion): Use ER_NM_byte vs. ER_NM_char.
	(implicit_conversion_for_eq_op): Permit byte elements too.  Call
	try_full_pack.
	* DINO/d_dino.h: Remove 'ifdef DINO_H'
	(big_endian_p): Remove.
	* DINO/d_dino.c (command_line_program): Define as unicode string.
	(get_ch_repr): Rename to get_ucode_ascii_repr.  Print hexadecimal
	and ucode escape chars.
	(read_string_code): Rename to read_dino_string_code.  Add new
	param wrong_escape_code.  Process hexadecimal and ucode escape
	chars.
	(read_number): Rename to read_dino_number.
	(command_line_vlo): New.
	(dino_finish): Delete command_line_vlo.
	(dino_start): Create command_line_vlo.
	(d_verror): Make ln an ucode string.  Use print_ucode_string_as_utf8.
	(copy_vlo, str_to_ucode_vlo, get_ut8_byte): New.
	(utf8_str_to_ucode_vlo, put_utf8_byte, ucode_str_to_utf8_vlo):
	New.
	(unicode_char_to_utf8_vlo, byte_str_to_utf8_vlo): New.
	(dino_main): Apply utf8_to_ucode for the command line.
	* DINO/d_errors.h (ERR_invalid_escape_code): New.
	* DINO/d_errors.c (ERR_invalid_escape_code): New.
	* DINO/d_eval.c (load_packed_vector_element):  Process byte case.
	(store_packed_vector_element): Process byte case.  Transform
	vector into ucode vect if necessary.
	(store_vector_element): Permit byte vector and char element case.
	(process_slice_extract): Process byte vectors too.
	(process_slice_assign): Process byte vector cases.  Transform
	vectors into ucode vect if necessary.  Call try_full_pack instead
	of pack_vector_if_possible.
	(find_catch_pc): Call try_full_pack instead
	of pack_vector_if_possible.  Permit byte case.  Transform message
	to utf8.
	(execute_concat_op): Transform vectors into ucode vect if
	necessary.
	(char_pack_vect_cmp_op): Rename to ucode_pack_vect_cmp_op.  Use
	ucode_t.  Use ER_ch instead of wrong ER_i.
	(byte_pack_vect_cmp_op): New.
	(process_unary_vect_op): Call try_full_pack
	instead of pack_vector_if_possible.
	(process_binary_vect_op): Ditto.  Transform vectors into ucode
	vect if necessary for eq/ne/id/unid.
	(evaluate_code): Process ldus.
	* DINO/d_extern.sprut (char_t): Rename to ucode_t.
	(pack_vector_if_possible): Remove.
	(create_ucodestr, bytevect_to_ucodevect, try_full_pack): New.
	(byte): New node.
	* DINO/d_func.c (to_lower_upper): Use ER_NM_byte instead of
	ER_NM_char.
	(translit_call): Ditto.  Call try_full_pack instead of
	pack_vector_if_possible.
	(eltype_call, keys_call): Call try_full_pack instead of
	pack_vector_if_possible.
	(struct regex_node): Remove regex.  Add fields ucode_p,
	latin1_latin1_regex, latin1_ucode_regex, ucode_ucode_regex.
	(regex_node_hash): Process byte and ucode string cases.
	(regex_node_eq): Ditto.
	(get_str_size): New.
	(find_regex): Add parameters pat_ucode_p, str_ucode_p.  Use
	onig_new_deluxe instead of onig_new.
	(finish_regex_tab): Free latin1_latin1_regex, latin1_ucode_regex,
	ucode_ucode_regex.
	(match_call): Permit byte vectors.  Transform matched string to
	ucode vector if necessary.  Use get_str_size.  Scale element by
	ch_size.
	(gmatch_call): Ditto.
	(generall_sub_call): Permit byte vectors.  Transform matched
	string and substitution to ucode vector if necessary.  Use
	get_str_size.  Scale len to elements number.  Rewrite to use
	matching once.
	(split_call): Permit byte vectors. Transform matched string to
	ucode vector if necessary.  Use get_str_size.  Scale len to
	elements number.  Rewrite to use matching once.
	(compare_elements): Process bytes.
	(subv_call): Add processing byte case.
	(cmpv_call, del_call): Ditto.
	(general_ins_call): Transform vectors to ucode vector if
	necessary.
	(array_sort_compare_function): Add special case for char.
	(sort_call): Permit byte vectors.  Call try_full_pack
	unconditionally instead of pack_vector_if_possible.
	(two_strings_fun_start): Permit byte vectors.
	(general_str_to_utf8, strvect_to_utf8): New.
	(rename_call, remove_call, mkdir_call, rmdir_call): Use
	strvcet_to_utf8.
	(chdir_call, general_chmod, chumod_call, chgmod_call): Ditto.
	(chomod_call, open_call, popen_call): Ditto.
	(get_stat, seek_call): Ditto.  Permit byte vector.
	(string_fun_start): Permit byte vector.
	(print_ch): Use get_ucode_ascii_repr.
	(print_val): Permit byte vector.  Use strvcet_to_utf8 and
	ucode_char_to_utf8_vlo.
	(finish_output): Remove pars_number.  Add parameter byte_p.  Use
	general_str_to_utf8 for file case.  Generate byte or ucode vector
	otherwise.
	(general_put_call): Permit byte vector.  Transform vector to ucode
	vector if necessary.  Generate output byte or ucode vector.
	(general_print_call): Remove quote_flag.
	(print_call, println_call, fprint_call, fprintln_call): Remove
	flag in general_print_call.
	(sprint_call, sprintln_call): Ditto.
	(general_get_call): Use get_ucode_from_utf8_stream.
	(F_CHAR, F_INT, F_FLOAT, F_LONG, F_STRING, F_TAB): Use UCODE_MAX
	as base.
	(struct token): Define ch as ucode_t.
	(get_char_code):
	(invinput_error): Use get_ucode_from_utf8_stream.
	(n_getc): Use get_ucode_from_utf8_stream.
	(get_token): Ditto.  Process wrong_escape_code from get_char_code.
	(general_scan_call): Use get_ucode_from_utf8_stream.
	(general_putf_call): Permit byte format vector.  Pass format
	vector.
	(readdir_call, system_call): Permit byte vector.  Use
	strvect_to_utf8.
	(strtime_call): Use ER_NM_byte instead of ER_NM_char.
	(fold_function, filter_function, map_function): Add case for byte.
	(fold_call, process_filter_vect_op, filter_call): Call
	try_full_pack unconditionally instead of pack_vector_if_possible.
	(process_map_vect_op, map_call, transpose_call): Ditto.
	(call_external_fun, int_earley_parse): Ditto.
	(int_earley_parse_grammar): Ditto.  Permit byte format vector.
	Use strvect_to_utf8.
	* DINO/d_gen.c (execute_typeof_op): Add assert for byte value.
	(execute_charof_op): Use UCODE_MAX instead of MAX_CHAR.
	(execute_vectorof_op): Permit byte elements beside char ones.
	Transfer vector to to_vect_string_conversion.
	(ldus): New.
	* DINO/d_heap.c (initiate_int_tables): Process ER_NM_byte.
	(val_displ): Add assert on ER_NM_byte.
	(tailored_heap_object_size, create_unpack_vector): Use
	OPTIMAL_ELS_NUM and element size for size calculation.
	(traverse_used_heap_object, change_val, change_obj_refs): Process
	ER_NM_byte.
	(expand_vector): Process ER_NM_byte for trailing zero.  Use
	OPTIMAL_ELS_NUM.
	(unpack_vector): Use OPTIMAL_ELS_NUM.  Add code for byte case.
	(pack_vector_if_possible): Make it static.  Treat els as ucode
	string.
	(eq_vector): Call try_full_pack.  Remove duplicated fast track
	code.
	(create_empty_string): Use ER_NM_byte instead of ER_NM_char.
	(create_ucodestr, bytevect_to_ucodevect): New.
	(ucodevect_to_bytevect_if_possible, try_full_pack): New.
	(hash_key): Call try_full_pack unconditionally instead of
	pack_vector_if_possible.
	(vector_to_table_conversion): Process byte element separately.
	* DINO/d_ir.sprut (string_t, ustring_t): Remove.
	(create_unique_node_with_string): Add param len.  Rewrite.
	(temp_unique_ucodestr): New.
	(char_t): Rename to ucode_t.
	(size_t): New field type.
	(unique_ustring, ustring): Remove nodes.
	(unique_ucodestr, ucodestr): New nodes.
	(hash_func): Process unique_ucodestr.  Use mask 0x7 for the shift.
	(create_unique_ident_node): Pass len to
	create_unique_node_with_string.
	(initiate_icode): Create temp_unique_ucodestr.
	* DINO/d_minimize.d (get_decl): Use \A instead of ^.
	(factor): New.  Use it everywhere.
	* DINO/d_run.sprut (OPTIMAL_ELS_SIZE): Rename to OPTIMAL_ELS_NUM.
	Change its meaning in the comment.
	(mode_to_type): Process ER_NM_byte.
	* DINO/d_socket.c (_sread, _recvfrom): Use ER_NM_byte instead of
	ER_NM_char.
	* DINO/d_types.h (char_t, MAX_CHAR): Remove.
	(string_t, byte_t, ucode_t, UCODE_MAX, UCODE_BOUND, ucodestr_t):
	New.
	(in_byte_range_p, in_ucode_range, ucodestrlen): New.
	(get_ucode_from_utf8_stream): New
	(put_ucode_to_utf8_stream, read_byte, print_byte): New.
	(print_ucode_string_as_utf8): New.
	* DINO/d_yacc.h (get_read_line): Use ucode_t instead of char in
	the return type.
	* DINO/d_yacc.y (read_line, get_read_line): Return unicode.
	(previous_char): Change the comment.
	(empty_ucode_string): New.
	(push_curr_istream): Use it.
	(d_getc): Use get_ucode instead of getc.  Simplify code with
	previous_char.
	(d_ungetc): Simplify code with previous_char.
	(temp_scanner_vlo): New.
	(yylex): Process wrong escape code.  Generate ucode string if
	necessary.
	(initiate_scanner): Create temp_scanner_vlo.
	(finish_scanner): Delete temp_scanner_vlo and symbol_text.
	* DINO/dino.tst.in (72): Change expected matching . and eol.
	(475): Change 300 onto 0xffffff.
	(594): Expect \x escape sequences.

2015-06-14  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.in (OPTIONS): Use ONIGURUMA instead of REGEX.
	(dino_lib): Use ONIGURUMA/*.o instead of REGEX/regex.o.
	* DINO/d_dino.c (big_endian_p, set_big_endian_flag): New.
	(dino_main): Call set_big_endian_flag.
	* DINO/d_dino.h (big_endian_p): New.
	* DINO/d_func.c (regex.h): Remove the include.
	(oniguruma.h): Add the include.
	(process_regcomp_errors): Rename to process_onig_errors.  Comment
	processing the old codes.
	(RE_DINO_SYNTAX): Use ONIG_SYNTAX_RUBY.
	(struct regex_node): Make regex a pointer.
	(region): New.
	(find_regex): Rewrite using oniguruma.
	(initiate_regex_tab, finish_regex_tab): Initiate and finilize
	region and oniguruma.
	(match_call, gmatch_call, generall_sub_call, split_call): Rewrite
	using oniguruma.
	* configure.in: Remove ONIGURUMA from comments.  Remove
	REGEX/Makefile, REGEX/doc/Makefile, and  REGEX/test/Makefile from
	output_files.
	* configure: Update.

2015-06-11  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* configure.in: Add AC_CONFIG_SUBDIRS(ONIGURUMA).
	* configure: Update.
	* ONIGURUMA/configure.in: Change -O2 option.
	* ONIGURUMA/configure: Update.
	* ONIGURUMA/PREPARATION-FOR-DINO: New file.
	* DINO/Makefile.in (RX): Change to ONIGURUMA.

2015-06-11  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* ONIGURUMA: New directory.  Release 5.9.6.

2015-06-11  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_ir.sprut (ustring_t, unique_ustring, ustring): New.

2015-12-02  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Rename switcto pmatch.  Ad slide about rmatch.
	* DINO/dino.sgml.in: Rename switch to pmatch.  Describe rmatch.
	* DINO/dino.{dvi, html, html-[34679], html-10, ps, pdf, txt{: Update.
	* DINO/dino.tst.in: Rename switch to pmatch.
	(822-825): New tests for rmatch and pmatch.
	* DINO/d_yacc.y: Describe pmatch and rmatch instead of switch.
	Generate paren node.
	* DINO/d_kw.shilka (switch): Rename to pmatch.
	(rmatch): New.
	* DINO/d_ir.sprut (RMATCH_RESULT_NAME): New.
	(switch_stmt): Rename to match_stmt.  Make it abstract.  Rename
	fileds.  Ad field match_expr_var.
	(paren, pmatch_stmt, rmatch_stmt): New.
	(block): Rname switch_stmt to match_stmt.  Add field
	rmatch_result_var.
	* DINO/d_context.c (for_or_switch_finish): Rename to
	for_or_match_finish.
	(switch_holder_end): Rename to match_holder_end.
	(enum pattern_type): New.
	(first_expr_processing): Make second parameter of type
	pattern_type and pass the new values.  Process paren.
	(check_matching): Rename to check_decl_matching.
	(first_block_passing): Process pmatch_stmt and rmatch_stmt instead
	of switch_stmt.  Add code for processing cases of rmatch.
	(second_expr_processing): Process paren.
	(generate_pattern): Rename to generate_case.  Add cas_block
	parameter.  Process top-level ident as pattern variable.  Add code
	for rmatch case.
	(second_block_passing): Process pmatch_stmt and rmatch_stmt instead
	of switch_stmt.
	* DINO/d_bc.sprut (rmatch, rmatchs): New.
	(print_node): Don't output fail_pc for rmatch and rmatchs.
	* DINO/d_bcn.shilka (rmatch, rmatchs): New.
	* DINO/d_bcf.shilka (rm_str): New.
	* DINO/d_bcio.c (dump_code): Output rmatch and rmatchs.
	(read_bc_program): Read field rm_str.
	* DINO/d_inference.c (get_insn_op_place): Process rmatch, rmatchs.
	(type_transf, specialize_insn): Ditto.
	* DINO/d_gen.c (rmatch_common, rmatch, rmatchs): New.
	* DINO/d_func.h (internal_match_call): New.
	* DINO/d_func.c (match_call): Split creating internal_match_call.
	* DINO/d_eval.c (evaluate_code): Process rmatch and rmatchs.
	* DINO/d_errors.[ch]: Rename switch to match.
	(DERR_rmatch_expr_type): New.
	(DERR_rmatch_case_expr_type): New.

2015-11-28  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_bc.sprut (fold_concat): New.
	* DINO/d_bcio.c (dump_code): Process fold_concat.
	* DINO/d_context.c (first_expr_processing, process_unary_op):
	Ditto.
	(second_expr_processing): Ditto.
	* DINO/d_errors.[ch]
	(ERR_invalid_fold_concat_operation_operand_type): New.
	* DINO/d_eval.c (execute_concat_op): Add append_p parameter.
	(process_binary_vect_op): Pass the new arg to execute_concat_op.
	(process_fold_vect_op, fold_vect_op): Implement fold_concat.
	(evaluate_code): Add case for fold_concat.
	* DINO/d_gen.c (execute_concat_op): Add the parameter.
	(concat, concat_st): Pass the new arg.
	* DINO/d_inference.c (get_insn_op_place, type_transf): Process
	fold_concat.
	(specialize_insn): Ditto.
	* DINO/d_ir.sprut (fold_concat): New.
	* DINO/d_yacc.y (expr): Add rule for fold_concat.
	(yylex): Recognize and return FOLD_CONCAT.
	* DINO/dino.tst.in (820-821)> Tests for fold_concat.
	* README.md: add slides about exception handling.

2015-11-27  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_gen.c (execute_a_period_operation): Make it static.
	* DINO/d_yacc.y (finish_catch_block): Get first exception.
	* DINO/dino.tst.in (484): Use fp precision.
	(497): Process "does not have an IP address".
	(816 - 818): New tests.

2015-11-27  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_ir.sprut (EXCEPT_NAME): New.
	* DINO/d_yacc.y (create_except_class, create_catch_block): New.
	(finish_catch_block, create_try_expr): Ditto.
	(except_class_list_opt, set_flag2, end_exec_stmt):
	New non-terminals.
	(expr): Add rules for try-function.
	(executive_stmt): Use end_exec_stmt.
	(catch): Call create_catch_block and finish_catch_block.
	(except_class_list): Call create_except_class.

2015-10-19  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/compare.tst (heapsort): Create intial floating point array.

2015-10-10  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* MSTA/main.c (msta_finish): Rename all_hash_table_collisions to
	get_all_collisions.
	* MSTA/tab.c (finish_string_table): Rename to
	hash_table_collisions to get_collisions.
	(finish_single_definition_table): Ditto.
	(finish_literal_definition_table, finish_token_code_value_table):
	Ditto.
	* MSTA/lr.c (finish_dependence_nodes_table): Ditto.
	* MSTA/lr-sets.c (finish_LR_core_table, finish_LR_set_table):
	Ditto.
	* MSTA/gen-comm.c (finish_traverse_cache, finish_goto_set_cache):
	Ditto.
	* MSTA/contexts.c (finish_token_strings, finish_contexts): Ditto.
	* MSTA/anal.c (finish_pattern_table): Ditto.

2015-10-09  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_eval.c (evaluate_code): Add node thread dispatch.

2015-10-08  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Add reference to the article.

2015-10-07  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Write about planned release.

2015-10-06  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* configure.in (YAEPLIB, YAEPDIR): New substitutions.
	* configure: Update.

2015-10-06  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/Makefile.in (additional_rcs_files): Add
	yaep_part.sgml.in and yaep_part++.sgml.in.
	(ammunition.sgml, ammunition++.sgml): Include yaep part.
	* AMMUNITION/ammunition[++].sgml.in: Extract YAEP part.
	* AMMUNITION/ammunition[++].{dvi, pdf, ps}: Update.
	* MSTA/compare.tst.in: Move to AMMUNITION.
	* MSTA/Makefile.in (additional_files): Remove compare.tst.in.
	Call AMMUNITION/compare_parsers.tst.
	* configure.in: Rename MSTA/compare.tst to
	AMMUNITION/compare_parsers.tst.
	* configure: Update.

2015-09-30  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* configure.in: Change earley to yeap.
	* configure: Update.
	* AMMUNITION/earley{.h, .c, .ccp, .tst.in, ++.tst.in}: Rename to
	yaep{.h, .c, .ccp, .tst.in, ++.tst.in}.  Change earley to yeap.
	* AMMUNITION/sgramm.y: Change earley to yeap.
	* AMMUNITION/Makefile.in: Change earley to yeap.
	* AMMUNITION/ammunition.sgml.in: Ditto.
	* AMMUNITION/ammunition++.sgml.in: Ditto.
	* AMMUNITION/ammunition.{html, dvi, info, pdf, ps, txt}: Update.
	* AMMUNITION/ammunition-{1, 15}.html: Update.
	* AMMUNITION/ammunition++.{html, dvi, info, pdf, ps, txt}: Update.
	* AMMUNITION/ammunition++-{1, 15}.html: Update.
	* cocom.{dvi, pdf, ps}: Update.
	* MSTA/compare.tst.in: Rename earley to yaep.
	* MSTA/msta.{dvi, pdf, ps}: Update.
	* MSTA/Makefile.in: Update dependencies.
	* NONA/nona.{dvi, pdf, ps}: Update.
	* NONA/Makefile.in: Update dependencies.
	* OKA/oka.{dvi, pdf, ps}: Update.
	* OKA/Makefile.in: Update dependencies.
	* SHILKA/shilka.{dvi, pdf, ps}: Update.
	* SHILKA/Makefile.in: Update dependencies.
	* SPRUT/sprut.{dvi, pdf, ps}: Update.
	* SPRUT/Makefile.in: Update dependencies.
	* DINO/d_func.c: Change earley to yeap.
	* DINO/dino.{dvi, pdf, ps}: Update.
	* DINO/Makefile.in: Change earley to yeap.  Update dependencies.
	* DINO/dino.tst.in (428, 429, 431, 432, 435, 436): Change expected
	output of Earley parser for ambiguous grammars.

2015-09-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/earley{++}.tst.in (2, 2a, 3, 3a, 3b, 4, 5): Change
	expected output.
	(30-32, 34, 39, 42, 43, 46): Ditto.

2015-09-23  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/earley.c (TRANSITIVE_TRANSITION): Add commented
	definition.
	(expand_int_vlo): Add code for C++.
	(struct sit): Move empty_tail_p.  Add sit_check.
	(sit_create): Initiate sit_check.
	(empty_sit_dist_set): Add C++ variant of expand_int_vlo call.
	(curr_sit_check, core_symbol_check_vlo, core_symbols_vlo): New.
	(core_symbol_queue_vlo): New.
	(set_init, set_fin): Initiate/ finalize them.
	(set_insert): Remove code for removing duplicates.
	(struct core_symb_vect): Add transitive_transitions.
	(n_transitive_transition_vects, n_transitive_transition_vect_len):
	New.
	(transitive_transition_els_tab, vect_els_hash, vect_els_eq): New.
	({transition, reduce}_els_hash): Use vect_els_hash.
	({transition, reduce}_els_eq): Use vect_els_eq.
	(transitive_transition_els_hash, transitive_transition_els_eq):
	New.
	(core_symb_vect_init): Create transitive_transition_els_tab.
	Initiate n_transitive_transition_vects and
	n_transitive_transition_vect_len.
	(core_symb_vect_new): Initiate transitive_transitions.
	(vect_new_add_el): New.
	(core_symb_vect_new_add_transition_el): Use vect_new_add_el.
	(core_symb_vect_new_add_reduce_el): Ditto.
	(core_symb_vect_new_add_transitive_transition_el): New.
	(process_core_symb_vect_el): New.
	(core_symb_vect_new_all_stop): Use it.  Add code for
	transitive_trsansitions too.
	(core_symb_vect_fin): Delete transitive_transition_els_tab.
	(collect_core_symbols, form_transitive_transition_vectors): New.
	(expand_new_start_set): Call form_transitive_transition_vectors.
	(build_new_set): Add code to use transitive transitions.  Don't
	create duplications.
	(earley_parse): Print info about transitive transition vectors.

2015-09-22  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/earley.c (expand_int_vlo, sits_hash): New.
	(struct sit_dist): New.
	(first_free_sit_dist_index, sit_dist_vlo, sit_dist_vec_vlo): New.
	(sit_dist_vec_check_vlo, curr_sit_dist_vec_check): New.
	(sit_dist_set_init, empty_sit_dist_set, sit_dist_insert): New.
	(sit_dist_set_fin): New.
	(set_init): Call sit_dist_set_init.
	(setup_set_core_hash): Use sits_hash.
	(set_insert): Rewrite duplication removal.
	(set_fin): Call sit_dist_set_fin.

2015-09-14  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/earley.c (jauquet_prime_mod32, hash_shift): New.
	(symb_repr_hash, term_set_hash, set_core_dists_hash): Use them.
	(set_term_lookahead_hash, setup_set_core_hash): Ditto.
	(core_symb_vect_hash, transition_els_hash, reduce_els_hash): Ditto.
	(parse_state_hash): Ditto.
	(MAX_CACHED_GOTO_RESULTS): Make it 3.
	(set_init): Add arg.  Use it to calculate hash tables.
	(earley_parse_init): Add arg.  Pass it to set_init.  Move tok_init
	to earley_parse.
	(earley_parse_fin): Move tok_fin to earley_parse.
	(n_goto_successes): New.
	(build_pl): Update it.
	(earley_parse): Print it.
	* AMMUNITION/earley.tst.in (2-5): Change expected output.
	* AMMUNITION/earley++.tst.in (2-5): Change expected output.

2015-09-11  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/hashtab.c (hash_table_collisions)
	(all_hash_table_collisions): Remove.
	* AMMUNITION/hashtab.cpp (_collisions, _all_collisions): Rename to
	collisions and all_collisions.
	* AMMUNITION/hashtab.h (get_searches, get_all_searches): New.
	(get_all_collisions, get_all_collisions): Ditto.
	(class hash_table): Rename _collisions and _all_collisions to
	collisions and all_collisions.  Add get_searches,
	get_all_searches, get_all_collisions, and get_all_collisions.
	Remove collisions and all_collisions.
	* AMMUNITION/hashtab.tst.in: Use get_collisions and
	get_all_collisions.
	* AMMUNITION/hashtab++.tst.in: Ditto.
	* AMMUNITION/ammunition.sgml.in (hash_table_collisions): Remove.
	(all_hash_table_collisions): Ditto.
	(get_searches, get_all_searches): New.
	(get_all_collisions, get_all_collisions): Ditto.
	* AMMUNITION/ammunition++.sgml.in (collisions): Remove.
	(all_collisions): Ditto.
	(get_searches, get_all_searches): New.
	(get_all_collisions, get_all_collisions): Ditto.
	* AMMUNITION/ammunition++.sgml.in
	* AMMUNITION/{ammunition++-5.html, ammunition++.dvi}: Update.
	* AMMUNITION/ammunition++.{info, pdf, ps, txt}: Update.
	* AMMUNITION/earley.c (SYMB_CODE_TRANS_VECT,  USE_SET_HASH_TABLE):
	New defines.
	(struct set_core): Add member hash.
	(struct set): Add member dists_hash.
	(MAX_CACHED_GOTO_RESULTS): New.
	(struct set_term_lookahead): New.
	(n_sets, n_sets_start_sits, n_set_term_lookaheads): New.
	(set_term_lookahead_os, set_tab, set_term_lookahead_tab): New.
	(set_core_hash, dists_hash): Use saved hash.
	(set_core_dists_hash, set_core_dists_eq, set_term_lookahead_hash):
	New.
	(set_term_lookahead_eq): New.
	(set_init): Initiate new variable.
	(setup_set_dists_hash, setup_set_core_hash): Ditto.
	(set_insert): Add code for absolute distances.  Initiate set_os.
	Set up set dists hash and set core hash.  Insert set into table.
	(set_print): Add set_dist arg.  Use arg for printing absolute
	distances.
	(set_fin): Finalize new variables.
	(build_new_set): Add code for absolute distances.
	(check_cached_transition_set): New.
	(build_pl): Use it.  Add code for hash tables.
	(make_parse): Add code for absolute distances.
	(earley_parse): Add printing collisions, unique sets, and triples
	[set, term, lookahead].
	* AMMUNITION/earley.tst.in: Change expected output and ignore
	statistics output for some cases.
	* AMMUNITION/earley++.tst.in: Ditto.
	* MSTA/compare.tst.in: Add Earley runs w/o lookahead and with
	dynamic lookahead.
	* DINO/dino.tst.in (437, 438): Exclude Earley parser statistics.

2015-09-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* MSTA/compare.tst.in: Add code to check MARPA Earley's parser
	speed.

2015-08-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_context.c (first_block_passing): Process space.

2015-08-04  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_gen.c (execute_a_period_operation): Make static.
	* DINO/d_ir.sprut (space): New.
	* DINO/d_yacc.y (process_space_header, process_space_block): New.
	(fields): Make designator always non-null.
	(qual_ident): Add code fields case.
	(process_common_header): New.
	(process_header): Use it.
	* DINO/dino.tst.in (484): Change expected regexp.
	(487): Add error "does not have an IP address".

2015-08-04  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/Makefile.in (d_yacc.c): Expect 10 conflicts.
	* DINO/d_yacc.y: Add terminals EXPOSE and SPACE and nonterminals
	fields, qual_ident_list, and qual_ident.  Add rules for the
	corresponding terminals.

2015-08-04  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/compare.tst: Take x$LUAJIT in quotes.

2015-07-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* AMMUNITION/cspset.h (cspset_clear): Remove inline.
	* DINO/d_heap.c (new_heap_chunk): Add missed type size_t fro
	max_default_chunk_size.
	* DINO/d_dino.c: Include d_bcio.h.
	(print_indent): Move from d_bcio.c.
	* DINO/d_bcio.c (print_indent): See above.
	* DINO/d_context.c (create_pattern_vars): Return last for null
	expr.
	* DINO/d_common.h (print_indent): Move from d_bcio.h.
	* DINO/d_bcio.h (print_indent): See above.
	* DINO/compare.tst: Add runs for rubinius and jruby.

2015-07-04  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: 2 byte code representations.

2015-06-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Make example with dino_debug look better.

2015-06-24  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* configure.in: Add dino_debug.  Test -g3 and use it for debug
	mode if it is supported.
	* configure: Update.
	* README.md: Mention dino_debug.

2015-06-14  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Remove function param pattern matching.

2015-06-14  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Comment not implemented yet function param pattern
	matching.  Add returns in switch example.

2015-06-12  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Rearrange the added info again.

2015-06-12  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Rearrange the added info.

2015-06-12  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: More info about DINO tests and benchmarks.

2015-06-10  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_context.c (second_block_passing): Add rpr only for high
	level block.
	* DINO/d_dino.c (dino_main): Change email-address.
	* DINO/dino.tst.in (648): Change expected REPL output.
	(816): New test.

2015-06-09  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/dino.tst.in: Add new stress test for fold/map/filter.

2015-06-08  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/dino.tst.in: Add new tests for fold/map/filter.
	* DINO/d_func.c (process_fold_vect_op): Free stack space for
	fold_function.
	(process_filter_vect_op): Free stack space for
	filter_function.
	(process_map_vect_op): Free stack space for map_function.

2015-06-08  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_errors.c (DERR_parameters_number): Change message.
	* DINO/d_eval.c (call_fun_class): Check params number.
	* DINO/d_yacc.y (get_new_ident): Change anonymous function name.
	* DINO/dino.tst.in: Change expected message.  Add new test.

2015-06-05  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO/d_mpi.c: Restore.
	* DINO/d_mpi.d: Ditto.
	* DINO/Makefile.in: Restore mpi_lib. Change DINO_EXTERN_LIB,
	source.  Restore dependence for mpi_lib.  Restore mpi.d and
	d_mpi.c
	* DINO/dino.1: Restore info about mpi.
	* DINO/dino-11.html: Update.
	* DINO/dino.{dvi, info, ps, pdf, txt}: Update.

2015-06-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* COCOM-CHANGES: Add changes since last release.
	* DINO-CHANGES: Ditto.

2015-06-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* DINO-INSTALL: Change address.

2015-06-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* cocom.sgml.in: New email address.
	* AMMUNITION/ammunition.sgml.in: Ditto.
	* AMMUNITION/ammunition++.sgml.in: Ditto.
	* DINO/dino.{1, sgml.in}: Ditto.
	* MSTA/msta.{1, sgml.in}: Ditto.
	* NONA/nona.{1, sgml.in}: Ditto.
	* OKA/oka.{1, sgml.in}: Ditto.
	* SHILKA/shilka.{1, sgml.in}: Ditto.
	* SPRUT/sprut.{1, sgml.in}: Ditto.
	* cocom.{dvi, html, info, pdf, ps, txt}: Update.
	* AMMUNITION/ammunition++.{dvi, html*, info, pdf, ps, txt}: Update.
	* AMMUNITION/ammunition.{info, txt}: Update.
	* DINO/dino.{dvi, html*, info, pdf, ps, txt}: Update.
	* MSTA/msta.{dvi, html*, info, pdf, ps, txt}: Update.
	* NONA/nona.{dvi, html*, info, pdf, ps, txt}: Update.
	* OKA/oka.{dvi, html*, info, pdf, ps, txt}: Update.
	* SHILKA/shilka.{dvi, html*, info, pdf, ps, txt}: Update.
	* SPRUT/sprut.{dvi, html*, info, pdf, ps, txt}: Update.
	* DINO/dino.info-{1, 2, 3, 4}: Remove.
	* MSTA/msta.info-{1, 2}: Remove.
	* SPRUT/sprut.info-{1, 2}: Remove.
	* dino.desc: Chnage address and bump version.
	* dino-copyright: Change home.
	* cocom-copyright: Change home.
	* Makefile.in: Change years, info generation,
	only_cocom_additional_rcs_files.
	* {AMMUNITION, MSTA, OKA, NONA, SHILKA, SPRUT}/Makefile.in:
	Change years and address, info generation.
	* DINO/Makefile.in: Ditto.  Remove mpi_lib. Change
	DINO_EXTERN_LIB, source.  Remove dependence for mpi_lib.  Remove
	mpi.d and d_mpi.c
	* DINO/mpi.d: Remove.
	* DINO/d_mpi.c: Ditto.
	* AMMUNITION/IEEE++.tst.in: Change address and years.
	* AMMUNITION/IEEE.c: Ditto.
	* AMMUNITION/IEEE.cpp: Ditto.
	* AMMUNITION/IEEE.h: Ditto.
	* AMMUNITION/IEEE.tst.in: Ditto.
	* AMMUNITION/allocate++.tst.in: Ditto.
	* AMMUNITION/allocate.c: Ditto.
	* AMMUNITION/allocate.cpp: Ditto.
	* AMMUNITION/allocate.h: Ditto.
	* AMMUNITION/allocate.tst.in: Ditto.
	* AMMUNITION/arithm++.tst.in: Ditto.
	* AMMUNITION/arithm.c: Ditto.
	* AMMUNITION/arithm.cpp: Ditto.
	* AMMUNITION/arithm.h: Ditto.
	* AMMUNITION/arithm.tst.in: Ditto.
	* AMMUNITION/bits++.tst.in: Ditto.
	* AMMUNITION/bits.c: Ditto.
	* AMMUNITION/bits.cpp: Ditto.
	* AMMUNITION/bits.h: Ditto.
	* AMMUNITION/bits.tst.in: Ditto.
	* AMMUNITION/commline++.tst.in: Ditto.
	* AMMUNITION/commline.c: Ditto.
	* AMMUNITION/commline.cpp: Ditto.
	* AMMUNITION/commline.h: Ditto.
	* AMMUNITION/commline.tst.in: Ditto.
	* AMMUNITION/cspset++.tst.in: Ditto.
	* AMMUNITION/cspset.c: Ditto.
	* AMMUNITION/cspset.cpp: Ditto.
	* AMMUNITION/cspset.h: Ditto.
	* AMMUNITION/cspset.tst.in: Ditto.
	* AMMUNITION/earley++.tst.in: Ditto.
	* AMMUNITION/earley.c: Ditto.
	* AMMUNITION/earley.cpp: Ditto.
	* AMMUNITION/earley.h: Ditto.
	* AMMUNITION/earley.tst.in: Ditto.
	* AMMUNITION/errors++.tst.in: Ditto.
	* AMMUNITION/errors.c: Ditto.
	* AMMUNITION/errors.cpp: Ditto.
	* AMMUNITION/errors.h: Ditto.
	* AMMUNITION/errors.tst.in: Ditto.
	* AMMUNITION/hashtab++.tst.in: Ditto.
	* AMMUNITION/hashtab.c: Ditto.
	* AMMUNITION/hashtab.cpp: Ditto.
	* AMMUNITION/hashtab.h: Ditto.
	* AMMUNITION/hashtab.tst.in: Ditto.
	* AMMUNITION/objstack++.tst.in: Ditto.
	* AMMUNITION/objstack.c: Ditto.
	* AMMUNITION/objstack.cpp: Ditto.
	* AMMUNITION/objstack.h: Ditto.
	* AMMUNITION/objstack.tst.in: Ditto.
	* AMMUNITION/position++.tst.in: Ditto.
	* AMMUNITION/position.c: Ditto.
	* AMMUNITION/position.cpp: Ditto.
	* AMMUNITION/position.h: Ditto.
	* AMMUNITION/position.tst.in: Ditto.
	* AMMUNITION/sgramm.y: Ditto.
	* AMMUNITION/spset++.tst.in: Ditto.
	* AMMUNITION/spset.c: Ditto.
	* AMMUNITION/spset.cpp: Ditto.
	* AMMUNITION/spset.h: Ditto.
	* AMMUNITION/spset.tst.in: Ditto.
	* AMMUNITION/ticker++.tst.in: Ditto.
	* AMMUNITION/ticker.c: Ditto.
	* AMMUNITION/ticker.cpp: Ditto.
	* AMMUNITION/ticker.h: Ditto.
	* AMMUNITION/ticker.tst.in: Ditto.
	* AMMUNITION/vlobject++.tst.in: Ditto.
	* AMMUNITION/vlobject.c: Ditto.
	* AMMUNITION/vlobject.cpp: Ditto.
	* AMMUNITION/vlobject.h: Ditto.
	* AMMUNITION/vlobject.tst.in: Ditto.
	* DINO/compare.tst: Ditto.
	* DINO/d_bc.sprut: Ditto.
	* DINO/d_bcf.shilka: Ditto.
	* DINO/d_bcio.c: Ditto.
	* DINO/d_bcio.h: Ditto.
	* DINO/d_bcn.shilka: Ditto.
	* DINO/d_built.h: Ditto.
	* DINO/d_common.h: Ditto.
	* DINO/d_context.c: Ditto.
	* DINO/d_context.h: Ditto.
	* DINO/d_conv.c: Ditto.
	* DINO/d_conv.h: Ditto.
	* DINO/d_dino.c: Ditto.
	* DINO/d_dino.h: Ditto.
	* DINO/d_errors.c: Ditto.
	* DINO/d_errors.h: Ditto.
	* DINO/d_eval.c: Ditto.
	* DINO/d_eval.h: Ditto.
	* DINO/d_extern.sprut: Ditto.
	* DINO/d_func.c: Ditto.
	* DINO/d_func.h: Ditto.
	* DINO/d_heap.c: Ditto.
	* DINO/d_ieee.c: Ditto.
	* DINO/d_inference.c: Ditto.
	* DINO/d_inference.h: Ditto.
	* DINO/d_ipcerr.c: Ditto.
	* DINO/d_ir.sprut: Ditto.
	* DINO/d_kw.shilka: Ditto.
	* DINO/d_main.c: Ditto.
	* DINO/d_run.sprut: Ditto.
	* DINO/d_runtab.c: Ditto.
	* DINO/d_runtab.h: Ditto.
	* DINO/d_socket.c: Ditto.
	* DINO/d_types.h: Ditto.
	* DINO/d_yacc.h: Ditto.
	* DINO/d_yacc.y: Ditto.
	* DINO/dino.tst.in: Ditto.
	* DINO/ieee.d: Ditto.
	* DINO/ipcerr.d: Ditto.
	* DINO/socket.d: Ditto.
	* MSTA/anal.c: Ditto.
	* MSTA/anal.h: Ditto.
	* MSTA/common.c: Ditto.
	* MSTA/common.h: Ditto.
	* MSTA/compare.tst.in: Ditto.
	* MSTA/contexts.c: Ditto.
	* MSTA/contexts.h: Ditto.
	* MSTA/descript.c: Ditto.
	* MSTA/descript.h: Ditto.
	* MSTA/gen-comm.c: Ditto.
	* MSTA/gen-comm.h: Ditto.
	* MSTA/gen.c: Ditto.
	* MSTA/gen.h: Ditto.
	* MSTA/ird.sprut: Ditto.
	* MSTA/la-trie.c: Ditto.
	* MSTA/la-trie.h: Ditto.
	* MSTA/lr-sets.c: Ditto.
	* MSTA/lr-sets.h: Ditto.
	* MSTA/lr.c: Ditto.
	* MSTA/lr.h: Ditto.
	* MSTA/main.c: Ditto.
	* MSTA/oberon2-kw.shilka: Ditto.
	* MSTA/output.c: Ditto.
	* MSTA/output.h: Ditto.
	* MSTA/p-yacc.y: Ditto.
	* MSTA/parser.c: Ditto.
	* MSTA/parser.h: Ditto.
	* MSTA/quality.tst.in: Ditto.
	* MSTA/regular.c: Ditto.
	* MSTA/regular.h: Ditto.
	* MSTA/relation.c: Ditto.
	* MSTA/relation.h: Ditto.
	* MSTA/tab.c: Ditto.
	* MSTA/tab.h: Ditto.
	* MSTA/yacc.h: Ditto.
	* MSTA/yacc.y: Ditto.
	* NONA/a29k.nona: Ditto.
	* NONA/anal.c: Ditto.
	* NONA/anal.h: Ditto.
	* NONA/common.c: Ditto.
	* NONA/common.h: Ditto.
	* NONA/gen.c: Ditto.
	* NONA/gen.h: Ditto.
	* NONA/ird.sprut: Ditto.
	* NONA/main.c: Ditto.
	* NONA/tab.c: Ditto.
	* NONA/tab.h: Ditto.
	* NONA/yacc.h: Ditto.
	* NONA/yacc.y: Ditto.
	* OKA/alpha-ev4.oka: Ditto.
	* OKA/alpha-ev5.oka: Ditto.
	* OKA/anal.c: Ditto.
	* OKA/anal.h: Ditto.
	* OKA/common.c: Ditto.
	* OKA/common.h: Ditto.
	* OKA/gen.c: Ditto.
	* OKA/gen.h: Ditto.
	* OKA/ird.sprut: Ditto.
	* OKA/main.c: Ditto.
	* OKA/oka.tst: Ditto.
	* OKA/tab.c: Ditto.
	* OKA/tab.h: Ditto.
	* OKA/yacc.h: Ditto.
	* OKA/yacc.y: Ditto.
	* SHILKA/ada-standards.shilka: Ditto.
	* SHILKA/ada.shilka: Ditto.
	* SHILKA/anal.c: Ditto.
	* SHILKA/anal.h: Ditto.
	* SHILKA/b.shilka: Ditto.
	* SHILKA/c.shilka: Ditto.
	* SHILKA/common.c: Ditto.
	* SHILKA/common.h: Ditto.
	* SHILKA/cpp.shilka: Ditto.
	* SHILKA/d.shilka: Ditto.
	* SHILKA/gcc.shilka: Ditto.
	* SHILKA/gen.c: Ditto.
	* SHILKA/gen.h: Ditto.
	* SHILKA/gpc.shilka: Ditto.
	* SHILKA/ird.sprut: Ditto.
	* SHILKA/java.shilka: Ditto.
	* SHILKA/main.c: Ditto.
	* SHILKA/modula2.shilka: Ditto.
	* SHILKA/modula3.shilka: Ditto.
	* SHILKA/pascal.shilka: Ditto.
	* SHILKA/shilka.tst.in: Ditto.
	* SHILKA/tab.c: Ditto.
	* SHILKA/tab.h: Ditto.
	* SHILKA/yacc.h: Ditto.
	* SHILKA/yacc.y: Ditto.
	* SPRUT/A_base.sprut: Ditto.
	* SPRUT/A_syntax.sprut: Ditto.
	* SPRUT/A_test.sprut: Ditto.
	* SPRUT/A_value.sprut: Ditto.
	* SPRUT/anal.c: Ditto.
	* SPRUT/anal.h: Ditto.
	* SPRUT/common.c: Ditto.
	* SPRUT/common.h: Ditto.
	* SPRUT/gen.c: Ditto.
	* SPRUT/gen.h: Ditto.
	* SPRUT/ird.sprut: Ditto.
	* SPRUT/main.c: Ditto.
	* SPRUT/sprut-ird.c: Ditto.
	* SPRUT/sprut-ird.h: Ditto.
	* SPRUT/sprut.tst: Ditto.
	* SPRUT/std_bmem.sprut: Ditto.
	* SPRUT/std_mem.sprut: Ditto.
	* SPRUT/std_pos.sprut: Ditto.
	* SPRUT/std_str.sprut: Ditto.
	* SPRUT/std_type.sprut: Ditto.
	* SPRUT/tab.c: Ditto.
	* SPRUT/tab.h: Ditto.
	* SPRUT/yacc.h: Ditto.
	* SPRUT/yacc.y: Ditto.

2015-06-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* dino.desc, cocom.dsc, cocom.spec, dino.spec, INSTALL: Bump
	versions.
	* {cocom,dino}-copyright: Change email address.
	* README.md: Add license and describe build process.

2015-06-03  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* {AMMUNITION,MSTA,NONA,OKA,SHILKA,SPRUT}/Makefile.in (distdir):
	Bump to 0.997.
	* Makefile.in (distdir): Ditto.
	(distdinodir): Bump to 0.91.
	* DINO/Makefile.in (DINO_VERSION): Bump to 0.91.
	* COCOM-README, COCOM-CHANGES: Formatting.

2015-06-02  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: One more fix in profiling slide.

2015-06-02  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Fix list in profiling slide.

2015-06-02  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Fix slides for optimization and tuning.

2015-06-02  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Fix slides for switch-statement, Earley parser, and
	used tools.

2015-06-02  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Remove info about currying and dar.  Fix items after
	code.

2015-06-02  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* README.md: Change email and repository.

2015-06-02  Vladimir Makarov  <vmakarov@gcc.gnu.org>

	* CHANGES: Rename to COCOM-CHANGES.
	* README: Rename to COCOM-README.
	* README.md, Dino.jpg, Dino_Flow.png: New files.

2015-06-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.sgml.in: Remove mpi, use socket.
	* DINO/dino.{dvi,html*,info,pdf,ps,txt}: Update.

2015-06-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.sgml.in: Describe hints.  Use tt instead of bf for
	keywords.  Fix tscreen for expression-statement.
	* DINO/dino.{dvi,html*,info,pdf,ps,txt}: Update.

2015-06-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_dino.c (COMMAND_LINE_DESCRIPTION): Remove -g.
	* DINO/d_ir.sprut (assign): Change comment.
	* DINO/d_yacc.y (hint, program): Process REPL mode.
	(process_formal_parameters): Check init params to be last and no
	combining with '...'.
	DINO/d_gen.c (code_inside): Rename to code_use_p.
	(chstend): Change expected type of param op1.
	(chstel): Change expected type of param op2.  Add parameter op5n.
	* DINO/d_errors.{ch} (ERR_default_value_parameter_and_dots): New.
	(ERR_default_value_parameters_should_be_last): Ditto.
	(DERR_slice_start_is_negative): Ditto.
	(char DERR_slice_step_is_zero): Ditto.
	* DINO/d_bc.sprut (chstel): Change format.
	(check4i24): Remove.
	(check5i45): New.
	(print_node): Process check5i45.
	* DINO/d_bcio.c (dump_code): New format for chstel.
	* DINO/d_context.c (create_pattern_vars): Add code for REPL.
	(generate_pattern): New format for chstel.  Init pat_op
	undefined.  Switch on combining.
	* DINO/d_inference.c (get_insn_op_place, type_transf): Change code
	for chstel.
	* DINO/d_gen.c (code_inside): Rename to code_use_p.
	* DINO/d_func.h (code_inside): Ditto.
	* DINO/d_func.c (code_inside): Ditto.
	* DINO/d_eval.c (check_and_get_slice_info): Check slice start and
	step values.  Make niter0 non-negative.
	(evaluate_code): Pass new param to chstel.
	* DINO/dino.tst.in (791, 795): Change expected for sub-class
	match.
	(801-808): New.

2015-06-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.sgml.in: Remove history, extensions.  Describe hex
	numbers, long numbers, new keywords, new scope rules, new
	pre-declared identifiers, patterns, undef values, val, pub/priv
	for vars/pars/extern, process, qualifiers, params number checking,
	constraints on init params and ... usage, forward decls, use
	clause, singleton, 64 integer, long, new tab.  Remove thread
	value, block instance.  Decribe process, slices, conversion for
	long, operations of long and slices, this, anonymous
	function/classes, expression-statement.  Remove call-statement.
	Describe switch-statement.  Remove excpetion objects.  Describe
	transpose, filter, map, fold, isa.  Change Syntax.
	* DINO/dino.1: Describe REPL.  Rename -h to -m.  Add options -h,
	-O, --save-temp, -p, -i.  Remove mpi.d, mpi.so.
	* Makefile.in: Remove usage of sgml-{txt,html,tex,postinfo. Use
	ps2pdf instead of pdflatex.
	* {AMMUNITION,DINO,MSTA,NONA,OKA,SHILKA,SPRUT}/Makefile.in: Diito.
	Remove more escape sequences from .1 files.
	* cocom.sgml.in: Add more about Dino.
	* cocom.{dvi,html,info,pdf,ps,txt}: Update.
	* AMMUNITION/ammunition++.{dvi,html*,info,pdf,ps,txt}: Update.
	* AMMUNITION/ammunition.{info,txt}: Update.
	* DINO/dino.{dvi,html*,info,pdf,ps,txt}: Update.
	* MSTA/msta.{dvi,html*,info,pdf,ps,txt}: Update.
	* NONA/nona.{dvi,html*,info,pdf,ps,txt}: Update.
	* OKA/oka.{dvi,html*,info,pdf,ps,txt}: Update.
	* SHILKA/shilka.{dvi,html*,info,pdf,ps,txt}: Update.
	* SPRUT/sprut.{dvi,html*,info,pdf,ps,txt}: Update.

2015-05-13  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/Makefile.in (d_yacc.c): Change expected conflicts number.
	* DINO/d_ir.sprut (merge_stmt_lists, uncycle_stmt_list): Move from
	d_yacc.y.
	(fun_or_class): Move parameters_number,
	min_actual_parameters_number to semantic level.
	(ENVIRONEMNT): Add patternmatch.
	(assign_stmt): Make assignment_var of type expr.
	(wildcard, dots, pattern_var, pattern_assign_stmt): New nodes.
	(var_pattern_assign, par_pattern_assign, switch_stmt): Ditto.
	(block): Add fields switch_stmt, implicit_case_break_stmt,
	case_pattern, case_cond.
	(var): Remove par_assign_flag, add par_flag.
	* DINO/d_kw.shilka (C\case, switch, _): Add.
	* DINO/d_yacc.y (process_var_pattern): New.
	(CASE, SWITCH, WILDCARD): New tokens.
	(expr): Add rules with WILDCARD, DOTS.
	(elsit): Set repetition_key_flag.
	(val_var): Change syntax to pattern.
	(executive_stmt): Add switch-stmt.
	(case_list, switch_case, opt_cond, pattern): New non-terminals and
	rules.
	(merge_stmt_lists, uncycle_stmt_list): Move to d_ir.sprut.
	(process_var_decl): Remove unnecessary arg ident_pos.
	(process_formal_parameters): Set par_flag.  Don't set
	parameters_number and min_parameters_number yet.
	* DINO/d_context.c (continue_target): New.
	(for_finish): Rename to for_or_switch_finish.
	(foreach_stmts, initiate_foreach_stmts, get_foreach_stmts_bound):
	Rename to inter_stmt_holders, initiate_inter_stmt_holders,
	get_inter_stmt_holders_bound.
	(foreach_holder_end, swicth_holder_end): New.
	(finish_block_foreach_stmts): Rename to
	finish_block_inter_stmt_holders.  Add switch process.
	(finish_foreach_stmts): Rename to finish_inter_stmt_holders.
	(first_expr_processing): Add parameter pattern_p.  Add processing
	wildcards and dots.
	(process_redecl_after): Remove unnecessary parameters.
	(create_pattern_vars, put_var_list_before): New.
	(process_decl): Split code procesing blocks in
	first_block_passing.
	(first_block_passing): Process var_pattern_assign,
	par_pattern_assign, pattern_var, and switch_stmt.  Add code for
	processing case blocks.  Set up min_actual_parameters_number.  Use
	process_decl.
	(create_bc_decl): New.
	(create_bc_ident): Use create_bc_decl.
	declaration.
	(second_expr_processing): Process dots and wildcards.
	(curr_for_stmt_block): Rename to curr_for_stmt_or_case_block.
	(generate_pattern, generate_break_continue): New.
	(second_block_passing): Process pattern assignments and
	pattern_var.  Use generate_break_continue.  Process switch.  Add
	code for case blocks.
	(modify_copied_ops): Process check nodes.
	(optimize_bc): Process fail_pc.
	(mark_reachable_info): Process fail_pc.
	* DINO/d_bc.sprut (PATTERNMATCH_NAME, patternmatch_bc_decl): New.
	(chvec, chvend, chvlen, chtab, chtend, chtel, chst, chstend): New.
	(chstel, check, check2,check2i, check3, check3i2, check4): Ditto.
	(check4i, check5, check5i): Ditto.
	(bc_decls_table): Add entry for patternmatch_bc_decl.
	(print_node): Process fail_pc of check nodes.  Process operands of
	check nodes.
	(traverse_bcode): Process fail_pc of check nodes.
	* DINO/d_bcio.c (dump_code): Print chvec, chvlen, chvel, chvend,
	chtab, chtel, chtend, chst, chstel, chstend.
	(read_bc_program): Read new fields fail_pc, ch_op2, ch_op3,
	ch_op4, ch_op5.
	* DINO/d_bcf.shilka (fail_pc, ch_op2, ch_op3, ch_op4, ch_op5):
	New.
	* DINO/d_bcn.shilka (chvec, chvlen, chvel, chvend, chtab): New.
	(chtel, chtend, chst, chstel, chstend): Ditto.
	* DINO/d_errors.[ch] (ERR_wildcard_in_expression): New.
	(ERR_dots_in_expression, ERR_dots_in_the_list_middle): Ditto.
	(ERR_dots_with_repetition_key, ERR_table_dots_as_key_with_value): Ditto.
	(ERR_assignment_pattern_without_variables): Ditto.
	(DERR_wrong_vector_pattern_match, DERR_wrong_table_pattern_match): Ditto.
	(DERR_wrong_stack_pattern_match): Ditto.
	(ERR_continue_is_not_in_loop, ERR_break_is_not_in_loop): Rename to
	ERR_continue_is_not_in_loop_or_case,ERR_break_is_not_in_loop_or_case.
	* DINO/d_inference.c (get_insn_op_place, type_transf): Add cases
	for chvec, chvlen, chvel, chvend, chtab, chtel, chtend, chst,
	chstel, chstend.
	(specialize_insn): Ditto.
	(get_insn_defs_num): Don't cache chvel, chtel, chstel.
	* DINO/d_gen.c (chvec, chvlen, chvel, chvend, chtab): New
	functions.
	(chtel, chtend, chst, chstel, chstend): Ditto.
	* DINO/d_func.h (code_inside): New.
	* DINO/d_func.c (code_inside): Split from internal_isa_call.
	* DINO/d_eval.c (common_eq_ne_op): Split from
	execute_common_eq_ne_op.
	(evaluate_code): Add cases for chvec, chvlen, chvel, chvend,
	chtab, chtel, chtend, chst, chstel, chstend.
	* DINO/dino.tst.in: Add new tests 761-800 for pattern matching.

2015-04-27  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Add runs for LUAJIT.
	(SKIP_LUAJIT, DO_LUAJIT): New.

2015-01-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_context.c (first_block_passing): Don't inline blocks
	containing try-blocks.
	* DINO/d_heap.c (compact_heap): Add a comment.

2014-12-12  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_dino.c (dino_finish): Use peak instead of max for
	statistcis.
	* DINO/d_eval.c: Rename find_tab_entry, INDEXED_ENTRY_VAL to
	find_tab_el, INDEXED_EL_VAL.
	(load_table_element_by_key, execute_in_op, tab): Check only
	ER_NM_empty_el and NULL value.
	(store_table_element): Add assert for find_tab_el result.
	(initiate_vars): Add assert about redir absence.
	* DINO/d_extern.sprut (entry_t, entry_ptr_t): New types.
	(val_t): Remove _ER_deleted_entry.
	(EMPTY_ENTRY, DELETED_ENTRY, MAX_TAB_ELS_NUMBER): New.
	(ER_tab_entries): New macro.
	(INDEXED_ENTRY_KEY, INDEXED_ENTRY_VAL): Rename to INDEXED_EL_KEY,
	INDEXED_EL_VAL.
	(_tab_entries): New.
	(_indexed_entry_key, _indexed_entry_val): Rename to _indexed_el_key,
	_indexed_el_val.
	(find_tab_entry): Rename to find_tab_el.
	(heap_tab): Rename last_key_index to last_accessed_el_index.  Add
	els_bound, els_space_bound.
	(deleted_entry): Remove.
	(empty_entry): Rename to empty_el.
	* DINO/d_heap.c: Rename find_tab_entry, INDEXED_ENTRY_KEY,
	INDEXED_ENTRY_VAL to find_tab_el, INDEXED_EL_KEY, INDEXED_EL_VAL.
	(_tab_entries): New.
	(_indexed_entry_key, _indexed_entry_val): Rename to _indexed_el_key,
	_indexed_el_val.
	(traverse_used_heap_object, change_obj_refs, eq_table, hash_key):
	Use ER_els_bound.  Check only ER_NM_empty_el.
	(MINIMAL_TABLE_SIZE): Remove.
	(OCCUPANCY_FACTOR): New.
	(MINIMAL_TABLE_SIZE): Rename to START_ENTRIES_NUMBER.  Use
	OCCUPANCY_FACTOR.
	(create_tab): Allocate space for els and entries.  Use
	OCCUPANCY_FACTOR.  Initialize new fields.
	(first_empty_elem, get_empty_elem, find_tab_entry_num): New.
	(find_tab_el): Rewrite using find_tab_entry_num.  Return NULL when
	the element is not found in non-reservation mode.
	(copy_tab): Move up.
	(expand_tab): Rename to tailor_tab.  Rewrite using copy_tab.
	(remove_tab_el): Rewrite using find_tab_entry_num.
	(find_next_key): Use ER_els_bound.  Return NULL for end marker.
	(table_to_vector_conversion): Use ER_els_bound.  Check only
	ER_NM_empty_el.
	(vector_to_table_conversion): Add_assert.
	* DINO/d_func.c: Rename find_tab_entry, INDEXED_ENTRY_KEY to
	find_tab_el, INDEXED_EL_KEY.
	(keys_call, print_val): Use ER_els_bound.  Check
	only ER_NM_empty_el.
	(scanel): Add GO_THROUGH_REDIR before find_tab_el.  Check only
	ER_NM_empty_el.  Add assert.
	* DINO/d_gen.c (foreach, foreach2): Check key on NULL.  Increment
	start by 1.
	* DINO/dino.tst.in: Change tables output.
	* configure.in: Check GCC -ffat-lto-objects.
	* configure: Update.

2014-12-09  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_bc.sprut (op4i24, macall): New.
	(print_node): Add code for op4i24 and mcall.
	* DINO/d_bcn.shilka (mcall): New.
	* DINO/d_bcf.shilka (mid): New.
	* DINO/d_bcio.c (dump_code): Process mcall.
	(read_bc_program): Process field mid.
	* DINO/d_context.c (second_expr_processing): Generate mcall.
	(modify_copied_ops): Process op4i24.
	* DINO/d_eval.c (find_field): New.
	(execute_general_period_operation): Use it.
	(evaluate_code): Process mcall.
	* DINO/d_func.c (create_class_stack): Add 2 params.  Change
	call_start to actuals_start.
	(place_file_instance): Pass the new params.
	(process_fun_class_call): Add 3 new params.
	(process_call): New.
	(tree_to_heap): Don't put anode_bc_decl on the stack.  Pass the
	new params to create_class_stack.
	* DINO/d_func.h (process_fun_class_call): Change prototype.
	(process_call): New.
	* DINO/d_gen.c (find_field): Add the prototype.
	(call, tcall): Use process_call instead of process_fun_class_call.
	(mcall): New.
	* DINO/d_inference.c (get_insn_op_place, type_transf): Process
	mcall.
	(specialize_insn): Ditto.
	* DINO/Makefile.in (d_gen.i): Make the generation through temp
	file.
	* DINO/haskell.sh: Add execution mode.

2014-12-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/Makefile.in (d_gen.i): Elaborate echo message.
	* DINO/d_ir.sprut (block): Add fields children, sibling, real_block_scope,
	vars_base, inline_flag.  Remove decls_flag.
	* DINO/d_bc.sprut (stdec): Rename to stdecm.
	(stdecu): Make it op2i.
	(sbend): Rename it to stpop.  Make it op2i12.
	* DINO/d_bcio.c (dump_code): Ditto.
	* DINO/d_eval.c (evaluate_code): Ditto.
	* DINO/d_gen.c: Ditto.
	* DINO/d_inference.c: Ditto.
	(get_insn_defs_num): Don't cache defs_num for stinc.
	* DINO/d_bcn.shilka: Ditto.
	* DINO/d_context.c (curr_fdecl_flag): New.
	(number_of_surrounding_blocks): Remove.
	(include_decl): Set up curr_fdecl_flag.
	(simple_block_p): Remove.
	(add_block_to_tree): New.
	(first_block_passing):  Set inline_flag for blocks.
	(inline_blocks): New.
	(curr_vars_number): Rename to curr_temp_vars_base.
	(get_temp_stack_slot): Change calculation.
	(get_bcode_decl): Use vars_base and real_block_scope.
	(second_expr_processing): Ditto.
	(curr_for_stmt_block): New.
	(second_block_passing): Use vars_base, inline_flag,
	real_block_scope, and curr_for_stmt_block.  Check stpop for
	break/continue inside of if-stmt.  Generate stpop.  Don't make
	negative vars_name for inlined block.
	(nop_p): Add stinc with zero op3.
	(curr_temp_vars_start): New.
	(branch_combine, madd_combine, ind_combine): Use it.
	(mark_reachable_info): Move below.
	(inline_call): Set op2 for stdecu.
	(process_bc): Rename to optimize_bc.  Set up
	curr_temp_vars_start.  Move code for removing unreachable too ...
	(dce_bc): New.  Use code from process_bc.
	(test_context): Call inline_blocks and dce_bc.

2014-11-26  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_bc.sprut (block): New field undef_destroy_p.
	(fblock): New field forward_p.
	(process_env_decl): Add assert.
	(prepare_block): Remove case fblock == NULL.
	* DINO/d_bcf.shilka (forward_p): New.
	* DINO/d_bcio.c (dump_code): Fix pure_fun_p output.  Add output of
	forward_p.
	(forward_p): New global.
	(init_fields): Initiate it.
	(read_bc_program): Process forward_p.  Don't set next for
	forward_p fblock.  Set up forward_p for fblock.
	* DINO/d_context.c (get_fblock): Set up forward_p.
	(copy_bc_block): Don't copy for forward_p.
	(copy_fun_bc_block): Use get_fblock for original_fun.
	(second_block_passing): Reset forward_p.  Set up scope for
	forward_p fblock.
	* DINO/d_conv.c (implicit_conversion_for_eq_op): Set up l and r
	for all cases.
	* DINO/d_eval.c (execute_general_period_operation): Check
	forward_p.
	* DINO/d_extern.sprut: Move c_stack_p from context_heap_obj to
	heap_stack.
	* DINO/d_func.c (fold_initval, {fold,filter,map}_vect_el_type,
	{fold,filter,map}_el_fun_block, {fold,filter,map}_dim): Remove.
	({fold,filter,map}_function, process_{fold,filter,map}_vect_op):
	Add new arguments to pass the removed var values.
	({fold,filter,map}_call): Pass the new arguments.
	* DINO/d_gen.c (execute_a_period_operation): Check forward_p and
	call new eval_error.
	(evaluate_exit_p): Skip non-fblocks.
	(funclass): Check forward_p.
	* DINO/d_heap.c (destroy_stacks): Process undef_destroy_p and call
	eval_error if necessary.
	* DINO/d_inference.c (create_insns): Add case for forward fblock
	only.
	(imcall_to_consider_p, build_call_def_use): Ignore forward fblock.
	* DINO/d_yacc.y (process_var_decl): Use merge_additional_stmts.
	* DINO/dino.tst.in (584, 585): Modify dump tests.
	(752-760): New tests.

2014-11-20  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/Makefile.in: One more shift-reduce conflict.
	* DINO/compare.tst: Use in for foreach.  Remove foreach with
	value.
	* DINO/d_bc.sprut (foreach): New.  Rename old one to foreach2, op4
	to element.
	(foreach_val): Remove.
	(print_node): Print field element.
	* DINO/d_bcf.shilka (element): New.
	(vcontainer, vindex): Remove.
	* DINO/d_bcio.c (dump_code): Remove foreach_val.  Update code for
	foreach, add code for foreach2.
	(read_bc_program): Process FR_element.  Remove code for
	FR_vcontainer, FR_vindex.
	* DINO/d_bcn.shilka (foreach_val): Remove.
	(foreach2): New.
	* DINO/d_context.c (first_block_passing): Remove processing
	foreach_value_designator.
	(second_block_passing): Ditto.  Generate foreach2.  Use
	BC_NM_source2 for foreach/foreach2.
	* DINO/d_errors.h (ERR_slice_as_foreach_value_designator): Remove.
	(ERR_non_variable_in_foreach_value): Ditto.
	* DINO/d_errors.c (ERR_slice_as_foreach_value_designator): Remove.
	(ERR_non_variable_in_foreach_value): Ditto.
	(DERR_in_table_operand_type): Mention in.
	* DINO/d_eval.c (evaluate_code): Correct code for foreach.  Remove
	code for foreach_val.  Add code for foreach2.
	* DINO/d_gen.c (foreach): Rename and rearrange parameters, change
	the code.
	(foreach_val): Remove.
	(foreach2): New.
	* DINO/d_inference.c (get_insn_op_place, type_transf): Remove code
	for foreach_val.  Add code for foreach2.  Modify code for foreach.
	(specialize_insn): Ditto.
	* DINO/d_ir.sprut (foreach_stmt): Remove field
	foreach_value_designator.
	* DINO/d_yacc.y: Remove rule for foreach with value.  Use IN
	instead of ':'.
	* DINO/dino.tst.in: Use in instead of ':' in foreach-stmts.
	Rewrite tests with foreach with val.

2014-11-17  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.tst.in (78, 358, 360): Add output specific for
	aarch64.
	(647): Process output for system w/o zero division signal.
	(654, 655): Process abort for long zero division.
	(706, 707, 708): Use throw instead of zero division.

2014-11-16  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in (strtoll, strtoull): New check.
	(strtol): Remove check.
	* configure: Update.
	* AMMUNITION/cocom-config.h.in: Update.
	* DINO/dino.tst.in (746-751): New tests.
	(179, 182, 183, 187, 476, 479, 665): Use longer int.
	(362): Use 10.25.
	(375,487): Use e20.
	(594): Use 2.5.
	(650): Use width 20.
	* DINO/d_types.h: Always require <limits.h>.
	(int_t, unsigned_int_t): Rename to rint_t, unsigned_rint_t.  Make
	them 64-bit at least.
	(MAX_RINT, MIN_RINT): New.
	(floating_t, FLOATING_HUGE_VAL, MAX_FLOAT, IS_FLOATING_NAN):
	Rename to rfloat_t, RFLOAT_HUGE_VAL, MAX_RFLOAT, IS_RFLOAT_NAN,
	RFLOAT_NAN.
	* DINO/d_runtab.h (CODE_ID): Use bcid_t.
	* DINO/d_run.sprut (process_number, context_number): Define as
	int.
	(gc_interrupts_number, all_interrupts_number): Ditto.
	(clear_c_stack_flags): New.
	(call_fun_class): Define pars_number as int.
	(setup_new_cstack): Define vars_num as int.
	(heap_push_without_profile_update): Use c_stack_p instead of
	c_code_p.
	* DINO/d_mpi.c: Use int for npars, rint_t * for size and par in
	function decls.
	(return_int): Use rint_t for i.
	* d_ir.sprut (integer_t, int_t, floating_t): Rename to int_t,
	rint_t, rfloat_t.
	* DINO/d_inference.c (get_insn_op_place): Process ldbi.
	(type_transf): Ditto.
	(specialize_insn): Ditto.  Use int for t.
	(avail_transf): Use int for place.
	* DINO/d_ieee.c: Use rint_t for size.
	(return_int): Use rint_t for i.
	* DINO/d_socket.c: Use int to npars.  Use rint_t for len.
	(return_int): Use rint_t for i.
	* DINO/compare.tst: Use ocaml instead of ocaml.sh.
	* DINO/Makefile.in: Use time for d_minimize.d.
	* DINO/d_heap.c (int_t, floating_t): Rename t	o rint_t, rfloat_t.
	(process_number, context_number): Define as int.
	(gc_interrupts_number, all_interrupts_number): Ditto.
	(previous_uppest_stack_vars_num): Ditto.
	(vars_stack_size): Use int for nvars.
	(used_c_stack_p): Rename to leave_c_stacks_p.
	(traverse_used_heap_object): Clear c_stack_p flags.
	(clear_c_stack_flags): New.
	(mark_used_heap_objects): Make free_stacks a garabge.
	* DINO/d_gen.c: Use int instead of int_t everywhere except:
	(ifunc, ffunc, icmpf, fcmpf, ifunc1, ffunc1, iffunc1, ilfunc1):
	Use rint_t and rfloat_t.
	(execute_btcmpinc): Use rint_t for res.
	(vec, tab): Use rint_t for vect_parts_number and tan_parts_number.
	(check_vector_index_value, check_vector_index, common_stvt, int)
	(ind2): Use rint_t for index_val.
	(execute_not_op, execute_bitwise_not_op, execute_charof_length_op)
	(execute_charof_op, execute_intof_op, execute_cmpi, caddi)
	(cmulti): Use rint_t for i.
	(execute_floatof_op, ifadd, faddi, ifsub, fisub, ifmult, ifdiv)
	(fmulti, fidiv): Use rfloat_t for f.
	(execute_unary_ar_op, madd): Use rint_t for i and rfloat_t for f.
	(ldbi): New.
	(process_imm_fun_call): Make it return flags.
	(common_icall, {i,ci,ti}tcall): Ditto.
	(exit_p): Add parameter.  Rename to evaluate_exit_p.  Make righ c_stack_p
	processing.
	(fblock_end, ret): Pass parameter to evaluate_exit_p.
	(set_c_code_p): Rename c_code_p to c_stack_p.
	* DINO/d_func.h (process_fun_class_call): Use int for pars_number.
	* DINO/d_func.c: Use int for pars_number.
	(min_max_call): Use int for i.
	(match_call, compare_elements) : Use rint_t * instead of int_t *.
	(gmatch_clall): Use rint_t for el.
	(subv_call, del_call): Use rint_t for start, length,
	(cmpv_call): Use rint_t for res.
	(isatty_call): Use rint_t for result.
	(tell_call, seek_call): Use rint_t for pos.
	(print_val): Use the right for format for rint_t.
	(fgetf_call): Use rint_t for i and repeat.
	(floating_nan, minus_floating_nan): Rename to rfloat_nan,
	minus_rfloat_nan.
	(FLOATING_HUGE_VAL, IS_FLOATING_NAN): Rename to RFLOAT_HUGE_VAL,
	IS_RFLOAT_NAN.
	(fsize_call, f{a,m,c}time_call): Use rint_t for result.
	(fold_dim, filter_dim, map_dim): Use int.
	(process_fold_vect_op, process_filter_vect_op)
	(process_map_vect_op): Use int for dim.
	(create_class_stack, process_fun_class_call): Use int for
	actuals_num.
	(curr_token): Use size_t.
	(init_read_token): Use %lu format for curr_token.
	* DINO/d_extern.sprut: Rename unsigned_int_t and
	floating_t to unsigned_rint_t and rfloat_t.
	(set_vect_dim, find_next_key): Use int for dim and start.
	(bcid_t): Define as int.
	(int_t): Define as int.
	(int): Use rint_t for i.
	(context_heap_obj): Rename c_code_p to c_stack_p.
	(heap_hideblock): Use rint_t for hideblock_length.
	* DINO/d_eval.c (load_packed_vector_element)
	(store_packed_vector_element): Use rint_t for index_val.  Use
	rint_t* instead of int_t*.
	(load_vector_element_by_index, store_vector_element): Use rint_t
	for index_val.
	(check_and_get_slice_info): Use rint_t instead of int_t.  Use
	size_t for niter.  Use int for depth.
	(process_slice_extract): Ditto.  Use int for dim and depth.  Use
	rint_t* instead of int_t*.
	(slice_extract): Use int for dim.
	(process_slice_assign): Ditto.  Use int for depth.  Use size for
	niter1.  Use rint_t instead of int_t.  Use rint_t* instead of
	int_t*.
	(slice_assign): Use int for dim and val_dim.
	(execute_ar_op, execute_int_op): Use rint_t instead of int_t.
	(int_pack_vect_op, char_pack_vect_cmp_op, int_pack_vect_cmp_op):
	Ditto.  Use rint_t* instead of int_t*.
	(process_binary_vect_op): Use int for dim and depth.  Print len as
	long.  Use rint_t* instead of int_t*.
	(get_dim): Use int for dim.
	(int_pack_vect_unary_op): Use rint_t instead of int_t.  Use
	rint_t* instead of int_t*.
	(unary_vect_op): Use int for dim.
	(execute_pack_fold_op): Use rint_t instead of int_t.  Use rint_t*
	instead of int_t*.
	(process_fold_vect_op): Use int for dim and depth.
	(fold_vect_op): Use int for dim.  Use (rint_t) cast for 0.
	(vec): Use rint_t instead of int_t.
	(tab): Ditto.  Pass curr_tab_el_number as long long.
	(evaluate_code): Process ldbi.
	(call_fun_class): Use int for pars_number and
	saved_process_number.
	(restart_eval): New.
	(eval_error, switch_to_bcode); Use restart_eval.
	* DINO/d_errors.c (DERR_different_slice_operand_lengths)
	(DERR_different_vec_operand_lengths): Use ld format.
	(DERR_repeated_key): Use lld format.
	* DINO/d_dino.c (a2i): Use rint_t and strtoll.
	(i2a): Use rint_t and the right format.
	(f2a): Use FORMAT_DOUBLE_DIGS.
	(min_rint_mpz, max_rint_mpz): New.
	(mpz_ok_for_int_p): Rename to mpz_ok_for_rint_p.  Use the above
	values.
	(mpz2): Use rint_t and strtoll.
	(i2mpz): Use rint_t, LONG_MIN, LONG_MAX, and lld format.
	(mpz_start, mpz_finish): New.
	(dino_finish): Call mpz_finish.
	(dino_main): Call mpz_start.
	* DINO/d_conv.c (get_fmt_op_pos): Use int for the param.
	(form_format_string): Use INT_MAX instead of MAX_INT.  Use the
	right format.
	(implicit_arithmetic_conversion, implicit_only_int_conversion)
	(implicit_eq_conversion): Use rint_t instead of int_t.
	* DINO/d_context.c: Use int instead of int_t.  Rename MAX_INT to
	MAX_RINT.
	(int_p): New.
	(process_binary_op): Use int_p.
	(gen_int_load): New.
	(second_expr_processing): Use it.
	* DINO/d_common.h (a2i, i2a, mpz2i, i2mpz): Use rint_t instead of
	int_t.
	(mpz_ok_for_int_p): Rename to mpz_ok_for_rint_p.
	* DINO/d_built.h: Use int for pars_number.
	* DINO/d_bcn.shilka (ldbi): New.
	* DINO/d_bcio.c: Use int for int_t.  Use rfloat_t instead of
	floating_t.
	(dump_code): Add code for ldbi.
	(toke_attr): Use rint_t for i.
	(read_bc_program): Process FR_bi.
	* DINO/d_bcf.shilka (bi): New.
	* DINO/d_bc.sprut: Use int instead of int_t in C code sections.
	(int_t): Define as int.
	(ldbi): New.
	(print_op): Move tcalls processing from gen_cfblock.  Generate
	tcalls result processing.
	(gen_cfblock): See previous entry.
	* compare.tst: Use ocaml instead of ocaml.sh.
	* DINO/d_yacc.y (executive_stmt): Check on NULL for taking pos of
	expr.

2014-11-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.tst.in: New different nbody tests.

2014-11-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/Makefile.in (OPTIONS): Transfer CC.
	(d_gen.i): Transfer CC to d_minimize.d.
	* DINO/d_bc.sprut (CC_PREFIX, CC_PREFIX2): Rename to CC_OPTIONS
	and CC_OPTIONS2.  Remove gcc from them.
	(gen_cfblock): Add CC to command line.
	* DINO/d_heap.c (new_heap_chunk): Allocate at list old_size.
	* DINO/d_minimize.d: New.
	* DINO/haskell.sh: New.

2014-11-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_bc.sprut (DESTROY_IDENT_NUMBER): Remove.
	(block): New fields fld_table_len and fld_table.
	(decl): Rename ident_num to fldid_num.
	(field): New field hint.
	* DINO/d_bcf.shilka: Rename ident_num to fldid_num.
	* DINO/d_bcio.c (dump_code): Use FORMAT_DOUBLE_DIGS.  Use
	fldid_num instead of fident_num.  Output only non-negative values.
	(read_bc_program): Rename FR_ident_num to FR_fldid_num.  Process
	ints for FR_f too.  Don't check fldid_num presence.  Rename
	env_decls to all_decls.  Process all decls for define_block_decl.
	* DINO/d_common.h (DESTROY_FLDID_NUM): New.
	* DINO/d_context.c (last_uniq_ident_num): Rename to
	last_uniq_field_ident_num.
	(set_field_ident_number): New.
	(first_expr_processing): Call set_field_ident_number.
	(get_block_decl_ident_number): Remove.
	(get_bcode_decl): Use BC_set_fldid_num instead of
	BC_set_ident_num.
	(second_expr_processing): Use IR_field_ident_number instead of
	get_block_decl_ident_number.
	(process_bc): Remove setting last_uniq_ident_num.
	(test_context): Enumerate bcode before inference_pass call.
	* DINO/d_dino.c: Remove include of d_bcio.h.
	(dino_main): Move finish_context up.  Remove bcode enumeration.
	* DINO/d_eval.c (execute_a_period_operation): Rename to
	execute_general_period_operation.  Set the hint.
	(process_slice_extract): Fix result element indexing for unpack
	elements.
	(process_binary_vect_op): Use madd_mult_p.
	* DINO/d_gen.c (execute_a_period_operation): Rename to
	execute_general_period_operation.
	(common_stvt): New.
	(stvt, stvtu): Use it.
	(execute_a_period_operation): New with fast execution path.
	(ind, ind2): Add expect.
	(madd_mult_p): New.
	(madd): Set it up.
	* DINO/d_heap.c (new_heap_chunk): Contraint chunk grow to 8MB.
	(initiate_heap, stack_with_destroy, destroy_stacks): Rename
	DESTROY_IDENT_NUMBER to DESTROY_FLDID_NUM.
	* DINO/d_inference.c (struct problem): New field get_id.
	(get_insn_id): New.
	(forward_dataflow): Use get_id.
	(calculate_bb_avail): Add new field to avail_problem.
	(type_transf): Fix code for block and fblock.
	(calculate_types): Add new field to type_problem.
	(specialize_insn): Fix code for eqi, nei, lti, gtei, lei, gei,
	bteqi, btnei, btgei, btlti, btlei, btgti.
	(print_op): Remove code for decls.
	(print_inference_info_before_insn): Fix print for index.
	* DINO/d_ir.sprut (ENVIRONMENT).  Add code for access msg and code
	fields.  Rename block_decl_ident_number to field_ident_number.
	(initiate_icode): Set up field_ident_number for destroy_unique_ident.
	* DINO/d_run.sprut (get_another_block_decl): Use fldid_num instead
	of ident_num.
	* DINO/d_runtab.c (struct block_decl_tables, block_decl_tables):
	Move from d_runtab.h.
	(BLOCKS_NUMBER, LV_BLOCK_IDENT_DECLS_TABLE): Ditto.
	(define_block_decl): Set up fields fld_table and fld_table_len.
	* DINO/d_runtab.h (struct block_decl_tables, block_decl_tables):
	Move to d_runtab.c.
	(BLOCKS_NUMBER, LV_BLOCK_IDENT_DECLS_TABLE): Ditto.
	(LV_BLOCK_IDENT_DECL): Change.
	* DINO/d_types.h (DBL_DIG, FORMAT_DOUBLE_DIGS): Define.
	* DINO/dino.tst.in (test 349): Add another expected output.

2014-11-04  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_inference.[ch]: New files.
	* DINO/Makefile.in: Update dependencies and ...
	(objects): Add d_inference.o.
	(source): Add d_inference.[ch].
	(ammunition): Add spset.o and cspset.o.
	(depend): Add d_inference.c.
	* DINO/compare.tst: Add code to check Hasekell.  Add some haskell
	tests.  Fix message about the absence of nodejs.
	(SKIP_HASKELL, DO_HASKELL): New.
	(run_dino): New.  Add optimization usage.  Use it everywhere for
	run dino.
	* DINO/d_bc.sprut (void_ptr_t): New type.
	(lindv, key, lkeyv): Remove.
	(ind2): New.
	(decl): Rearrange fields.
	(info): Add field aux.
	(print_node): Remove lindv.
	(traverse_code): Use break instead of continue when comming into
	already visited node.
	* d_bcio.c: Include d_inference.h.
	(print_indent): Make extern.
	(dump_code): Use print_inference_info_before_insn and
	print_inference_info_after_insn.  Remove lindv.  Add ind2.
	* DINO/d_bcio.h (print_indent): New extern.
	* DINO/d_bcn.shilka (lindv): Remove.
	(ind2): Add.
	* DINO/d_common.h (optimize_flag): New extern.
	* DINO/d_context.c: Include d_inference.h.
	(foreach_vars, initiate_foreach_vars, finish_foreach_vars): Rename
	to foreach_stmts, initiate_foreach_stmts, and
	finish_foreach_stmts.
	(start_block_foreach_vars, free_foreach_var, get_new_foreach_var):
	Remove.
	(finish_block_foreach_vars): Remove.
	(get_foreach_stmts_bound, finish_block_foreach_stmts): New.
	(simple_block_p): New.
	(first_block_passing): Use new functions.
	(make_designator_lvalue get_lvalue_location): Remove code for key,
	lkeyv and lindv.
	(second_block_passing): Ditto.  Use simple_block_p.
	(branch_combine): Use not_defined_result.
	(ind_combine): New.
	(go_through): Use ind_combine.
	(process_bc): Don't remove (f)bend.
	(test_context): Call inference_pass.
	(initiate_context): Call initiate_inference_pass.
	(finish_context): Call finish_inference_pass.
	* DINO/d_dino.c: Include d_inference.h.
	(optimize_flag): New.
	(dino_main): Handle -O and optimize_flag.  Change head message for REPL.
	Move finish_context below dump_code.
	* DINO/d_eval.c (execute_a_period_operation): Change 255 to
	UCHAR_MAX.
	(evaluate_code): Remove lindv.  Add ind2 case.
	* DINO/d_gen.c (check_vector_index_value): New.
	(check_vector_index): Use it.
	(ind): Add fast path for int or float packed vector and int index.
	(ind2): New.
	(ifadd, caddi, ifsub, fisub, cmulti, ifdiv, fidiv): Fix the
	assert.
	(fbend): Rewrite.  It should be never achieved.
	(fmove): Fix setting the value.
	* DINO/dino.{dvi, pdf, ps): Update.
	* DINO/dino.tst.in (644-649 tests): Fix expected REPL headline
	message.
	(732 - 736): Fix echo for running command.
	(737 - 740): New tests for ind2.
	(741 - 742): Tests for type inference.
	(743): Test for foreach var allocation bug.

2014-10-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/spset.h, AMMUNITION/spset.c,
	AMMUNITION/cspset.c: New files.
	* AMMUNITION/cspset.h, AMMUNITION/cspset.c,
	AMMUNITION/cspset.cpp: New files.
	* AMMUNITION/spset.tst.in, AMMUNITION/spset++.tst.in: New files.
	* AMMUNITION/Makefile.in (source): Add spset.[hc], spset.cpp,
	spset.tst.in, spset++.tst.in and cspset.[hc], cspset.cpp,
	cspset.tst.in, cspset++.tst.in.
	(Cobjects): Add spset.o and cspset.o.
	(Cppobjects): Add spset.o and cspset.o.
	(test-c): Add spset-tst and cspset-tst.
	(test-cpp): Add spsetcpp-tst and cspsetcpp-tst.
	(spset-tst, cspset-tst, spsetcpp-tst, cspsetcpp-tst): New entries.
	(install, uninstall): Add spset.h and cspset.h.
	(clean): Add spset.tst, cspset.tst, spset.tst, cspset.tst.
	(depend): Add spset.c, cspset.c, spset.cpp, cspset.cpp.
	(spset.o, cspset.o): New generated dependencies.
	* configure.in (output_files): Add spset.tst, cspset.tst,
	spset++.tst, cspset++.tst.
	* configure: Update.
	* AMMUNITION/ammunition.sgml.in: Add spset and cspset package
	description.
	* AMMUNITION/ammunition++.sgml.in: Ditto.
	* AMMUNITION/ammunition.html: Update.
	* AMMUNITION/ammunition-(1, 13).html: Update.
	* AMMUNITION/ammunition.{dvi,info,pdf,ps,txt}: Update.
	* AMMUNITION/ammunition++-(1, 8, 10, 11, 13).html: Update.
	* AMMUNITION/ammunition.dvi: Update.
	* AMMUNITION/ammunition++.{dvi,info,pdf,ps,txt}: Update.
	* AMMUNITION/ammunition++.html: Update.
	* AMMUNITION/ammunition-{14,15}.html: New files.
	* AMMUNITION/ammunition++-{14,15}.html: New files.
        * cocom.sgml.in: Add spset and cspset descriptions.
	* cocom.{html,dvi,info.pdf,ps}: Update.
	* sgml-info: New.

2014-09-29  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Add NODEJS for comparison.  Rearrange tests.
	* DINO/d_bc.sprut (multi, imulti, fmulti, madd): New nodes.
	* DINO/d_bcio.c (dump_code): Process the new nodes.
	* DINO/d_bcn.shilka: Add the new nodes.
	* DINO/d_context.c (not_defined_result): New.
	(setup_result_var_number, process_unary_op, process_binary_op):
	Use it.
	(second_expr_processing): Ditto.  Pass BC_NM_multi for
	process_binary_op for mult.
	(second_block_passing): Use not_defined_result.  Generate multi.
	(madd_combine): New.
	(branch_combine): Split from ...
	(go_through): Here.  Use madd_combine.
	* DINO/d_conv.c (to_vect_string_conversion): Modify the message.
	* DINO/d_eval.c (process_binary_vect_op): Add multi.
	(evaluate_code): Process multi, madd, imulti, fmulti.
	* DINO/d_gen.c (check_vector_index): Don't check on < 0.
	(ind): Add check before implicit_int_conversion call.
	(common_mult): New.
	(cmult): Use it.
	(cmulti, multi, imulti, fmulti, madd): New functions.
	* DINO/dino.tst.in (not_defined_result): New tests for multi and
	madd.

2014-08-21  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_context.c (second_expr_processing): Check that the next
	stmt is a block for setting inline hint.

2014-08-21  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in: Add AC_CHECK_SIZEOF(size_t).  Add Darwin case.
	* configure: Udpate.
	* AMMUNITION/cocom-config.h.in: Udpate.
	* DINO/d_heap.c (MURMUR_MAGIC, MURMUR_SHIFT, MURMUR_SEED): New.
	(murmur_init, murmur_step, murmur_finish, murmur): New.
	(hash_ref, hash_val, hash_key): Use murmur hash functions.
	* DINO/Makefile.in (compare-only-dino): New entry.  Use it for test.
	* OKA/oka.tst: Add expected output for non-debug case.

2014-07-11  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Change ! to !jit.  Add pure and inline
	variants for some tests.  Remove PERL test in wrong place.
	(print_dino): Use minimal value instead of 0.
	(stinc, stdec, stdecu): New nodes.
	(info): New field inline_p.
	(print_node): Print additional param for imcall.
	(CC_PREFIX): Use -pipe and -fpreprocessed.
	(CC_PREFIX2): New.
	(gen_cfblock): Use popen and CC_PREFIX2 when --save-temps is
	absent.
	* DINO/d_bc.sprut (real_block_vars_number): Remove.
	* DINO/d_bcio.c (dump_code): Print stinc, stdec, stdecu.
	* DINO/d_bcn.shilka (stinc, stdec, stdecu): New.
	* DINO/d_common.h (inlined_calls_num): New.
	* DINO/d_context.c (second_expr_processing): Set inline_p.
	(copy_bc_decls): New.  Take the code from copy_bc_block.
	(copy_bc_block): Use copy_bc_decls.
	(modify_copied_pc): New.  Take the code from copy_fun_bc_block.
	(copy_fun_bc_block): Use modify_copied_pc.
	(process_imcall): Rename to process_tail_imcall.
	(modify_copied_ops, inline_stack, in_inline_stack_p): New.
	(inlined_calls_num, inline_returns, inline_call): New.
	(process_bc): Nullify inline_stack.  Call inline_call if
	necessary.
	(initiate_context, finish_context): Init/finish inline_stack and
	inline_returns.
	* DINO/d_dino.c (dino_finish): Check evaluated_p to finish_heap
	and print its statistics.
	* DINO/d_errors.[ch] (ERR_unknown_hint): New.
	(ERR_wrong_hint_for_non_fun): New.
	(ERR_jit_hint_for_thread): New.
	* DINO/d_eval.c: Remove real_block_vars_number.
	(evaluate_code): Pass new parameter to icall, itcall, cicall,
	citcall, ticall, titcall.  Add cases stinc, stdec, stdecu.
	(call_fun_class): Pass new parameter to process_imm_fun_call.
	* DINO/d_func.c (process_fun_call): Remove real_block_vars_number.
	* DINO/d_gen.c (execute_btcmp, execute_btcmpi): Add assert for
	int_p.
	(execute_btcmpinc): Pass FALSE instead pf int_p to execute_btcmp.
	(heap_push_or_set_res): Move from d_heap.c.  Add parameter.
	(process_imm_fun_call, common_icall, icall, itcall, cicall): Add
	new parameter vars_number.
	(citcall, ticall, titcall): Ditto.
	(cadd, caddi, csubm cmult, cdiv, cmod, clsh, crsh, cash, cand):
	Add assert for int_p.
	(cxor, cor): Ditto.
	(stinc, stdec, stdecu): New.
	* DINO/d_heap.c: Remove real_block_vars_number.
	(update_profile): Make external and void result type.
	(setup_new_cstack, heap_push_without_profile_update): Move to
	d_run.sprut.
	(alloc_new_stack): Make external.
	(STACK_REUSE_THRESHOLD): Remove.
	(heap_push): Add guard to update_profile.
	(heap_pop): Don't call try_heap_stack_free.
	* DINO/d_ir.sprut (enum hint_val, hint_val_t): New.
	(block): Change type of field hint.
	* DINO/d_run.sprut (update_profile, alloc_new_stack): New
	externals.
	(setup_new_cstack, heap_push_without_profile_update): Move from
	d_heap.c
	* DINO/d_yacc.y: Change type of hint nonterminal.  Change rules for
	hint.
	(process_header, process_header_block): Add hint parameter.
  	(get_hint): New.
	* DINO/dino.tst.in: Change ! to !jit.  Add tests for inline and
	pure.

2014-06-30  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_bc.sprut: Move non-executed code below.
	(inot, iplus, iminus, ibnot, fplus, fminus): New nodes.
	(fadd, fmult, fand, for, fxor): Rename to fold_add, fold_mult,
	fold_and, fold_or, fold_xor.
	(iid, iunid): Remove.
	(fadd, fsub, fmult, fdiv, fmodop, ifadd, ifsub, fisub, ifmult): New.
	(ifdiv, fidiv, faddi, ibt, ibf, ibfni, fbteq, fbtne, fbtge): Ditto.
	(fbtlt, fbtle, fbtgt, fmove): Ditto.
	* DINO/d_bcio.c (dump_code): Rename the fold ops.  Add cases for
	inot, iplus, iminus, ibnot, fplus, fminus, ieq, ine, ilt, ige,
	igt, ile, iadd, isub, imult, idiv, imod, fadd, fsub, fmult, fdiv,
	fmodop, ifadd, ifsub, fisub, ifmult, ifdiv, fidiv, ilsh, irsh,
	iash, iand, ixor, ior, ieqi, inei, ilei, igei, igti, ilti, iaddi,
	faddi, ibf, ibfni, ibteq, ibtne, ibtle, ibtgt, ibtge, ibtlt,
	fbteq, fbtne, fbtle, fbtgt, fbtge, fbtlt, ibteqi, ibtnei, ibtlei,
	ibtgti, ibtgei, ibtlti, ibteqinc, ibtneinc, ibtleinc, ibtgtinc,
	ibtgeinc, ibtltinc, ibt, fmove.
	* DINO/d_bcn.shilka: Rename the fold ops.
	(inot, iplus, iminus, ibnot, fplus, fminus, ieq, ine): New.
	(ilt, ige, igt, ile, fadd, fsub, fmult, fdiv, fmodop, ifadd): New.
	(ifsub, fisub, ifmult, ifdiv, fidiv, faddi, ieqi, inei): New.
	(ilti, igei, igti, ilei, ibt, ibf, ibfni): New.
	(fbteq, fbtne, fbtle, fbtgt, fbtge, fbtlt, fmove): New.
	* DINO/d_context.c (process_unary_op): Rename the fold ops.
	(go_through): Consider iaddi, ibt, ibf, ieqi, inei, ilti, igei,
	igti, ilei.  Generate also integer varoants of branches.
	* DINO/d_gen.c (insn_tp): Remove.
	(iplus, iminus, ilshift, irshift, iashift): Rename to i_plus,
	i_minus, i_lshift, i_rshift, i_ashift.
	(ieq, ine, ilt, ile, igt, ige): Rename to i_eq, i_ne, i_lt, i_le,
	i_gt, i_ge.
	(fplus, fminus, fmult, fdiv, frem): Rename to f_plus, f_minus,
	f_mult, f_div, f_mod.
	(feq, fne, flt, fle, fgt, fge, inot): Rename to f_eq, f_ne, f_lt, f_le,
	f_gt, f_ge, i_not.
	(execute_btcmp, execute_btcmpi, execute_btcmpinc, caddi): Change
	parameter tp to int_p.
	(cbteqinc, cbtneinc, cbtleinc, cbtgeinc, cbtltinc, cbtgtinc): Ditto.
	(cbteq, cbtne, cbtle, cbtge, cbtlt, cbtgt): Ditto.
	(cbteqi, cbtnei, cbtlei, cbtgei, cbtlti, cbtgti): Ditto.
	(inot, ibnot, ieq, ieqi, ine, inei, ilt, ilti, igt, igti): New.
	(ige, igei, ile, ilei, iplus, fplus, iminus, fminus): New.
	(cadd, caddi, csub, cmult, cdiv, cmod, clsh, crsh, cash): Change
	parameter v to int_p.
	(cand, cxor, cor): Ditto.
	(fadd, ifadd, faddi, fsub, ifsub, fisub, fmult, ifmult): New.
	(fdiv, ifdiv, fidiv, fmodop, ibf, ibfni): New.
	(fbteq, fbtne, fbtge, fbtlt, fbtle, fbtgt, ibt, fmove): New.
	* DINO/d_eval.c: Rename the fold ops.
	(evaluate_code): Check BC_NM_nop instead of BC_NM__error.
	Add cases for inot, ibnot, ieq, ieqi, ine, inei, ile, ilei, ilt,
	ilti, ige, igei, igt, igti, iplus, fplus, iminus, fminus, fadd,
	ifadd, iaddi, faddi, fsub, ifsub, fisub, fmult, ifmult, fdiv,
	ifdiv, fidiv, fmodop, ibf, ibfni, fbteq, fbtne, fbtge, fbtlt,
	fbtle, fbtgt, ibt, fmove.

2014-06-29  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Remove return in gen_random.  Add JIT hint.
	* DINO/d_bc.sprut (move): Rename rhs_decl to move_decl.
	* DINO/d_bcf.shilka: Ditto.
	* DINO/d_bcio.c (dump_code): Add stvtu, stsu, steu cases.
	(read_bc_program): Rename rhs_decl to move_decl.
	* DINO/d_bcn.shilka (stvtu, stsu, steu): New.
	* DINO/d_context.c (add_move): Rename rhs_decl to move_decl.
	(copy_fun_bc_block): Ditto.
	(second_block_passing): Add a new arg.  Process last expr-stmt as
	return.  Generate new node.
	(skip_nops): New.
	(go_through): Use it.
	* DINO/d_errors.[ch] (DERR_undefined_value_assign): New.
	* DINO/d_eval.c (evaluate_code): Add stvtu, stsu, steu cases.
	* DINO/d_gen.c (stvtu, stsu, steu): New.
	(ret): Remove check on undef.
	(move): Generate a new error.
	* DINO/dino.tst.in: New dump output.  New tests.

2014-06-26  Vladimir Makarov  <vmakarov@users.sf.net>

	* SHILKA/gen.c (allocated_trie_nodes_number): Make it
	unconditional.
	(get_free_trie_node, output_statistics): Use
	allocated_trie_nodes_number unconditionally.
	* DINO/dino.tst.in: Add new tests for JIT.
	* DINO/d_run.sprut (call_pos, ifun_call_pc): New.
	(call_fun_class): Add parameter.
	(switch_to_bcode, evaluate_code): New externals.
	(do_call): Add new parameter.  Make call right before return.
	Call evaluate_code for from_c_code_p.
	* DINO/d_heap.c (used_c_stack_p): New.
	(traverse_used_heap_object): Set up used_c_stack_p.
	(destroy_stacks): Pass new argument to call_fun_class.
	(GC): Reset used_c_stack_p.  Call switch_to_bcode.
	(heap_push_without_profile_update): Reset stack c_code_p.
	* DINO/d_gen.c (execute_charof_op): Set up ifun_call_pc.
	(vec, tab): Add parameters.
	(call tcall, process_imm_fun_call, common_icall, icall, itcall):
	Add parameter.
	(cicall, citcall, ticall, titcall, ibcall): Ditto.
	(exit_p): New.
	(fblock_end, ret): Use it.
	(throw): Add parameter.
	(set_c_code_p): New.
	* DINO/d_func.h (process_imm_ifun_call, process_fun_class_call):
	Add parameter.
	* DINO/d_func.c: Use call_pos instead of get_cpos in builtin
	functions.
	(curr_from_c_code_p, ifun_call_pc): New.
	(call_external_fun): Move INCREMENT_PC before the call.
	(process_imm_ifun_call): Ditto.  Set up ifun_call_pc.  Manage
	curr_from_c_code_p.
	(process_fun_call): Add parameter.
	(process_fun_class_call): Add parameter.  Move INCREMENT_PC before
	the call.  Set up ifun_call_pc.  Manage curr_from_c_code_p.
	* DINO/d_extern.sprut (context_heap_obj): Add field c_code_p.
	* DINO/d_eval.c (eval_long_jump_set_flag, eval_longjump_buf): Move
	upper.
	(find_catch_pc): Make void return type.  Call switch_to_bcode if
	necessary.
	(vec, tab, throw): Add parameter(s).
	(evaluate_code): Make external.  Make INTERRUPT_CHECK calls the
	last one.
	(switch_to_bcode): New.
	* DINO/d_dino.c (COMMAND_LINE_DESCRIPTION): Add --save-temps.
	(save_temps_flag): New.
	(dino_main): Set it.
	* DINO/d_conv.h (form_format_string): Add parameter.
	* DINO/d_common.h (save_temps_flag): New.
	* DINO/d_conv.c (get_fmt_op_pos): New.
	(form_format_string): Add parameter.  Use get_fmt_op_pos.  Set up
	ifun_call_pc.
	(implicit_arithmetic_conversion): Set up ifun_call_pc.
	* DINO/d_bc.sprut (sl, lslv, field, vec, tab): Make them op3i.
	(print_node): Print funclass for fun or class.  Print additional
	argument for imcall, call, tcall.
	(form_fun_name): New.
	(form_fname): Use it.  Change 2nd arg type.  Add pid to the name.
	(gen_cfblock): Use form_fun_name.  Generate set_c_code_p call.
	Generate return after fbend.  Use save_temps_flag.  Uncomment
	remove calls.
	* DINO/compare.tst: Add JIT variant tests.
	(int1000): New.
	(print_dino): Use it in print.  Reset dtime if it is smaller.

2014-06-19  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/IEEE.cpp (biased_exponent): Remove unused var result.
	(float_to_string): Fix mix of signed and unsigned.
	(binary_string_to_float): Add parentheses for &&.
	* AMMUNITION/earley.cpp (use_functions, use_description): Make
	conditional.
	* AMMUNITION/errors.c (default_output_error_function): Add prefix
	const.
	* MSTA/Makefile.in: Update dependencies.
	* MSTA/anal.c (process_type_definition_2, pattern_eq_function):
	Add parentheses for &&.
	(process_definition_list): Remove unused single_definition.
	(process_sequence_element): Remove unused left_literal and
	right_literal.
	* MSTA/ird.sprut (process_canonical_rule_action): Add parentheses
	for &&.
	* MSTA/la-trie.c (set_up_default_LR_situation_of_trie_level):
	Ditto.
	* MSTA/lr.c: Include "output.h".
	(get_shifted_LR_situation_list): Remove unused
	single_definition.
	(add_context_conflicts): Add parentheses for &&.
	(evaluate_graph_context): Remove unused
	current_dependence_list_element.
	* MSTA/main.c: Include "hashtab.h".
	(main): Add return at the end.
	* MSTA/parser.c (output_token_representation): Set up
	right_range_value.
	(output_pop_shift_action_attribute): Remove unused rule_length.
	(output_switch, output_parser_itself): Change /* into / * in
	comments.
	(output_code_before_switch): Ditto.  Remove unused i.
	* MSTA/yacc.h (yylex, yyerror): Add
	(yyparse): Add return type.
	* MSTA/yacc.y (yyerror): Add return type.
	* NONA/yacc.h (yylex, yyerror): Add
	(yyparse): Add return type.
	* NONA/yacc.y (yyerror): Add return type.
	* NONA/main.c (main): Add return at the end.
	* OKA/gen.c (it_is_empty_reservation_sets_list): Make conditional.
	(reservation_sets_list_and, it_is_state_without_reservations): Ditto.
	(output_ifdef): Ditto.
	(output_expression): Add parentheses for &&.
	* OKA/main.c (main): Add return at the end.
	* OKA/oka.tst: Change positions add additional expected output.
	* OKA/yacc.h (yylex, yyerror): Add
	(yyparse): Add return type.
	* OKA/yacc.y (yyerror): Add return type.
	* SHILKA/Makefile.in: Update dependencies.
	* SHILKA/gen.c: Include "errors.h".
	(generalized_output_string): Add parentheses for &&.
	* SHILKA/main.c (main): Add return at the end.
	* SHILKA/yacc.h (yylex, yyerror): Add
	(yyparse): Add return type.
	* SHILKA/yacc.y (yyerror): Add return type.
	* SPRUT/gen.c (output_node_type_definitions_and_structures): Add
	parentheses for &&.
	(output_node_type_class_structures): Ditto.
	(output_title_of_next_double_link_function): Ditto.
	(output_title_of_previous_double_link_function): Ditto.
	(output_title_of_owner_function): Ditto.
	(output_title_of_field_access_function): Ditto.
	(output_field_check, output_field_print, output_field_traverse):
	Ditto.
	(output_field_transformation): Ditto.
	(output_title_of_field_modification_function): Ditto.  Output
	additional ().
	* SPRUT/main.c (main): Add return at the end.
	* SPRUT/sprut.tst: Change expected positions.
	* SPRUT/yacc.h (yylex, yyerror): Add
	(yyparse): Add return type.
	* SPRUT/yacc.y (yyerror): Add return type.
	* configure.in: Add SED and EGREP.
	* configure: Update.
	* DINO/Makefile.in: Update dependencies.
	(EGREP): Add.  Set up.
	(SED): Set up autoconfig.
	(source): Add d_gen.c and d_minimize.d.
	(d_gen.i): New entry.
	(install, clean): Add d_gen.i.
	(depend): Add d_gen.c and d_genheader.i.
	* DINO/compare.tst: Put dino tests first.
	(speed): Decrease iteration to 100.
	(TIME, perc, print_dino): New.
	(Announce_DINO): Remove.
	(Announce_Test): Remove -n from NECHO.
	(print_time): Modify.
	(ack, fibonacci, heapsort, nested loops, random, loop): Add JIT
	version.
	(func calls, tak, fact): Ditto.
	(array access): Bump up rep to 300.
	(count line): Bump up rep.
	(echo client, exception mechanism, fibonacci, hash access): Bump up rep.
	(hash part 2, heapsort, start up, list processing, matrix mult):
	Bump up rep.
	(method calls, nested loops, object instantiation): Ditto.
	(producer/consumer, random, reverse file, sieve): Ditto.
	(spell checker, statistical moments, sum of a file): Ditto.
	(loop, func calls, tak, fact, matrix mult): Ditto.
	* DINO/d_bc.sprut: Include d_runtab.h.
	(fun_mode_t): New.
	(gen_cfblock): New external.
	(fmode): New field fmode.
	(ior, ixor, iand, ieq, ine, iid, iunid, ilt, igt, ile, ige): New nodes.
	(ilsh, irsh, iash, iadd, isub, imult, idiv, imod, iaddi, ieqi): Ditto.
	(inei, ilti, igti, ilei, igei): Ditto.
	(ibteq, ibtne, ibtge, ibtlt, ibtle, ibtgt): Ditto.
	(ibteqi, ibtnei, ibtgei, ibtlti, ibtlei, ibtgti): Ditto.
	(ibteqinc, ibtneinc, ibtgeinc, ibtltinc, ibtleinc, ibtgtinc):
	Ditto.
	(imove, op_slst): Ditto.
	(gen_info): Ditto.
	(process_env_decl): Set fmode.
	(print_op, print_node, curr_label_num, fbcode, traverse_bcode): New.
	(GEN_DIR, GEN_FUN_PREFIX, CC_PREFIX, form_fname, copy_gen_file): Ditto.
	(gen_cfblock): Ditto.
	* DINO/d_bcf.shilka: Include d_run.h.
	(fmode): New.
	* DINO/d_bcio.c: Include d_run.h.
	(dump_code): Output fmode.  Process imove.
	(fmode): New.
	(init_fields): Init fmode.
	(read_bc_program): Process field fmode.
	* DINO/d_bcn.shilka (ior, ixor, iand, ilsh, irsh, iash, iadd): New.
	(isub, imult, idiv, imod, iaddi, ieqi): Ditto.
	(ibteq, ibtne, ibtge, ibtlt, ibtle, ibtgt): Ditto.
	(ibteqi, ibtnei, ibtgei, ibtlti, ibtlei, ibtgti): Ditto.
	(ibteqinc, ibtneinc, ibtgeinc, ibtltinc, ibtleinc, ibtgtinc):
	Ditto.
	(imove): Ditto.
	* DINO/d_common.h (generated_c_functions_num): New.
	(generated_c_function_calls_num): Ditto.
	(print_cont_prompt): Rename to print_stmt_prompt.
	* DINO/d_context.c (update_copied_redirs): Remove unused new.
	(process_use_clause): Init err_p.
	(first_block_passing): Removed unused curr_stmt.
	(get_fblock): Removed unused info.
	(second_expr_processing): Removed unused elist, flatten.
	(copy_fun_bc_block): Removed unused info.  Set up next_except.
	(second_block_passing): Removed unused op, bc_block.  Set up
	fmode.
	(go_through): Add default case.
	(process_bc): Remove unused last_uniq_ident_num.
	* DINO/d_conv.c (form_format_string): Remove unused start.
	(implicit_conversion_for_binary_int_op): Removed unused long_p.
	(implicit_conversion_for_eq_op): Removed unused f.
	* DINO/d_dino.c (dino_finish): Print generated_c_functions_num,
	generated_c_function_calls_num.
	(dino_start): Init generated_c_functions_num,
	generated_c_function_calls_num.
	(dino_main): Add d_unreachable.
	* DINO/d_dino.h (STANDARD_DINO_GEN_FILE_NAME): New.
	* DINO/d_eval.c: Include d_gen.c. Modify and Move a lot of code there.
	(extract_op1, extract_op2, extract_op3): Change return type.
	(iand, ior, ixor): Rename to i_and, i_or, i_xor.
	(process_var_ref_and_val, process_var_val, process_external_var):
	Make external.
	(get_designator_pos, execute_a_period_operation): Ditto.
	(load_vector_element_by_index, load_table_element_by_key): Ditto.
	(store_designator_value, store_vect_tab_designator_value): Ditto.
	(store_stack_designator_value, slice_extract, slice_assign): Ditto.
	(execute_plus_op, execute_minus_op, execute_mult_op): Ditto.
	(execute_div_op, execute_mod_op, execute_lshift_op): Ditto.
	(execute_rshift_op, execute_ashift_op, execute_and_op): Ditto.
	(execute_xor_op, execute_or_op, execute_concat_op): Ditto.
	(execute_common_eq_ne_op, execute_eq_op, execute_ne_op): Ditto.
	(execute_lt_op, execute_ge_op, execute_le_op, execute_gt_op): Ditto.
	(execute_identity_op, binary_vect_op, unary_vect_op, fold_vect_op): Ditto.
	(vec, tab, out, throw, except): New.
	(evaluate_code): Rewrite using new funcs, add code for new nodes.
	* DINO/d_extern.sprut (IVAL, INDEXED_ENTRY_KEY)
	(INDEXED_ENTRY_VAL): Use val_t cast.
	* DINO/d_func.c: Use function_p instead of fun_p.
	(eltype_call): Fix typo in assignment.
	(closure_call): Remove unused closure.
	(array_sort_compare_function): Remove unused context.
	(sort_call): Add d_unreachable.
	(float_function_start, float_function_start2): Remove unused
	result.
	(exit_call): Remove unused code.  Remove setting the result.
	(fold_function): Remove unused res.
	(init_call): Remove unused instance.
	(reset_vars, get_fblock_pc): Move to d_ir.sprut.
	(generated_c_functions_num, generated_c_function_calls_num): New.
	(real_fun_call_pc): Make external.
	(process_fun_call): Call do_call instead of get_fblock_pc.
	(process_imm_fun_call): Move to d_gen.c.
	(process_fun_class_call): Remove unused mode, fun_class_val.
	Check class first.
	(DINO/d_func.h): Remove process_fun_class_call.
	* DINO/d_heap.c (cpc, tvars, cvars): Add d_restrict.
	(clean_heap_object_process_flag): Remove unused p.
	(make_cvars_undefined): Remove.
	(setup_new_cstack, expand_uppest_stack): Use reset_vars instead of
	make_cvars_undefined.
	(expand_tab): Remove unused int_p.
	* DINO/d_ir.sprut (block): New field hint.
	* DINO/d_run.sprut (expect, doubt, d_restrict): New.
	(cpc, tvars, cvars): Add d_restrict.
	(fun_p): Rename to function_p.
	(real_fun_call_pc): New.
	(reset_vars, get_fblock_pc): Move from d_func.c.
	(generated_c_functions_num, generated_c_function_calls_num): New.
	(do_call): New.
	* DINO/d_runtab.c (initiate_run_tables): Make a code
	unconditional.
	* DINO/d_yacc.y (yylex): New.
	(process_header_block): Add parameter.
	(hint): New nonterminal.
	(skip_line_rest): Remove unused c.
	* DINO/dino.tst.in: Change output from a thread test.

2014-05-29  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_bc.sprut (TRANSLITERATE_NAME, transliterate_bc_decl): Rename
	to TRANSLIT_NAME and translit_bc_decl.
	(CLOSURE_NAME, closure_bc_decl): New.
	(funof, threadof, classof): Remove.
	(bc_decls_table): Add entry for closure.
	* DINO/d_bcio.c (dump_code): Remove funof, threadof, and classof.
	* DINO/d_bcn.shilka: Ditto.
	* DINO/d_built.h (transliterate_call): Rename to translit_call.
	(closure_call): New.
	* DINO/d_context.c (first_expr_processing): Add cases for class
	and thread types.  Process only assignment var for var_assign and
	par_assign.
	(first_block_passing): Process assignment expr in var_assign and
	par_assign after the var declarations.
	(process_unary_op): Remove cases for funof, classof, threadof.
	(ir2er_type): Return the type, not mode.
	(second_expr_processing): Add cases for class and thread types.
	* DINO/d_conv.c: Rename pack_vect_el_type to pack_vect_el_mode.
	* DINO/d_eval.c: Ditto.
	(execute_typeof_op): Use mode_to_type and code_type.
	(execute_funof_op, execute_threadof_op, execute_classof_op):
	Remove.
	(process_unary_vect_op, evaluate_code): Remove cases for funof,
	classof, threadof.
	* DINO/d_extern.sprut (enum type_val, type_val_t): New.
	(pack_vect_el_type): Rename to pack_vect_el_mode.
	* DINO/d_func.c: Rename pack_vect_el_type to pack_vect_el_mode.
	(transliterate_call): Rename to translit_call.
	(eltype_call): Use mode_to_type and code_type.
	(closure_call): New.
	(print_val): Use types, not modes.
	(fuidn_call): Check null getpwuid result.
	* DINO/d_heap.c: Rename pack_vect_el_type to pack_vect_el_mode.
	* DINO/d_ir.sprut (ENVIRONMENT): Remove unnecessary ().  Use
	pub/priv keywords.  Add closure.
	(class_type, thread_type): New.
	* DINO/d_kw.shilka (ACLASS, AFUN, ATHREAD, CLOSURE): Remove.
	(priv, pub): Add.
	* DINO/d_run.sprut (mode_to_type, code_type): New.
	* DINO/d_yacc.y (process_obj_header, process_obj_block): New.
	(process_fun_start): New.
	(ACLASS, AFUN, ATHREAD, CLOSURE): Remove.
	(PRIV/PUB): Add.
	(afun_thread_class): Remove.
	(type): New nonterm.  Use fun_thread_class.
	(expr): Separate types.  Remove rules for funof/classof/threadof.
	(aheader): Flatten out, use fun_thread_class.
	(val_var_list): Propagate access.
	(val_var): Remove access attached to ident.
	(declaration): Add access to a declaration.  Add rules for object.
	(extern_list): Propagate access.
	(extern_item): Remove access attached to ident.
	(header): Ditto.  Flatten out.
	(fun_thread_class_start): Flatten out.
	(par): Put access first.
	(formal_parameters): Move to nonterminal up '(' and ')'.
	* DINO/{ieee.d, ipcerr.d, mpi.d, socket.d}: Use keywords pub/priv.
	* DINO/dino.tst.in: Modify tests with types, accesses, anonymous
	functions.  Add tests for closure.  Rename transliterate to
	translit.  Add test for bug for initialization with redifinition.
	Add tests for obj.

2014-05-21  Vladimir N Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/position.c: Fix typo in a comment.
	* DINO/Makefile.in (d_ir.[ch], d_bc.[ch]): Add -copy option for
	SPRUT.
	* DINO/compare.tst: Use js -j instead of js -m.  Fix tests using
	exceptions and extensions.
	* DINO/dino.tst.in: Fix tests using exceptions and extensions.
	Add tests for uses, abstract fun/class class, checking 'out 0',
	bugs in break/continue.
	* DINO/d_yacc.y (merge_use_item_lists, uncycle_use_item_list):
	New.
	(use_use_prefix): New.
	(USE, FORMER, LATER): Add tokens.
	(EXT): Remove token.
	(use_clause_list, use_item, use_item_list, alias_opt): New
	non-terms.
	(block_stmt, try_block, catch): Use create_empty_block.
	(declaration): Add rule for use.
	(header): Remove rule for extension.
	(process_header, initiate_parser): Use create_empty_block.
	* DINO/d_ir.sprut: Rename fun_class_ext to fun_class.
	(create_emty_block): New.
	(ENVIRONMENT): Use use-clause for exceptions.  Add isa.  Remove
	excepts, errors, signals, invops, invindexes, invslices,
	invectors, invkeys, invcalls, syserrors, systemcalls, invregexps,
	invparsers, invexterns, invaccesses.
	(pub, ext): Remove nodes.
	(use, use_item, former_item, later_item, decl_redir): New nodes.
        (block): Add block_uses field.
	(block_use): New node.
	(decl): Add fileds origin_decl, use_clause, redir_to_subst, alias_flag.
	(func_or_class): Remove field no.  Add field fdecl_bc_block.
	(hash_func, compare_func): Remove IR_NM_ext.
	(create_empty_block): New function.
	* DINO/d_kw.shilka (ext): Remove.
	(use, former, later): Add.
	* DINO/d_run.sprut (get_another_block_decl): New.
	(eval_error): Remove 2nd param.
	* DINO/d_context.c: Rename fun_class_ext to fun_class.
	(include_decl): Remove IR_NM_ext.
	(process_extension_block): Remove.
	(max_block_level): Move up.
	(copied_redirs, update_copied_redirs): New.
	(make_flat_redirs, use_items, curr_use_items_start): New.
	(use_item_cmp, find_use_item_index, check_matching): New.
	(set_next_stmt, add_to_stmt, make_alias, process_use_clause): New.
	(copy_fun_class_attrs, process_redecl_after, add_block_use): New.
	(first_block_passing): Use set_block_level.  Process later items.
	Call make_flat_redirs.  Move setting access attributes to decl
	processing.  Rewrite decl processing.  Remove IR_NM_ext and add
	IR_NM_use and IR_NM_decl_redir processing.
	(decl_subst, initiate_decl_subst, set_decl_subst, get_decl_subst): New.
	(finish_decl_subst, set_new_decl_num): New.
	(get_bcode_decl): Use set_new_decl_num.
	(copy_bcode): New.
	(get_fblock): Copy origin_decl if any.  Create fdecl bc block if
	there is not any.
	(all_funs_and_classes): Rename to all_fblocks.
	(bc_copies, copy_and_link_bcode, copy_bc_block): New.
	(copy_fun_bc_block): New.
	(second_block_passing): Copy fun class bcode if it is a decl
	copy.  Process decl_redir.
	(curr_bc_block): New.
	(nop_p): Add 'out 0'.
	(process_bc): Set up curr_bc_block.
	(test_context): Don't set up curr_scope for process_bc.
	(initiate_context): Call initiate_decl_subst.  Create use_items,
	copied_redirs, and bc_copies.
	(finish_context): Call finish_decl_subst.  Delete use_items,
	copied_redirs, and bc_copies.
	* DINO/d_bc.sprut (MSG_NAME, msg_bc_dec, ANSTRCALL_NAME): New.
	(abstrcall_bc_decl, ISA_NAME, isa_bc_decl): Ditto.
	({EXCEPTS,ERRORS,SIGNALS,INVOPS,INVINDEXES,INVSLICES}_NAME): Remove.
	({INVECTORS,INVKEYS,INVCALLS,SYSERRORS,SYSTEMCALLS}_NAME): Ditto.
	({INVREGEXPS,INVPARSERS,INVEXTERNS,INVACCESSES}_NAME): Ditto.
	({excepts,errors,signals,invops,invindexes,invslices}_bc_decl): Remove.
	({invectors,invkeys,invcalls,syserrors,systemcalls}_bc_decl): Ditto.
	({invregexps,invparsers,invexterns,invaccesses}_bc_decl): Ditto.
	(use): New node.
	(block): New field uses.
	(bc_decls_table): Remove entries for removed decls and add entries
	for new decls.  Setup context for exceptions to NULL.
	(prepare_block): Check fblock is not NULL.
	* DINO/d_bcf.shilka (use): New.
	* DINO/d_bcio.c (dump_code): Print fblock uses.
	(read_bc_program): Process FR_use.  Fix check_fld call for
	FR_friend.
	* DINO/d_built.h (isa_call): New.Rename fun and fgn into fuidn and fgrpn.-
	* DINO/d_conv.c: Remove 2nd param in eval_error calls.
	* DINO/d_dino.c: Ditto.
	* DINO/d_heap.c: Ditto.
	* DINO/d_eval.c: Ditto.
	(execute_a_period_operation): Check fdecl without block.
	(find_catch_pc): Use internal_isa_call and
	get_another_block_decl.
	(eval_error): Use just uppest_stack.
	* DINO/d_func.c: Remove 2nd param in eval_error calls.
	(internal_isa_call, isa_call): New.
	(init_read_token): Use internal_isa_call and
	get_another_block_decl.
	(get_fblock_pc): New.
	(process_fun_call, process_imm_fun_call, process_fun_class_call):
	Use get_fblock_pc.
	* DINO/d_errors.[ch]: Fix typo in
	ERR_undeclared_ident_friend_list.
	(ERR_extension_before_extended): Remove.
	(ERR_extension_of_non_fun_class_ext): Remove.
	(ERR_extension_of_forward_declaration): Ditto.
	(ERR_extension_of_final): Ditto.
	(ERR_use_before_definition, ERR_use_of_non_fun_class): New.
	(ERR_use_of_forward_declaration, ERR_use_of_final): New.
	(ERR_use_of_class_inside_the_class): New.
	(ERR_repeated_use_item_ident_occurence_in_use): New.
	(ERR_previous_use_item_ident_location): New.
	(ERR_undefined_use_item_ident): New.
	(ERR_used_decl_not_mentioned_in_former_redefines_prev_one): New.
	(ERR_alias_redefines_prev_one): New.
	(ERR_alias_redefinition): New.
	(ERR_ident_in_former_has_no_prev_decl): New.
	(ERR_used_decl_redefinition_not_mentioned_in_later): New.
	(ERR_here_is_corresponding_use_clause): New.
	(ERR_ident_in_former_item_is_not_declared_before_use): New.
	(ERR_ident_in_later_item_is_not_declared_after_use): New.
	(ERR_this_outside_fun_class_ext): Rename to ERR_this_outside_fun_class.
	(ERR_return_outside_fun_class_ext): Rename to
	ERR_return_outside_fun_class.
	(DERR_unfinished_fun_class_call): New.
	(DERR_undefined_class_or_fun): Add parameter.
	* DINO/{ieee.d, mpi.d, ipcerr.d, socket.d}: Rewrite exceptions.
	* DINO/d_socket.c (_accept): Set up addr_len.

2014-04-06  Vladimir N Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Fix code finding OCAML.

2014-04-03  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_ir.sprut (foreach_stmt): Rename foreach_designator to
	foreach_index_designator.  Add foreach_value_designator,
	foreach_tab_place and foreach_search_start_place.
	* DINO/d_yacc.y: Add foreach with value designator.
	* DINO/d_bcf.shilka (vcontainer, vindex): New.
	* DINO/d_bc.sprut (pushi): Remove.
	(foreach_val): New node.
	* DINO/d_bcio.c (dump_code): Remove pushi.  Add foreach_val.
	(read_bc_program): Process vcontainer and vindex.
	* DINO/d_bcn.shilka (pushi): Remove.
	(foreach_val): Add.
	* DINO/d_context.c (foreach_vars, initiate_foreach_vars): New.
	(start_block_foreach_vars, finish_block_foreach_vars): Ditto.
	(get_new_foreach_var, free_foreach_var, finish_foreach_vars):
	Ditto.
	(first_block_passing): Process foreach_value_designator.  Set up
	tab_place and search_start_place using get_new_foreach_var.  Free
	them using free_foreach_var.  Call start_block_foreach_vars and
	finish_block_foreach_vars.
	(get_lvalue_and_val_location): Rename to get_lvalue_location.
	Remove last argument.  Use lvar instead of lvarv and lfld instead
	of lfldv.  Remove last ind and key.
	(second_block_passing): Process foreach_value_designator.  Set up
	the right position.  Call make_designator_lvalue with FALSE.
	Calculate tab out of loop.  Don't generate pushi.  Generate
	foreach_val when necessary.  Use tab_place and search_start_place.
	(initiate_context): Call initiate_foreach_vars.
	(finish_context): Call finish_foreach_vars.
	* DINO/d_errors.[ch] (ERR_slice_as_foreach_designator): Rename to
	ERR_slice_as_foreach_index_designator.
	(ERR_slice_as_foreach_value_designator): New.
	(ERR_non_variable_in_foreach): Rename to
	ERR_non_variable_in_foreach_index.
	(ERR_non_variable_in_foreach_value): New.
	* DINO/d_eval.c (evaluate_code): Remove pushi.  Add foreach_val.
	* DINO/d_extern.sprut (find_next_key): Change last parameter.
	* DINO/d_heap.c (find_next_key): Ditto.
	* DINO/dino.tst.in: New tests for foreach-stmt.
	* DINO/compare.tst: Use foreach with value variable.

2014-03-31  Vladimir N Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Add tests for OCAML.

2014-03-28  Vladimir N Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Add new environment variables DINO_ONLY,
	SKIP_*, DO_* to control the script.  Separate PYTHON and PYPY.
	Fix failed LUA tests.

2014-03-27  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_run.sprut (max_pool_gmps_number): Remove.
	* DINO/d_bcn.shilka: Remove commented tvar.
	* DINO/d_dino.c (dino_finish): Don't print max pool long ints.
	* DINO/d_heap.c (free_gmps, max_pool_gmps_number, gmp_pool_size):
	Remove.
	(free_gmp, init_gmp, initiate_gmps, finish_gmps): Remove.
	(create_gmp): Use mpz_init.
	(initiate_heap, finish_heap): Don't call
	initiate_gmps/finish_gmps.
	(heap_allocate): Update allocs_after_GC.  Check gmp_memory_size.
	(move_or_destroy_object): Use mpz_clear.

2014-03-26  Vladimir N Makarov  <vmakarov@users.sf.net>

	* DINO/dino.tst.in: Add 2 new tests with long.
	* DINO/d_run.sprut (max_heap_size, max_heap_chunks_number): New.
	(max_pool_gmps_number): Ditto.
	* DINO/d_heap.c (free_gms, max_pool_gmps_number, gmp_pool_size):
	New.
	(free_gmp, init_gmp, initiate_gmps, finish_gmps): New.
	(create_gmp): Use init_gmp.
	(max_heap_size, max_heap_chunks_number): New.
	(new_heap_chunk): Update max_heap_size and max_heap_chunks_number.
	(initiate_heap): Call initiate_gmps.  Reset max_heap_size and
	max_heap_chunks_number.
	(finish_heap): Call finish_gmps.
	(heap_allocate): Check gmp memory size too for GC.
	(move_or_destroy_object): Use free_gmp.
	* DINO/d_func.c (min_max_call): Add long processing.
	(compare_elements): Ditto.
	(cmpv_call): Ditto.
	(array_sort_compare_function): Call implicit_int_conversion.
	(sort_call): Add long processing.
	(print_val): Print long type.
	(float_function_start, float_function_start2): Use
	implicit_float_convrsion.
	(general_rand_call, filter_function, int_earley_parse_grammar):
	Use implicit_int_conversion.
	(int_earley_set_debug_level, int_earley_set_one_parse_flag):
	Ditto.
	(int_earley_set_lookahead_level, int_earley_set_cost_flag): Ditto.
	(int_earley_set_error_recovery_flag): Ditto.
	(int_earley_set_error_recovery_match): Ditto.
	* DINO/d_dino.c (max_gmp_memory_size): New.
	(gmp_alloc, gmp_realloc): Update max_gmp_memory_size.
	(dino_finish): Print statistics for max values.
	(dino_start): Initialize max_gmp_memory_size.
	(check_vector_index): Call implicit_int_conversion.
	(non_zero_p): New.
	(evaluate_code): Use non_zero_p.  Reorgonze some code checking for
	errors.

2014-03-21  Vladimir N Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/position.h (struct _position_struct): Use const for
	path.
	* AMMUNITION/position.c (position_file_inclusion_level): Use const
	for current_psoition_ref.
	* DINO/Makefile.in: Remove d_gmp.[co] and gmp.d.  Update
	dependencies.
	* DINO/d_bc.sprut: Add emacs mode.
	(gmp_t): New type.
	(BC_mpz_ptr): New macro.
	(ldl, lof, fbend): New nodes.
	(sleave): Rename to sbend.
	* DINO/d_bcn.shilka (ldl, lof, fbend): New nodes.
	(sleave): Rename to sbend.
	* DINO/d_bcf.shilka (mpz): New field.
	* DINO/d_bcio.c (dump_code): Process new nodes.
	(enum token): Add D_LONG.
	(mpz_attr): New static.
	(get_token): Process longs.
	(read_bc_program): Process new fields and nodes. Make positions
	flat (path field).
	* DINO/d_common.h: Make sure that it processed only once.  Include
	stdio.h.
	(gmp_memory_size, mpz2a, mpz2i, i2mpz, f2mpz, hash_mpz): New
	externals.
	(it_is_int_string): Remove.
	(a2i): Add parameter.
	(enum read_number_code): New.
	(read_dino_number): New external.
	* DINO/d_context.c (first_expr_processing): Process IR_NM_long,
	IR_NM_longof, and IR_NM_long_type.
	(second_expr_processing): Ditto.
	(process_unary_op): Process IR_NM_longof.
	(ir2er_type): Process IR_NM_long_type.
	(second_block_passing): Gneerate sbend and fbend.
	(nop_p): Use sbend instead of sleave.
	(process_imcall): Use fbend instead of bend.
	* DINO/d_conv.c (form_format_string): New.
	(to_vect_string_conversion): Process long.  Use the new function.
	(vindex, vnumber, vgetc, vungetc): New.
	(implicit_arithmetic_conversion): Use read_number and the new
	functions and vars.
	(implicit_only_int_conversion): New.
	(implicit_only_long_conversion): Ditto.
	(implicit_only_float_conversion): Ditto.
	(implicit_conversion_for_binary_arithmetic_op): Use the new
	functions.
	(implicit_int_conversion): Ditto.
	(implicit_float_conversion, implicit_long_conversion): New.
	(implicit_conversion_for_binary_int_op): Use the new functions.
	(implicit_conversion_for_eq_op): Ditto.
	* DINO/d_conv.h (form_format_stringe): New.
	(implicit_float_conversion, implicit_long_conversion): Ditto.
	* DINO/d_dino.c (it_is_int_string): Remove.
	(a2i): Add base parameter.  Always use strtoll.
	(repr_vlobj, mpz2a, mpz_ok_for_int_p, mpz2i, i2mpz, f2mpz): New.
	(hash_mpz, number_text, read_number): Ditto.
	(gmp_memory_size, gmp_alloc, gmp_realloc, gmp_free): Ditto.
	(get_size_repr): Ditto.
	(dino_finish): Call finish_icode.  Delete number_text and
	repr_vlobj.  Use get_size_repr.  Print GMP memory size.
	(dino_start): Call mp_set_memory_functions.  Create number_text
	and repr_vlobj.
	* DINO/d_dino.h: Remove stdio.h.
	* DINO/d_errors.c (ERR_octal_int_value): New.
	(ERR_float_value_not_in_decimal_base): Ditto.
	(ERR_invalid_conversion_to_long_operand_type): Ditto.
	(DERR_long_is_too_big_for_conversion_to_int): Ditto.
	(DERR_conversion_to_long_operand_type): Ditto.
	* DINO/d_errors.h (ERR_octal_int_value): New.
	(ERR_float_value_not_in_decimal_base): Ditto.
	(ERR_invalid_conversion_to_long_operand_type): Ditto.
	(DERR_long_is_too_big_for_conversion_to_int): Ditto.
	(DERR_conversion_to_long_operand_type): Ditto.
	* DINO/d_eval.c (load_packed_vector_element): Process ER_NM_long.
	(store_packed_vector_element): Ditto.
	(process_slice_extract, process_slice_assign): Ditto.
	(op_i1, op_i2, op_f1, op_f2, ar_convert, int_convert): Remove.
	(long_bin_op, lbop, lfunc, lplus, lminus, lmult, lidiv, limod):
	New.
	(lcmpf, leq, lne, llt, lle, lgt, lge): New.
	(lfunc1, ilfunc1, linary_minus, lunary_plus, lnot): New.
	(execute_ar_op): Add paramter lop.  Process longs.
	(execute_plus_op, execute_minus_op, execute_mult_op): Pass
	paramter to execute_arr_op.
	(execute_div_op, execute_mod_op): Ditto.
	(execute_int_op): Don't use int_convert.
	(execute_common_eq_ne_op, execute_common_cmp_op): Process longs.
	(execute_identity_op, execute_not_op): Ditto.
	(execute_unary_ar_op): Add paramter lop.  Process longs.
	(execute_bitwise_not_op): Rearrange code.
	(execute_longof_op): New.
	(process_unary_vect_op): Pass paramter to execute_unary_arr_op.
	(execute_btcmpinc): Remove fcmp.
	(evaluate_code): Process new nodes and longs.  Remove arg in
	execute_btcmpinc calls.  Pass new argument to execute_unary_ar_op.
	Make specialized code for leave, bend, fbend.
	* DINO/d_extern.sprut: Add missed extern.
	(gmp_t): New type.
	(val_t): New member l.
	(ER_mpz_ptr): New.
	(heap_gmp, long): New nodes.
	* DINO/d_func.c (print_val): Process long.
	(F_LONG, number_file, n_getc, n_ungetc): New.
	(get_token): Use read_number and the new functions.
	(scanel): Process F_LONG.
	(general_putf_call): Use form_format_string.
	(process_fun_class_call): Evaluate code and mode later.
	* DINO/d_heap.c (initiate_int_tables): Process long.
	(del_heap_chunks): Don't modify free_heap_memory.
	(heap_allocate): Check gmp_memory_size to start GC.
	(heap_object_size): Process heap_gmp.
	(traverse_used_var, change_val, change_var): Process long.
	(traverse_used_heap_object, change_obj_refs): Process long and
	heap_gmp.
	(move_object): Rename to move_or_destroy_object.  Clear gmps.
	(GC): Add assert on free_gc_memory_percent.
	(create_gmp, copy_gmp): New.
	(hash_val, hash_key, eq_key): Process long.
	* DINO/d_ieee.c: Include stdio.h.
	* DINO/d_ir.sprut (IR_mpz_ptr, finish_icode, get_long_node): New.
	(temp_unique_long): New.
	(gmp_t): New type.
	(unique_long, long, longof, long_type): New nodes.
	(hash_func, compare_func): Process unique_long.
	(initiate_icode): Create temp_unique_long.
	* DINO/d_kw.shilka (long): New.
	* DINO/d_types.h: Include gmp.
	(gmp_t): New.
	* DINO/d_yacc.y: Add longs.
	(yylex): Use read_number.
	* DINO/dino.tst.in: Change expected error positions for numbers.
	(497): Expect also connection timed out.
	(565): Use longs instead of gmp package.
	(584): Change expected dump.
	(579): Use longs instead of gmps.
	(623): Add code for tail recursion.  Fix print for fgrep.
	(650-665): New tests.
	* configure: Update.
	* configure.in: Check __gmpz_init instead of mpz_add.
	* DINO/gmp.d, DINO/d_gmp.c: Remove.

2014-03-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/parser.c (output_switch): Use current_LR_set.
	* MSTA/msta.tst.in (test 2): Change expected error position
	output.
	* MSTA/quality.tst.in (test 41): Change expected SHILKA output.
	* DINO/socket.d: Use fun and vec instead of func and vector.
	* DINO/mpi.d: Ditto.
	* DINO/gmp.d: Ditto.
	* DINO/ipcerr.d: Ditto.  Transform tables and access to them.
	* DINO/dino.tst.in: Ditto.  Use closure, obj, and process for
	types.  Add tests for printing in REPL.
	* DINO/d_yacc.y: Use FUN, AFUN, VEC, and TAB instead of FUNC,
	AFUNC, VECTOR, and TABLE.  Use CLOSURE, OBJ, PROCESS.  Add
	priorities for TAB, CHAR, INT, FLOAT, VEC, TYPE, '(', '[', '.'.
	Remove opt_final, add fun_thread_class_start.  Make designator
	part of expr.  Change syntax for tables and its access.  Make expr
	a statement.  Remove procedure call.  Change syntax foreach-stmt,
	* DINO/d_runtab.h (CODE_ID): Fix typo.
	* DINO/d_run.sprut: Use fun instead of func.
	* DINO/d_kw.shilka (closure, obj, process): Add.
	(func, afunc, table, vector): Rename to fun, afun, tab, vec.
	* DINO/d_ir.sprut: Use fun, vec, and tab instead of func,
	afunc, vector, and table.
	(EVT_NUMBER_VEC_TAB_MASK, EVT_NUMBER_VEC_TAB_SLICE_MASK): New.
	(ENVIRONMENT): Change func to fun.  Rename fun and fgn into fuidn
	and fgrpn.
	(vec_index_designator, key_index_designator, key_index): Remove.
	(thread_type, class_type, instance_type, proc_call): Remove.
	(expr_stmt): New.
	* DINO/d_heap.c: Use efun instead of efunc and fun instead of
	func.
	* DINO/d_func.h: Use fun instead of func.
	(repl_print): New.
	* DINO/d_func.c: Ditto.
	(MAX_REPL_PRINTED_ELEMENTS): New.
	(print_val): Add parameter.  Print only MAX_REPL_PRINTED_ELEMENTS
	elements for table and vector.  Print undef.
	(repl_print): New.
	(F_TAB): New.
	(get_token): Return F_TAB too.
	(scanel): Change syntax for input table.
	* DINO/d_extern.sprut: Use fun instead of func.
	* DINO/d_eval.c: Use efun instead of efunc and fun instead of
	func.
	(store_vect_designator_value, store_tab_designator_value): Merge
	and rename to store_vect_tab_designator_value.
	(evaluate_code): Merge BC_NM_stv and BC_NM_stt into BC_NM_stvt.
	Process table too to ind, lindv.  Remove BC_NM_key and
	BC_NM_lkeyv.  Remove processing pcall, tpcall, ipcall, itpcall,
	cipcall, citpcall, tipcall, titcall, ibcall.  Check return of
	undef value.  Add processing rpr and rpr_def.
	* DINO/d_errors.[ch]: Use fun, vec, and tab instead of func,
	afunc, vector, and table.
	(ERR_vector_element_access_applied_to_slice)
	(ERR_table_element_access_applied_to_slice): Merge into
	ERR_vec_tab_element_access_applied_to_slice.
	(DERR_key_index_operation_for_non_table): Remove.
	* DINO/d_dino.c (evaluated_p): New.
	(dino_finish): Use it to guard calls of destroy, profile and trace
	print functions.
	(dino_start). Reset evaluated_p.
	(dino_main): Set it.
	* DINO/d_context.c: Use fun, vec, and tab instead of func, vector,
	and table.  Remove processing IR_NM_proc_call, IR_NM_key_index,
	IR_NM_thread_type, IR_NM_class_type, and IR_NM_instance_type and
	add processing IR_NM_expr_stmt.  Modify processing IR_NM_index to
	accept table.
	(process_imcall): Use icall, ticall, cicall instead of ipcall,
	tipcall, cipcall.
	* DINO/d_built.h: Rename fun and fgn into fuidn and fgrpn.
	* DINO/compare.tst (speed): Increase test loop to 200 iterations.
	Use fun, vec, and tab instead of func, vector, and table.  Modify
	tables and access to them including foreach loop.
	* DINO/d_bc.sprut: Use fun, vec, and tab instead of func, vector,
	and table. Rename fun and fgn into fuidn and fgrpn.
	(impcall, imfcall, stv, stt): Remove.
	(stvt): New.
	(pcall, tpcall, ibpcall, ipcall, itpcall, tipcall, titpcall)
	(cipcall, citpcall): Remove.
	(ret): Add field ret_decl.
	(rpr, rpr_def): New.
	* DINO/d_bcf.shilka (func_p, pure_func_p): Rename to fun_p,
	pure_fun_p.
	(ret_decl): Add.
	* DINO/d_bcio.c: Use fun, efun, vec, and tab instead of func,
	efunc, vector, and table.
	(dump_code): Remove processing pcall, tpcall, ibpcall, ipcall,
	itpcall, tipcall, titpcall, key, lkeyv, stv, stt.  Add processing
	stvt and ret_decl field.
	(read_bc_program): Process ret_decl field.
	* DINO/d_bcn.shilka: Use fun, efun, vec, and tab instead of func,
	efunc, vector, and table.
	(pcall, tpcall, ibpcall, ipcall, itpcall, tipcall, titpcall, key)
	(lkeyv, stv, stt): Remove.
	(stvt): Add.

2014-02-23  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/Makefile.in (ammunition.info, ammunition++.info): Use
	DINO approach.
	* AMMUNITION/errors.c (default_output_error_function): Change
	column number output.
	* AMMUNITION/errors.cpp (output_error_function): Ditto.
	* AMMUNITION/ammunition[++].sgml.in: Document it.
	* AMMUNITION/ammunition[++]-{1-13}.html: Update.
	* AMMUNITION/ammunition[++].{html,dvi,ps,pdf,txt,info): Ditto.
	* AMMUNITION/errors[++].tst.in: Ditto.
	* DINO/compare.tst: Add forward declarations or rearrange if it is
	necessary.
	* DINO/d_bc.sprut (real_block_vars_number): Return int_t.
	* DINO/d_common.h: Include stdarg.h.
	(repl_flag): New extern.
	(print_cont_prompt, print_stmt_cont_prompt): Ditto.
	(d_verror, d_error): Ditto.
	* DINO/d_context.c: Include setjmp.h.
	(include_decl): Move up.
	(context_exit_longjump_buff): New.
	(cont_err, cont_err_start, cont_err_finish): Ditto.
	(process_friend_list): Ditto.
	(possible_table_extensions): Remove.
	(check_slice): Use new error funcs.
	(first_expr_processing, first_block_passing): Ditto.  Move some
	code from second pass funcs.  Permit redeclarations.
	(second_block_passing, second_expr_processing): Remove.
	(second_block_passing, second_expr_processing): Rename to
	second_block_passing, second_expr_processing.  Add code for
	processing forward decls.  Use new error funcs.
	(test_context): Add parameter.  Modify for REPL.
	(initiate_context, finish_context): New.
	* DINO/d_context.h (initiate_context, finish_context): New
	externs.
	(test_context): Add an argument.
	* DINO/d_dino.c (dino_start): Initiate errors for immediate output
	for REPL.
	(exception_action): Do not finish for REPL.
	(COMMAND_LINE_DESCRIPTION): Change -h to -m.  New option -h.
	(repl_flag): New.
	(set_signal_actions): New.
	(REPL_PROMPT, REPL_CONT_PROMPT, ERROR_PREFIX): New.
	(print_stmt_prompt, print_stmt_cont_prompt, d_verror, d_error):
	New.
	(dino_main): Add code for REPL.  Add new initiations and
	finializations functions.  Process new -h option.  Use
	set_signale_action.
	* DINO/d_errors.c
	(ERR_forward_and_matched_decls_are_different_entities): New.
	(ERR_forward_and_matched_decls_have_different_attrs): New.
	(ERR_udenclared_ident_access_list): Remove.
	(ERR_udenclared_ident_friend_list): New.
	(ERR_contradicted_ident_access_list): Remove.
	(ERR_previous_access_location): Remove.
	(ERR_extension_before_extended): New.
	(ERR_extension_of_non_func_class_ext): New.
	(ERR_extension_of_forward_declaration): New.
	(ERR_extension_without_class_or_func): Remove.
	(yyerror): Move to d_yacc.y.
	* DINO/d_errors.h
 	(ERR_forward_and_matched_decls_are_different_entities): New.
	(ERR_forward_and_matched_decls_have_different_attrs): New.
	(ERR_udenclared_ident_access_list): Remove.
	(ERR_udenclared_ident_friend_list): New.
	(ERR_contradicted_ident_access_list): Remove.
	(ERR_previous_access_location): Remove.
	(ERR_extension_before_extended): New.
	(ERR_extension_of_non_func_class_ext): New.
	(ERR_extension_of_forward_declaration): New.
	(ERR_extension_without_class_or_func): Remove.
	* DINO/d_eval.c (find_catch_pc): Use d_error.  Modify for REPL.
	(evaluate_code): Process NULL from find_catch_pc.
	(evaluate_program): Add two parameters.  Modify to process new
	parameters and modify for REPL.
	* DINO/d_eval.h (evaluate_program): Add two parameters.
	* DINO/d_heap.c (vars_stack_size): New.
	(shrink_block_stack_size, new_block_stack_size): Use it.
	(make_cvars_undefined, setup_new_cstack): New.
	(heap_push_without_profile_update): Use setup_new_cstask.
	(previous_uppest_stack_vars_num, create_uppest_stack): New.
	(expand_uppest_stack): New.
	* DINO/d_ir.sprut (enum access_val, access_val_t): New
	(ENVIRONMENT): Remove public, private.  Add NL at the end.
	(access_ident): Remove.
	(friend_ident): New.
	(block): Remove access_list, add friend_list.
	(decl): Add access.
	(func_or_class): Add forward_decl_flag.
	(block): Remove decls_number, block_number.  Add
	temporary_vars_number, decls_flag.
	(decl): Remove public_flag, access_ident, decl_number_in_block.
	Add friend_ident.
	* DINO/d_kw.shilka (public, private): Remove.
	* DINO/d_run.sprut (create_uppest_stack, expand_uppest_stack):
	New.
	* DINO/d_yacc.h: Add positions for untyped tokens.  Use the
	positions.  Remove pos nonterminal where possible.  Add forward
	decls.  Add earlier YYABORT for errors for REPL.
	(get_read_line, skip_line_rest): New.
	(yyerror): Move from d_errors.c
	(merge_access_lists, uncycle_access_list): Remove.
	(merge_friend_lists, uncycle_friend_list): New.
	(process_var_decl): Add access parameter.
	(repl_process_flag): New.
	(public_flag, friend_flag): Remove.
	(repl_can_process_p): New.
	(assign): Use pointer attribute.  Create nodes in the assign rules.
	(access): Use access attribute.  Add rules for access.
	(program): Don't create the uppest block.
	(first_error_p): New.
	(yyerror): Move from d_errors.c.  Modify it.
	(process_header): Add parameter.  Clear forward_decl_flag.
	(lines_vec, lines, initaite_lines, read_line, get_read_line): New.
	(finish_line, first_repl_empty_line_p): New.
	(d_getc): Modify for REPL.
	(skip_line_rest): New.
	(yylex): Add code for REPL on NL.  Set up position attribute of
	the tokens.
	(initiate_scanner, finish_scanner): Add code for REPL.
	(initiate_parser, finish_parser): New.
	(initiate_new_parser_REPL_stmts): New.
	* DINO/dino.tst.in: Remove tests for redeclaration errors.  Add
	tests for forward declaration and redeclarations.  Change expected
	positions.  Add tests for REPL.
	* DINO/gmp.d: Remove private clauses.
	* DINO/ieee.d: Ditto.  Add forward decls.
	* DINO/ipcerr.d: Ditto.
	* DINO/mpi.d: Ditto.
	* DINO/socket.d; Ditto.
	* DINO/dino.{txt, ps, pdf, info, html, dvi}: Update for undefined
	values.
	* DINO/dino-{4-6,8,q0}.html: Ditto.

2014-02-09  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_bcio.c, DINO/d_bcio.h, DINO/d_bcn.shilka,
	DINO/d_bcf.shilka; New files.
	* DINO/Makefile.in: Add d_bcio.[ch], d_bcn.shilka, and
	d_bcf.shilka.  Update dependencies.
	* DINO/compare.tst: Make pretty priniting for DINO only tests.
	Add normal and slice variants for some tests.  Remove last
	iteration for Lua, Scala, and Dino.
	* DINO/d_bc.sprut: Finish node descriptions.
	(position_t, bool_t, implementation_func_t): New types.
	(ticker_t, ER_hidden_node_t): Ditto.
	(IR_hidden_node_t): Remove.
	(implementation_func_t, real_block_vars_number): Move from d_ir.sprut.
	(DESTROY_IDENT_NUMBER, first_program_bc): New.
	(EXCEPT_NAME, ..., MAP_NAME, INIT_NAME): Move from d_ir.sprut.
	Rename TRANS_NAME to TRANSLITERATE_NAME.
	(except_bc_decl, ..., map_bc_decl, init_bc_decl): New.  Use
	transliterate_bc_decl.
	(TRANSPOSE_NAME, transpose_bc_decl): New.
	(attach_info, enumerate_infoed_bcode, init_env_decl_processing): New.
	(all_env_decls_processed_p, process_env_decl, prepare_block): New.
	(ir2er_type): Move to d_context.c
	(er_type_name): Move d_run.sprut.
	(struct bc_decl_entry, bc_decls_table): Make it from decl_entry
	and decls_table of d_ir.sprut.  Add entry from transpose.  Rename
	trans into transliterate.
	(curr_decl_entry_num): New static.
	* DINO/d_built.h (trans_call): Rename to transliterate_call.
	(transpose_call): New.
	* DINO/d_common.h: Include "bits.h" and "d_types.h".
	(TAB_STOP): Move from d_yacc.y.
	(NOT_A_CHAR): Ditto.  Rename from EMPTY_PREVIOUS_CHAR.
	(input_dump_file): New.
	(bc_nodes_num): Rename from bc_insns_num.
	(max_block_level): Move to d_context.c.
	(it_is_int_string, a2i, a2f, i2a, f2a): Move from d_ir.sprut.
	(read_string): New.
	* DINO/d_context.h (test_context): Return nothing.
	* DINO/d_context.c: Include d_run.h and d_bcio.h.  Remove
	d_runtab.h.
	(curr_bc_scope, curr_info): New.
	(start_next_iteration_pc): Rename to start_next_iteration.
	(first_expr_processing): Don't call
	process_block_decl_unique_ident and
	IR_set_right_block_decl_ident_number.
	(max_block_level): New static.
	(first_block_passing): Don't call IR_set_block_number and
	IR_set_simple_block_flag.
	(second_block_passing): Don't call set_func_class_id and
	define_block_decl.  Set up it_is_declared_in_block.
	(PC, SET_PC): Remove.
	(link_info, unlink_last_info, add_to_bcode, unlink_info): New.
	(unlink_info, new_bc_node, new_bc_code): New.
	(new_bc_code_with_src): Rename from new_bc_node.  Use new
	functions.
	(process_unary_op, process_binary_op): Use the new functions.
	Setup 3 positions.
	(add_flatten_node_if_necessary): Use the new functions.
	(last_uniq_ident_num, last_decl_num, get_block_decl_ident_number):
	New.
	(get_bcode_decl): New.
	(create_bc_ident): Use the new function.
	(add_move): Ditto.  Change parameters.
	(ir2er_type): Move from d_bc.sprut.
	(get_fblock): New.
	(third_expr_processing): Add three parameters and code for condition
	translation.  Use the new functions.  Generate bcode.  Use
	negative numbers for access to top-level vars.
	(get_lvalue_and_val_location): Use the new functions.
	(add_decl_to_block): New.
	(third_block_passin): Use the new functions.
	(struct node_info, curr_traverse_check, max_traverse_check):
	Remove.
	(init_traverse_check, next_traverse_check): Ditto.
	(node_info, node_info_tab, node_info_os, curr_node_num): Ditto.
	(node_info_hash, node_info_eq, find_node_info, initiate_node_tab): Ditto.
	(finish_node_tab, traverse_bc, inc_nops, copy_bc_node): Ditto.
	(get_subst, curr_imcall, process_inlined_bc_node): Ditto.
	(inline_func_block, inline_imcall, imcall_subst, inline_bc): Ditto.
	(nop_p, mark_reachable_info): New.
	(go_through): Rewrite using bcode info.
	(process_imcall): Ditto.  Remove parameter.
	(print_indent, curr_line_number, dump_code): Move to d_bcio.c.
	(process_bc): Rewrite.  Use mark_reachable_info.
	(test_context): Return nothing.  Initiate new global/static vars.
	Don't call process_block_decl_unique_ident,
	set_environment_declarations.  Remove code for inlining and dump
	code.
	* DINO/d_dino.c: Remove d_runtab.h.  Include d_bcio.h.
	(it_is_int_string, a2i, a2f, i2a, f2a): Move from d_ir.sprut.
	(input_dump_file, read_string): New.
	(dino_finish): Call finish_read_bc.
	(error_func_for_allocate): Use get_cpos.
	(exception_action): Use bcode.
	(COMMAND_LINE_DESCRIPTION): Remove -dd.  Add -i dump.
	(bc_insns_num): Rename to bc_nodes_num.
	(int max_block_level): Remove.
	(dino_main): Process the new option.  Call initial_read_bc,
	read_bc_program, enumerate_infoed_bcode, dump_code,
	init_env_decl_processing, prepare_block, all_env_decls_processed_p
	if necessary.
	* DINO/d_errors.h (ERR_byte_code_should_start_with_label): New.
	(ERR_byte_code_should_have_name): New.
	(ERR_byte_code_field_should_have_name): New.
	(ERR_byte_code_field_should_be_followed_by_eq): New.
	(ERR_unknown_byte_code_node, ERR_unknown_byte_code_field): New.
	(ERR_wrong_byte_code_field_value, ERR_undefined_byte_code_field):
	New.
	(ERR_node_has_no_such_field): New.
	(DERR_logical_operands_types, DERR_matrix_form_type): New.
	(DERR_undefined_class_or_func, DERR_undefined_class_or_func): New.
	* DINO/d_error.c (ERR_byte_code_should_start_with_label): New.
	(ERR_byte_code_should_have_name): New.
	(ERR_byte_code_field_should_have_name): New.
	(ERR_byte_code_field_should_be_followed_by_eq): New.
	(ERR_unknown_byte_code_node, ERR_unknown_byte_code_field): New.
	(ERR_wrong_byte_code_field_value, ERR_undefined_byte_code_field):
	New.
	(ERR_node_has_no_such_field): New.
	(DERR_logical_operands_types, DERR_matrix_form_type): New.
	(DERR_undefined_class_or_func, DERR_undefined_class_or_func): New.
	* DINO/d_eval.c: Remove d_runtab.h.  Use bcode for decls.  Use
	ER_NM_code instead of ER_NM_func, ER_NM_thread, ER_NM_class.
	(process_var_ref, process_external_var_decl): Remove.
	(get_designator_pos): Use instead of get_designator.
	(store_stack_element): New.
	(store_designator_value): Use store_stack_element.
	(store_vect_designator_value, store_tab_designator_value): New.
	(store_stack_designator_value): New.
	(get_op): New.
	(extract_op1, extract_op2, extract_op3): Use get_op.
	(execute_btcmp, execute_btcmpi): Ditto.
	(evaluate_code): Implement new bcode stv, stt, sts, ste, ibcall,
	ibpcall, bend, nop.  Remove bstart, pbend, fbend, bret.
	(call_func_class): Use .process_imm_ifunc_call
	* DINO/d_extern.sprut: Use bcode instead IR nodes.
	(heap_process): Use process_block instead of thread_func.
	(code): Rename from func, thread, class.
	* DINO/d_func.c: Remove d_runtab.h.  Use bcode instead of IR.  Use
	code instead func, thread, class.
	(process_imm_func_call): Use heap_push_or_set_res.
	(transpose_call, process_imm_ifunc_call): New functions.
	* DINO/d_func.h (process_imm_ifunc_call): New.
	* DINO/d_heap.c: Remove d_runtab.h.  Use bcode instead of IR.
	(tvars): New.
	(initiate_int_tables): Use code instead func, thread, class.
	(destroy_ident_number, set_tvars): Remove.
	(mark_used_heap_objects, change_refs): Process free_stacks.
	(GC): Set up tvars.
	(update_profile): New.
	(heap_push): Use update_profile.
	(STACK_REUSE_THRESHOLD, heap_push_without_profile_update): New.
	(heap_push): Use heap_push_without_profile_update.
	(heap_push_or_set_res): New.  Use free_stacks.
	(heap_pop): Update free_stacks.  Save the result for pure
	function.
	(int_hash_val): New.
	(hash_val): Use it.
	(START_TABLE_SIZE): Make it 300 minimum.
	* DINO/d_ir.sprut: Remove d_types.h and d_built.h.
	(it_is_int_string, a2i, a2f, i2a, f2a): Move to d_dino.c.
	(implementation_func_t, real_block_vars_number): Move to
	d_bc.sprut.
	(ENVIRONMENT): Add matrixform, transpose.  Rename trans to
	transliterate.
	(EXCEPT_NAME, ..., MAP_NAME, INIT_NAME): Move to d_bc.sprut.
	(right_block_decl_ident_number, cond_common_part_pc): Remove the
	fields.
	(if_common_part_pc, simple_block_flag, block_end_pc): Ditto.
	(bc_decl): New field.
	(set_a_environment_declaration): Remove.
	(except_decl, ..., ): Remove.
	(struct decl_entry, decl_entry decls_table): Move d_bc.sprut.
	* DINO/d_run.sprut: Remove d_ir.h.  Include d_runtab.h.  Use bcode
	instead of IR.
	(tvars, get_pos, get_cpos, func_p, heap_push_or_set_res): New.
	(er_type_name): New.
	(ER_instance_p): Remove.
	* DINO/d_runtab.c: Use bcode instead of IR.
	(set_func_class_id): Rename to set_block_number.
	(process_block_decl_unique_ident): Remove.
	(process_block_decl_unique_ident): Remove.
	* DINO/d_runtab.h: Use code instead func, thread, class.
	(struct block_decl_tables): Remove idents_number.
	(process_block_decl_unique_ident): Remove.
	* DINO/d_yacc.y (EMPTY_PREVIOUS_CHAR): Remove.  Use NOT_A_CHAR
	instead.
	(get_string_code): Remove.  Use read_string_code instead.
	(TAB_STOP): Move to d_common.h.
	* DINO/dino.tst.in: New tests 637-643.  Fix expected outputs ofr
	some tests.

2013-06-29  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Add PyPy, SCALA, and JavaScript.  Increase
	factor for ackermann, heapsort, random, function, fact, matrix
	mult.  Change it for count lines.  Decrease actor for compile
	speed.
	* DINO/d_bc.sprut (op1i, op2i, op2i12, op3i, op3i2, op4i2, bcmpi)
	(impcall, imfcall, ldthis, btdef, bstart, pbend, fbend, bret):
	New.
	(condflat, bfnil): Remove.
	(ldi, ldch, ldtp, addi, eqi, nei, lti, gti, lei, gei): Use new
	nodes.
	(bteqi, btnei, btgei, btlti, btlei, btgt, slsti, rsh_slst)
	(ash_slst, and_slst, xor_slst, or_slst, out, call, tcall, pcall)
	(tpcall, icall, itcall, ticall, titcall, cicall, citcall, ipcall)
	(itpcall, tipcall, titpcall, cipcall, citpcall): Ditto.
	(ir2er_type): Return stack instead of instance.
	* DINO/d_context.c (first_expr_processing): Process this.
	(add_cond_flatten_node_if_necessary): Remove.
	(process_actuals): Don't call add_cond_flatten_node_if_necessary.
	(third_expr_processing): Process this.  Generate btdef instead of
	bfnil.  Set extended_life_context_flag.
	(max_traverse_check, init_traverse_check, next_traverse_check):
	New.
	(traverse_bc, process_imcall, inc_nops): New.
	(process_bc): Use traverse_bc.
	(copy_bc_node, get_subst, curr_imcall, process_inlined_bc_node)
	(inline_func_block): New.
	(inline_imcall, incall_subst): New.
	(inline_bc): New.
	(dump_code): Add code for new nodes and fields.
	(test_context): Make top block as extended life one.  Add code for
	inline opts and switch it off.
	* DINO/d_errors.c (ERR_this_outside_func_class_ext)
	(DERR_identity_operands_types, DERR_eq_operands_types)
	(DERR_too_few_actual_parameters, DERR_too_many_actual_parameters)
	(DERR_undefined_value_access): New.
	* DINO/d_errors.h (ERR_this_outside_func_class_ext)
	(DERR_identity_operands_types, DERR_eq_operands_types)
	(DERR_too_few_actual_parameters, DERR_too_many_actual_parameters)
	(DERR_undefined_value_access): New.
	* DINO/d_eval.c (find_context_by_scope, process_var_ref)
	(process_var_ref_and_val, ): Use the same code for class instance.
	(get_var_val_ref): New.
	(process_var_val): Use get_var_val_ref.
	(process_external_var_decl): Check undef value.
	(execute_a_period_operation): Use stack instead of instance.  Use
	the same code for class instance.  Speedup switch.
	(check_vector_index): Make do_always_inline.  Speedup switch.
	Remove case for instance.
	(store_designator_value): Use store_vector_element.  Use stack
	instead of instance.
	(process_slice_extractm, process_slice_assign): Remove instance.
	(process_slice_assign): Use stack instead of instance.
	(execute_common_eq_ne_op, execute_identity_op): Ditto.  Process
	undef.
	(execute_funcof_op, execute_classof_op): Use stack instead of
	instance.
	(evaluate_code): Add code for ldthis, btdef, bstart, pbend, fbend,
	bret.  Remove code for condflat, bfnil.  Use stack instead of
	instance.
	(eval_error): Use stack instead of instance.
	(evaluate_program): Add assert.
	* DINO/d_extern.sprut: Use stack_state_t, stack_vars, stack_size,
	eq_stack instead of instance_state_t, instance_vars,
	instance_size, eq_instance.
	(hidden_pc_t, _stack_func_class): New.
	(heap_instance, instance): Remove.
	(heap_stack): Add call_pc and saved_pc.
	(undef): New.
	* DINO/d_func.c: Use stack instead of instance.  Use undef for
	undefined func result.
	(create_instance): Rename to create_class_stack.  Use stack
	instead of instance.
	(place_file_instance): Add parameter.
	(fold_call, filter_call, map_call): Process one more parameter.
	(init_call): Pass new parameter to place_file_instance.
	(setup_pars): Check pars number.
	* DINO/d_gmp.c, DINO/d_ieee.c, DINO/d_mpi.c, DINO/d_socket.c: Use
	stack instead of instance.
	* DINO/d_heap.c: Use stack instead of instance.  Add code for
	undef.
	(_instance_vars, instance_size): Remove.
	(shrink_block_stack_size): New.
	(new_block_stack_size): Use it.
	(heap_allocate): Do GC for only 16 or more chanks.
	(shrink_stack): New.
	(stack_for_shrink_p): New.
	(tailored_heap_object_size): Use it.
	(next_heap_object): Remove assert.
	(move_object): Set up all_block_vars_num.
	* DINO/d_ir.sprut: Use stack instead of instance.
	(real_block_vars_number): Redefine.
	(ENVIRONMENT): Remove ().  Use val instead of var.
	(this): New.
	(var): Add parr_assign_flag.
	(func_or_class): Add min_actual_parameters_number.
	* DINO/d_kw.shilka: Add this and val.
	* DINO/d_run.sprut (pc_t, integer_t, string_t): Remove.
	(ER_instance_p): New.
	(heap_stack, heap_process): Remove.
	* DINO/d_yacc.y: Add new rules for this and val.
	(process_var_decl): New.
	* DINO/dino.sgml.in: Describe undef value.
	* DINO/dino.tst.in: Remove () for func/class.  Use val.  New dump
	files.  New test for actual numbers, undef values.
	* DINO/ieee.d, DINO/socket.d: Use val.

2013-04-04  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_func.c (fgetf_call): Fix the code.

2013-04-04  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Make brief output for DINO only.
	* DINO/d_context.c (third_expr_processing): Use less slots for
	icalls.
	(third_block_passing): Use less slots for ipcalls.
	* DINO/d_func.c: Remove INCREMENT_PC and ctop decreasing in all
	implementation functions.  Add arguments to call_func_class calls.
	(func_result): New.  Use it in implementaion functions.
	({fold, filter, map}_dim): New.  Use it in the corresponding
	functions.
	(process_imm_func_call): Call INCREMENT_PC and decrease ctop after
	an implementation function.
	(process_func_class_call): Ditto.
	* DINO/d_heap.c (try_heap_stack_free): Update free_heap_memory.
	(destroy_instances): Add arguments for call_func_class.
	(unpack_vector, vector_to_table_conversion): Set dimension.
	* DINO/d_eval.c (evalaute_code): Don't reset function slot for
	icalls/ipcalls.
	* DINO/d_run.sprut (call_func_class): Change prototype.
	* dino.tst.in (584, 585): Update output.

2013-03-31  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Change formating for fibonacci and tak.
	* DINO/d_bc.sprut (imcall, eqi, nei, lti, gti, lei, gei, bteqi)
	(btnei, btgei, btlti, btlei, btgti, tpcall, icall, itcall, ticall)
	(titcall, cicall, citcall, ipcall, itpcall, tipcall, titpcall)
	(cipcall, citpcall): New nodes.
	* DINO/d_context.c (process_binary_op): New parameter rev_op_mode.
	(process_actuals): Use func_decl instead of func_expr.
	(third_expr_processing): Provide new argument for
	process_binary_op.  Generate icalls for class_func_thread_call.
	(third_block_passing): Generate ipcalls for proc_call.
	(go_through): Generate bt<cmp>i.
	(process_bc): Generate immediate tail proc calls.
	(dump_code): Print all new nodes.
	* DINO/d_eval.c (execute_btcmpi, execute_cmpi): New functions.
	(evaluate_code): Process nodes.
	(call_func_class): Don't change ctop.
	* DINO/d_extern.sprut (context_heap_obj): New field
	all_block_vars_num.
	* DINO/d_func.c (create_instance): Add parameter.  Use setup_pars.
	Don't change ctop.
	(place_file_instance): Add argument to create_instance.
	(reset_vars, setup_pars, process_func_call)
	(process_imm_func_call): New functions.
	(process_func_class_call): Add parameter.  Use process_func_call.
	Change ctop fro external and implementation functions.  New
	argument for create_instance.
	(tree_to_heap): New argument for create_instance.
	* DINO/d_func.h (process_imm_func_call): New prototype.
	(process_func_class_call): Change signature.
	* DINO/d_heap.c (block_stack_size): Rename to
	new_block_stack_size.
	(block_stack_size): New function.
	(heap_push): Use new_block_stack_size instead of block_stack_size.
	Set all_block_vars_num.  New negative treatment of offset.
	* DINO/dino.1: Fix description of -t.
	* DINO/dino.tst.in (580, 581, 584, 585, 615-620): Change output.
	(622-625): New tests.

2013-03-22  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/Makefile.in, MSTA/Makefile.in, NONA/Makefile.in,
	OKA/Makefile.in, SHILKA/Makefile.in, SPRUT/Makefile.in: Use
	-iquote.  Update dependecies.
	* DINO/d_bc.sprut: New file.
	* DINO/Makefile.in: Ditto.
	(objects): Add d_bc.o.
	(source): Add d_bc.sprut.
	(d_bc.c, d_bc.h): New dependency.
	(d_run.[ch], d_extern.[ch]): Use -flat-structure.
	(depend): Add d_bc.[ch].
	* DINO/compare.tst: Add tests for python3, lua, ruby.
	* DINO/d_built.h (fold_call, filter_call, map_call): New
	externals.
	* DINO/d_common.h (bc_insns_num): New external.
	* DINO/d_context.c: Include d_bc.h.
	(for_finish): Change type.
	(first_expr_processing): Change minus with constant onto plus with
	constant.
	(first_block_passing): Ditto for minus_assign.
	(second_block_passing): Use set_func_class_id instead of
	set_func_class_no.
	(ADD_TEMP_VARS_NUMBER): Define as 0.
	(PC): New Macro.
	(SET_PC): Redefine.
	(new_bc_node): New function.
	(process_unary_op, process_binary_op)
	(add_flatten_node_if_necessary)
	(add_cond_flatten_node_if_necessary): Generate byte code.
	(bc_decl_mode, create_bc_ident, add_move): New functions.
	(process_actuals, third_expr_processing): Generate byte code.
	Generate addi.
	(make_designator, make_op_mode): Return byte code mode.
	(make_slice_assign_mode): Ditto.  Rename to slice_assign_mode.
	(add_local_var_occurrence): Rename.
	(get_lvalue_and_val_location): Generate byte code.
	(all_funcs_and_classes): New.
	(third_block_passing): Generate byte code.  Generate addi.  Set
	all_funcs_and_classes.
	(struct node_info): Remove traverse_flag.  Add traverse_check,
	subst.  Change type of n.
	(find_node_info): Clear up all new fields.
	(curr_traverse_check): New.
	(initiate_node_tab): Use bc_insns_num for htab size.
	(fourth_block_passing): Remove.
	(go_through): Work on byte code. Make combining and unecessary
	nodes removing.
	(process_bc): New.
	(dump_code): Print byte code.
	(test_context): Initiate and finalize all_funcs_and_classes.  Call
	process_bc.  Update curr_travers_check.  Return byte code.
	* DINO/d_conv.c (to_vect_string_conversion): Change signature.
	(implicit_arithmetic_conversion, implicit_int_conversion): Ditto.
	(implicit_eq_conversion): Ditto.
	(implicit_conversion_for_binary_arithmetic_op)
	(implicit_conversion_for_binary_int_op)
	(implicit_conversion_for_eq_op): Use static temp vars.
	* DINO/d_conv.h (to_vect_string_conversion): Change signature.
	(implicit_arithmetic_conversion, implicit_int_conversion): Ditto.
	* DINO/d_dino.c (dino_finish): Print byte code size.
	(dino_fatal_finish, exception_action): Use BC_pos.
	(bc_insns_num): Declare.
	* DINO/d_errors.c (DERR_slice_start_is_not_int): Fix typo.
	* DINO/d_eval.c: Work on byte code.  Use {func,thread,class}_id
	istead of ..._no.  Use BC_pos instead of IR_pos.  Use new versions
	of conv functions.
	(process_var_ref, process_var_ref_and_val)
	(process_var_val): Use ident instead of decl.
	(process_external_var_decl): New.
	(process_external_var): Use process_external_var_decl.
	(get_designator): Change signature.
	(execute_a_period_operation): Use process_external_var_decl
	instead of process_external_var.
	(store_designator_value): Remove last parameter.
	(INTERRUPT_CHECK): Move here.
	(extract_op{1,2,3}): New.
	(execute_btcmpinc, execute_btcmp): New.
	(evaluate_code): Add zero and 255 case for better switch
	generation.
	(eval_error): Use parameter instead of ctop.
	* DINO/d_extern.sprut (irid_t): New type.
	(vect): Put dim first.
	(func, thread, class): Use ...id instead of ...no.
	* DINO/d_func.c: Use BC_pos instead of IR_pos.  Use new signature
	for conversion functions.  Use FUNC_CLASS_ID and ID_TO_FUNC_CLASS
	instead of FUNC_CLASS_NO and NO_TO_FUNC_CLASS.
	(dino_compare_func_context): New.
	(array_sort_compare_function): Use it.
	(sort_call): Set it up.  Set/restore no_gc_p.
	(fold_vect_el_type, fold_el_func, fold_initval, fold_function)
	(process_fold_vect_op, fold_call): New.
	(filter_vect_el_type, filter_el_func, filter_function)
	(process_filter_vect_op, filter_call): New.
	(map_vect_el_type, map_el_func, map_function)
	(process_map_vect_op, map_call): New.
	(process_func_class_call): Process tail calls.
	* DINO/d_func.h (process_func_class_call): Add parameter.
	* DINO/d_heap.c (initiate_int_tables, traverse_used_heap_object)
	(change_var, change_obj_refs): Use flat structures.
	(change_refs): Ditto.  Process temp refs.
	(in_heap_temp_refs, no_gc_p): New.
	(initiate_heap): Create temp refs.  Reset no_gc_p.
	(tvar_num1, tvar_num2): Remove.
	(set_tvars): Do nothing.
	(final_call_destroy_functions): Use BC_next instead of IR_next_pc.
	(finish_heap): Finish temp refs.
	(mark_used_heap_objects, define_new_heap_object): Traverse temp refs.
	(move_object): Process temp refs.
	(destroy_instances): Use func_id.
	(GC): Check no_gc_p.
	(heap_pop): Use BC_next instead of IR_next_pc.  Use id instead of
	no.
	(eq_key): Use id instead of no.
	(vector_to_table_conversion): Don;t use tvar.
	(activate_process): Use BC_pos.
	* DINO/d_ir.sprut (BC_hidden_node_t): New type.
	(occurrence_mode, create_occurrence_node, temp_var_occurrence)
	(IR_PTR, pc_t, PC): Remove.
	(func parse): Change expression for reservation of temp vars.
	(func fold, filter, map): Add.
	(FOLD_NAME, fold_decl, FILTER_NAME, filter_decl, MAP_NAME)
	(map_decl): New.
	(generic_pos): Remove next_pc, traverse_flag.
	(ident): Add decl.
	(component_designator): Remove designator_result_num,
	designator_op_num.
	(index_designator): Remove component_op_num.
	(int, float, char, string, type, flatten): Remove
	{int,float,char,string,type}_result_num and flatten_vect_num.
	(operation, binary_operation, unary_operation): Remove result_num,
	left_op_num, right_op_num, op_num.
	(lvalue_index, lvalue_index_and_val, lvalue_key_index)
	(lvalue_key_index_and_val, lvalue_slice, lvalue_slice_and_val)
	(lvalue_period, lvalue_period_and_val, logical_end)
	(logical_or_end, logical_and_end, cond_end, par_assign_end)
	(par_assign_test): Remove.
	(logical_binary_operation, cond, nil): Remove short_path_pc,
	false_path_pc, cond_common_path_pc, cond_op_num, nil_result_num.
	(vector_table): Remove vec_tab_result_num, vec_tab_el_num.
	(class_func_thread_call): Remove func_call_start_num.
	(assign_stmt): Remove container_num, index_num, lvalue_val_num,
	expr_num.
	(slice_assign_stmt, slice_assign, mult_slice_assign)
	(div_slice_assign, mod_slice_assign, plus_slice_assign)
	(minus_slice_assign, concat_slice_assign, lshift_slice_assign)
	(rshift_slice_assign, ashift_slice_assign, and_slice_assign)
	(xor_slice_assign, or_slice_assign): Remove.
	(proc_call, if_stmt, for_stmt): Remove proc_call_start_num,
	else_part_pc, if_common_part_pc, if_cond_num. for_body_pc,
	for_guard_num.
	(foreach_stmt): Remove foreach_body_pc, foreach_tab_num,
	foreach_container_num, foreach_index_num, foreach_lvalue_val_num.
	(for_break_contintue, return_with_result, throw): Remove
	number_of_surrounding_blocks, return_expr_num, throw_expr_num.
	(wait_stmt): Remve start_wait_guard_expr_pc and if_common_part_pc.
	(block): Add bc_block, block_end_pc.
	(exception): Remove next_catch_list_pc, except_instance_num,
	except_class_num.
	(occurrence, external_var_occurrence, local_var_occurrence)
	(var_occurrence lvalue_external_var_occurrence)
	(lvalue_external_var_occurrence_and_val, lvalue_var_occurrence)
	(lvalue_var_occurrence_and_val, external_func_occurrence)
	(func_occurrence, class_occurrence, if_finish, for_finish)
	(wait_finish, foreach_start, foreach_next_iteration, block_finish)
	(catches_finish): Remove.
	(char, int, float, string): Remove {ch,i,f,str}_val.
	(decls_table): Add entries for fold, filter, map decls.
	* DINO/d_kw.shilka (aclass, afunc, athread): New keywords.
	* DINO/d_run.sprut: Include "d_bc.h" in import section.
	(integer_t, string_t): New types.
	(INCREMENT_PC): Redefine.
	(CREATE_TEMP_REF, FINISH_TEMP_REF, EMPTY_TEMP_REF, PUSH_TEMP_REF)
	(POP_TEMP_REF, GET_TEMP_REF, TEMP_REFS_LENGTH, no_gc_p)
	(heap_temp_refs): New.
	(INTERRUPT_CHECK): Move to d_eval.c
	* DINO/d_runtab.h (FUNC_CLASS_NO, NO_TO_FUNC_CLASS)
	(set_func_class_no): Rename to FUNC_CLASS_ID, ID_TO_FUNC_CLASS,
	set_func_class_id.
	* DINO/d_runtab.c (set_func_class_no, curr_func_class_no): Rename
	to set_func_class_id, curr_func_class_id.
	* DINO/d_yacc.y: Add anonymous funcs, threads, classes.
	(process_header, process_formal_parameters, process_header_block)
	(merge_additional_stmts, get_new_ident): New functions.
	* DINO/dino.tst.in (568): Use tr instead of map.
	(584, 585): New dump output.
	(605-621): New tests.

2013-01-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/IEEE.c (binary_string_to_float): Additional
	parentheses.
	* DINO/compare.tst: Copyright 2013.
	(test 1): Increase rep for fastest processor.
	(test 2): Ditto. Use slices.
	(test 20, test 30): Ditto.
	(test 26, test 31):  Increase rep for fastest processor.
	* DINO/d_common.h: Copyright 2013.
	(__always__, do_inline, do_always_inline): New macros.
	(ATTRIBUTE_UNUSED): New macro.
	* DINO/d_context.c: Copyright 2013.  Use d_assert instead of
	assert.  Rename rem_assign to mod_assign.  Use do_inline instead
	of inline.  Use d_unreachable.
	(check_slice): New function.
	(first_expr_processing): Use check_slice.  Add cases for folding
	operations and slice.
	(include_decl): Check NULL file_name.
	(first_block_passing): Use check_slice.
	(second_block_passing): Check slice in foreach stmt.
	(surrounding_class): Remove.
	(value_type): Simplify.
	(bin_slice_p, unary_slice_p): New functions.
	(process_actuals, add_flatten_node_if_necessary): Ditto.
	(third_expr_processing): Set value type for char, int, float,
	string, nil, func occurrence, class occurrence, and type nodes.
	Add a special decl for undeclared ident.  Set
	extended_life_context_flag for curr_real_scope.  Permit slice
	operands for the operands and set slice type for result when it is
	necessary.  Add code for fold operations and slices.  Use
	process_actuals.
	(make_designator_lvalue): Add code for slices.
	(make_slice_assign_mode, surrounding_func_block): New functions.
	(third_block_passing): Process slices for assignment nodes.  Add
	flatten nodes if necessary.  Use process_actuals.
	(dump_code): Add code for fold operations, slices, slice
	assignments, and flatten nodes.
	* DINO/d_conv.c: Copyright 2013.  Use d_assert instead of assert.
	Use do_inline instead of inline.
	(to_vect_string_conversion): Use set_vect_dim.
	(implicit_eq_conversion): Adittional parentheses.
	* DINO/d_dino.c: Copyright 2013.  Use d_assert instead of assert.
	Use d_unreachable.
	* DINO/d_dino.h: Copyright 2013.
	(d_assert, d_unreachable): New macros.
	* DINO/d_errors.[ch]: Copyright 2013.
	(ERR_period_ident_applied_to_slice): New.
	(ERR_vector_element_access_applied_to_slice): New.
	(ERR_table_element_access_applied_to_slice): New.
	(ERR_call_applied_to_slice, ERR_slice_as_foreach_designator): New.
	(ERR_invalid_fold_arithmetic_operation_operand_type): New.
	(ERR_invalid_slice_start_type, ERR_invalid_slice_bound_type): New.
	(ERR_invalid_slice_step_type): New.
	(DERR_slice_start_is_not_int, DERR_slice_bound_is_not_int): New.
	(DERR_slice_step_is_not_int): New.
	(DERR_different_slice_operand_lengths): New.
	(DERR_slice_operand_form, DERR_different_vec_operand_lengths):
	New.
	(DERR_vector_form_type): New.
	* DINO/d_eval.c: Copyright 2013.  Use d_assert instead of assert.
	Rename rem_assign to mod_assign.  Use do_inline instead of inline.
	Use d_unreachable.
	(load_packed_vector_element): New.
	(load_vector_element_by_index): Use load_packed_vector_element.
	(store_packed_vector_element): New.
	(store_vector_element): Use store_packed_vector_element.
	(load_given_designator_value): Remove.
	(check_and_get_slice_info): New.
	(process_slice_extract, slice_extract, process_slice_assign): New.
	(slice_assign): New.
	(op_i1, op_i2, op_f1, op_f2): New variables.
	(ar_convert, int_convert, int_bin_op, float_bin_op, vect_bin_op):
	New.
	(ifunc, ffunc, icmpf, fcmpf): New macros.
	(iplus, iminus, imult, idiv, imod, iand, ixor, ior, ilshift): New.
	(irshift, iashift, ieq, ine, ilt, ile, igt, ige, iplus, fminus): New.
	(fmult, fdiv, frem, feq, fne, flt, fle, fgt, fge): New.
	(ifunc1, ffunc1, iffunc1): New macros.
	(iunary_plus, iunary_minus, funary_plus, funary_minus, inot): New.
	(fnot, ibitwise_not): New.
	(execute_ar_op, execute_plus_op, execute_minus_op): New.
	(execute_mult_op, execute_div_op, execute_mod_op, execute_int_op): New.
	(execute_lshift_op, execute_rshift_op, execute_ashift_op): New.
	(execute_and_op, execute_xor_op, execute_or_op): New.
	(execute_concat_op): Move.  Add parameter and code for vector
	oeprations.
	(execute_in_op, execute_common_eq_ne_op, comp_op, execute_eq_op): New.
	(execute_ne_op, execute_common_cmp_op, execute_lt_op): New.
	(execute_ge_op, execute_gt_op, execute_le_op, execute_identity_op): New.
	(execute_unary_ar_op, execute_not_op, execute_bitwise_not_op): New.
	(execute_length_op, execute_new_op, execute_const_op): New.
	(execute_typeof_op, execute_charof_op, execute_intof_op): New.
	(execute_floatof_op, execute_vectorof_op, execute_tableof_op): New.
	(execute_funcof_op, execute_threadof_op, execute_classof_op): New.
	(get_left_operand, get_right_operand, int_pack_vect_op): New.
	(float_pack_vect_op, char_pack_vect_cmp_op, int_pack_vect_cmp_op): New.
	(float_pack_vect_cmp_op, process_binary_vect_op, get_dim): New.
	(binary_vect_op, int_pack_vect_unary_op, float_pack_vect_unary_op): New.
	(process_unary_vect_op, unary_vect_op, execute_pack_fold_op): New.
	(process_fold_vect_op, fold_vect_op): New.
	(evaluate_code): Add code for flatten node, fold vector
	operations, slice operations, and slice assignments.  Use new
	functions.
	(initiate_vars, eval_error): Use set_vect_dim.
	(profile_compare_function): Use ATTRIBUTE_UNUSED for time1 and
	time2.
	* DINO/d_extern.sprut: Include <string.h> and <assert.h>.
	Copyright 2013.  Use d_assert instead of assert.  Rename
	rem_assign to mod_assign.  Add mode for emacs.
	(d_assert, __always__, do_always_inline): New macros.
	(set_vect_dim, set_packed_vect_el): New.
	(vect): Put dim after vect field.  Use heap_vect type.
	(tab): Use heap_tab.
	* DINO/d_func.c: Copyright 2013.  Use d_assert instead of assert.
	Use d_unreachable.  Use do_inline for inline functions.
	(to_lower_upper, trans_call, match_call, gmatch_call): Use set_vect_dim.
	(generall_sub_call): Ditto.
	(split_call): Ditto.  Use set_packed_vect_el.
	(subv_call, del_call, general_ins_call, rev_call, sort_call): Use set_vect_dim.
	(getcwd_call, finish_output): Ditto.
	(general_get_ln_file_call): Ditto.  Use set_packed_vect_el.
	(scanel, getgroups_call): Use set_vect_dim.
	(readdir_call): Ditto.  Use set_packed_vect_el.
	(fun_call, mode_finish, strtime_call, create_instance): Use
	set_vect_dim.
	(tree_to_heap): Ditto.
	* DINO/d_gmp.c: Remove assert.h.  Copyright 2013.  Use d_assert
	instead of assert.
	(_z_get_str): Use set_vect_dim.
	* DINO/d_heap.c: Copyright 2013.  Use d_assert instead of assert.
	Use d_unreachable.  Use do_inline or do_always_inline for inline
	functions.
	(type_size): Remove.  Use type_size_table instead.
	(change_val): Case for external_var_ref.
	* DINO/d_ieee.c: Remove assert.h.  Copyright 2013.  Use d_assert
	instead of assert.
	(ieee_single_to_binary_string, ieee_single_to_string): Use
	set_vect_dim.
	(ieee_double_to_binary_string, ieee_double_to_string): Ditto.
	(ieee_quad_to_binary_string, ieee_quad_to_string): Ditto.
	* DINO/d_ipcerr.c: Remove assert.h.  Copyright 2013.  Use d_assert
	instead of assert.
	(set_ipc_os_error): Remove.
	(set_ipc_err_vars): Use set_vect_dim.
	* DINO/d_ir.sprut: Copyright 2013.  Use d_assert instead of
	assert.  Use d_unreachable.  Use do_always_inline for inline
	functions.  Add mode for emacs.
	(enum expr_value_type): Add EVT_SLICE.
	(EVT_INT_VECTOR_MASK, EVT_VECTOR_SLICE_MASK): New.
	(EVT_TABLE_SLICE_MASK): New.
	(EVT_NUMBER_VECTOR_SLICE_MASK): New.
	(EVT_NUMBER_VECTOR_TABLE_SLICE_MASK): New.
	(ENVIRONMENT): Add definitions of invslice, slicetype, sliceform,
	invector, veclen, vecform, invslices, invectors.
	(INVSLICE_NAME, SLICETYPE_NAME, SLICEFORM_NAME, INVECTOR_NAME):
	New macros.
	(VECLEN_NAME, VECFORM_NAME, INVSLICES_NAME, INVECTORS_NAME): Ditto.
	(invslice_decl, slicetype_decl, sliceform_decl, invector_decl):
	New definitions.
	(veclen_decl, vecform_decl, invslices_decl, invectors_decl):
	Ditto.
	(fold_plus, fold_mult, fold_and, fold_xor, fold_or, slice): New
	nodes.
	(rem_assign): Rename to mod_assign.
	(flatten, lvalue_slice, lvalue_slice_and_val, slice_assign_stmt):
	New.
	(slice_assign, mult_slice_assign, div_slice_assign): New.
	(mod_slice_assign, plus_slice_assign, minus_slice_assign): New.
	(concat_slice_assign, lshift_slice_assign, rshift_slice_assign): New.
	(ashift_slice_assign, and_slice_assign, xor_slice_assign): New.
	(or_slice_assign): New.
	(decls_table): Add entries invslice, slicetype, sliceform,
	invector, veclen, vecform, invslices, invectors.
	* DINO/d_mpi.c: Remove assert.h.  Copyright 2013.  Use d_assert
	instead of assert.
	(to_based_string): Use set_vect_dim.
	* DINO/d_run.sprut: Copyright 2013.  Add mode for emacs.
	(type_size_table, val_displ_table): Remove.
	* DINO/d_runtab.c: Copyright 2013.  Use d_assert instead of
	assert.
	* DINO/d_socket.c: Remove assert.h.  Add ctype.h and unistd.h.
	Copyright 2013.  Use d_assert instead of assert.
	(_gethostinfo, form_servent): Use set_vect_dim.  Use
	set_packed_vect_el.
	(_recvfrom, _accept): Use set_vect_dim.
	* DINO/d_yacc.h: Copyright 2013.
	(yyparse): Change prototype.
	* DINO/d_yacc.y: Copyright 2013.  Use d_assert instead of assert.
	(REM_ASSIGN): Rename to MOD_ASSIGN.
	(FOLD_PLUS FOLD_MULT FOLD_AND FOLD_XOR FOLD_OR): New tokens.  Set
	priority.
	(expr): New rules for fold operations.
	(designator): New rules for slices.
	(opt_step): New nonterminal and rules for it.
	(yylex): Return tokens for folding operations.
	* DINO/dino.tst.in: Copyright 2013.
	(265, 285): Modify line in error.
	(584, 585): Modify debug output.
	(586 - 604): New tests.

2012-12-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* Makefile.in (all): Use macro MAKE.  Build all REGEX.
	* configure.in: Comment code for no_shlib and
	AC_CONFIG_SUBDIRS(REGEX).  Add macros from REGEX/configure.in.
	Add REGEX/Makefile REGEX/doc/Makefile REGEX/test/Makefile to
	output files.  Use CC for MAKELIB.  Add prefix d_ for libraries in
	DINO_ADDITIONAL_LIBS.
	* configure: Update.
	* AMMUNITION/cocom-config.h: Update.
	* DINO/d_eval.c (FIND_CONTEXT_BY_SCOPE): Remove.
	(find_context_by_scope): Use only one variant.  Insert code from
	FIND_CONTEXT_BY_SCOPE.
	(EXECUTE_AR_OP, EXECUTE_INT_OP): Remove.
	(i1, i2, f1, f2, ar_convert, int_convert): New.
	(evaluate_code): Move assign case first.  Use new functions and variables.
	* REGEX/Makefile.in (config.h): New entry.
	(all): Add to all.
	* REGEX/doc/Makefile.in (regex.texi): fix paths with srcdir.

2012-11-28  Vladimir Makarov  <vmakarov@users.sf.net>

	* CHANGES: Add changes in DINO (swap, faster interpriter).
	* gmp.c, mpi.c, ieee_int.c, ipcerr_int.c, socket_int.c: Rename to
	d_gmp.c, d_mpi.c, d_ieee.c, d_ipcerr.c, d_socket.c.
	* DINO/Makefile.in (gmp.c, gmp.so, mpi.c, mpi.so): Rename to
	d_gmp.c, d_gmp.so, d_mpi.c, d_mpi.so.
	(ieee_int.c, ieee.so, ipcerr_int.c, ipcerr.so): Rename to
	d_ieee.c, d_ieee.so, d_ipcerr.c, and d_ipcerr.so
	(socket_int.c, socket.so): Rename to d_socket.c and d_socket.so.
	* DINO/compare.tst: Remove refactor.  Add tests for Python3, Lua,
	and Ruby.  Improve Dino code for sieve.
	* DINO/d_ir.sprut (logical_end): New abstract node.
	(logical_or_end, logical_and_end): Inherit logical end.
	* DINO/dino.tst.in: Use new names for .so files.

2012-11-22  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/Makefile.in (dino.txt, dino.html, dino.info, dino.pdf):
	Make dependence on dino.sgml.tmp only.
	(dino.info): Remove sgml-info and sgml-postinfo.
	(dino.sgml.tmp): Remove escape sequences.
	* DINO/d_context.c (first_block_passing, second_block_passing)
	(third_block_passing, dump_code):  Remove swap.
	(evaluate_code): Ditto.  Move code for string and nil.
	* DINO/d_ir.sprut (swap): Remove.
	* DINO/d_yacc.y: Ditto.
	* DINO/dino.1: Fix typo.  Remove dlls.
	* DINO/dino.sgml.in: Remove swap.
	* DINO/dino.txt, DINO/dino*.html,
	DINO/dino.dvi, DINO/dino.info, DINO/dino.pdf, DINO/dino.ps:
	Update.
	* DINO/dino.tst.in: Changes swaps.

2012-11-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/Makefile.in: Make entry for each test file run.
	* AMMUNITION/*.tst.in: Generate uniq files.

2012-11-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_heap.c (expand_vector): Rewrite.  Don't expand when disp
	makes expansion possible.

2012-11-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in: Setup compiler flags for non-empty cocom_debug.
	Don't change -O2 to -Ofast for non-empty cocom_debug.
	* configure: Update.
	* DINO/d_run.sput (ER_CTOP, SET_TOP): Remove.
	(TOP_UP, TOP_DOWN): Simplify.
	* DINO/d_heap.c: Remove SET_TOP.  Change ER_CTOP by ctop.
	* DINO/d_func.c: Ditto.
	* DINO/d_eval.c: Ditto.
	(evaluate_code): Remove INTERRUPT_CHECK for return nodes.
	* DINO/d_conv.c (implicit_conversion_for_binary_arithmetic_op):
	Rename flags.  Update float flags.
	* DINO/d_context.c (dump_code): Print block node.
	* DINO/gmp.c (_z_clear): Fix typo.
	(_z_set_str): Remove var and code dealing with that.
	* DINO/dino.tst.in: Fix output for test 584.

2012-11-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_run.sprut (temp_ref, heap_temp_refs, TEMP_REFS_LENGTH):
	Remove.
	(CREATE_TEMP_REF, FINISH_TEMP_REF, EMPTY_TEMP_REF): Ditto.
	(PUSH_TEMP_REF, POP_TEMP_REF, GET_TEMP_REF, TEMP_REFS_LENGTH):
	Ditto.
	* DINO/d_heap.c (temp_ref, in_heap_temp_refs): Remove.
	(initiate_heap, mark_used_heap_objects, define_new_heap_object):
	Do not use temp refs.
	(change_refs, destroy_instances, move_object, heap_push): Ditto.
	(expand_vector, unpack_vector, copy_vector, expand_tab, copy_tab): Ditto.
	(table_to_vector_conversion, vector_to_table_conversion): Ditto.
	* DINO/d_func.c (keys_call, match_call, general_sub_call): Ditto.
	(split_call, subv_call, general_ins_call): Ditto.
	(array_sort_compare_function, sort_call): Ditto.  Use stack for
	context.
	(scanel, readdir_call, create_instance, process_func_class_call):
	Do not use temp refs.
	* DINO/d_eval.c (find_catch_pc, execute_concat_op, evaluate_code)
	(initiate_vars, eval_error): Ditto.

2012-11-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/earley.c (make_parse): Check stack on emptiness.
	* DINO/d_dino.c: New flags -d and -dd.
	(dino_main): Set up dump_flag.
	* DINO/d_extern.sprut (ER_type_t, node_mode_2_type): Remove.
	(INDEXED_VAL): Rename to IVAL.
	(DECR_CTOP): Define only optimized version.
	(type): Use ER_node_mode_t instead of ER_type_t.
	(thread): New node.
	* DINO/d_func.h (internal_inside_call): Change signature.
	* DINO/d_func.c: Use IVAL instead of INDEXED_VAL.  Add parameter
	to to_vect_string_conversion, implicit_int_conversion, and
	implicit_arithmetic_conversion calls.  Don't use node_mode_2_type.
	(below_ctop): Define.
	(context_call): Process thread node.
	(internal_inside_call): Ditto.  Add 2 parameters.
	(inside_call): Add parameters to call of internal_inside_call.
	(array_sort_compare_function): Remove TOP_UP.
	(sort_call, general_get_ln_file_call, call_external_func): Do not
	set up no_gc_flag.
	(print_val): Process thread node.  Use node_mode instead of type.
	(process_func_class_call): Process thread node.  Remove
	non-optimized code.  Change code dealing with stack top.
	(init_syntax_token, tree_to_heap): Change code dealing with stack
	top.
	(int_earley_parse): Do not set up no_gc_flag.
	* DINO/d_conv.c: Use IVAL instead of INDEXED_VAL.  Don't setup
	no_gc_flag.
	(to_vect_string_conversion): Change signature.
	(implicit_arithmetic_conversion): Ditto.
	(implicit_conversion_for_binary_arithmetic_op): Ditto.
	(implicit_int_conversion, implicit_conversion_for_binary_int_op): Ditto.
	(implicit_eq_conversion, implicit_conversion_for_eq_op): Ditto.
	* DINO/d_conv.h (to_vect_string_conversion): Change signature.
	(implicit_arithmetic_conversion): Ditto.
	(implicit_conversion_for_binary_arithmetic_op): Ditto.
	(implicit_int_conversion, implicit_conversion_for_binary_int_op): Ditto.
	(implicit_conversion_for_eq_op): Ditto.
	* DINO/d_eval.c: Rewrite code for operand based IR.
	* DINO/d_context.c: Rewrite for new IR.  Add code dump.
	* DINO/d_heap.c (cvars): New.
	(initiate_int_tables): Process thread node.
	(node_mode_2_type, no_gc_flag): Remove.
	(GC_executed_stmts_count): New.
	(initiate_heap): Reset it.
	(tvar_num1, tvar_num2, set_tvars): New.
	(final_call_destroy_functions): Set cvars.  Call set_tvars.
	Remove non-optimized code.
	(heap_allocate): Don't call gc.  Setup GC_executed_stmts_count.
	(traverse_used_var, change_val, change_var, change_obj_refs):
	Process thread node.
	(destroy_instances): Remove no_gc_flag code.
	(gc): Rename to GC.  Set cvars.  Call set_tvars.
	Reset GC_executed_stmts_count.
	(heap_push, heap_pop, activate_given_process): Set cvars.  Call
	set_tvars.  Remove non-optimized code.
	(hash_val, hash_key, eq_key): Process thread node.
	(find_tab_entry): Don't use stack.
	(initiate_processes): Decrease process_quantum.
	(interrupt): New.
	* DINO/d_ir.sprut (IR_POINTER): Rename to IR_PTR.
	(parse): Make more temps.
	(generic_pos): New traverse_flag.
	(logical_binary_operation): Inherit from unary_operation.
	(cond): Inherit from expr.  New cond_expr, true_expr, false_expr.
	Remove cond and false_path_pc.
	(format_vectorof): Inherit from binary_operation.
	(index_designator, vec_index_designator, key_index_designator):
	New nodes.
	(index): Inherit from vec_index_designator.
	(key_index): Inherit from key_index_designator.
	(procedure_call): Rename to proc_call.
	(component_designator, index_designator): Add new members for op
	and result nums.
	(int, float, char, string, type, nil): Add new members for result
	num.
	(no_testing_period): Remove.
	(operation): Add new members for result num.
	(binary_operation, unary_operation): Add new members for op nums.
	(lvalue_index, lvalue_index_and_val): Inherit from
	vec_index_designator.
	(lvalue_key_index, lvalue_key_index_and_val): Inherit from
	key_index_designator.
	(lvalue_period, lvalue_period_and_val): Inherit from
	period_designator.
	(logical_or_end, logical_and_end): New nodes.
	(cond):
	(par_assign_test): Ditto.
	(vector_table, class_func_thread_call, assign_stmt, swap): Add new
	members for op nums.
	(proc_call, if_stmt, for_stmt, foreach_stmt, return_with_result):
	Ditto.
	(throw, wait_stmt, block, exception, occurrence): Ditto.
	(local_var_occurrence): New.
	(local_lvalue_var_occurrence): Remove.
	(local_lvalue_var_occurrence_and_val, pop_func_call): Remove.
	* DINO/d_run.sprut (cvars, tvar_num1, tvar_num2): New.
	(below_ctop, no_gc_flag): Remove.
	(GC_executed_stmts_count, interrupt): New.
	(gc): Rename to GC.
	(QUANTUM_SWITCH_PROCESS): Rename to INTERRUPT_CHECK and rewrite it
	using interrupt.
	* DINO/d_runtab.c (block_decl_idents_tables): Rename to
	block_decl_tables.
	* DINO/d_runtab.h (block_decl_idents_tables): Ditto.
	(struct block_decl_idents_tables): Rename block_decls to
	block_ident_decls.
	* DINO/d_yacc.y: Use new member names of IR nodes.
	* DINO/dino.tst.in (test 62): Change func to thread in expected
	output.
	(test 584, test 585): New tests for dump.
	* DINO/gmp.c: Use IVAL instead of INDEXED_VAL.
	* DINO/ieee_int.c: Ditto.
	* DINO/mpi.c: Ditto.
	* DINO/socket_int.c: Ditto.

2012-09-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_ir.sprut (access_ident): Rename ident into
	ident_in_clause.
	(exception): Rename catch_list_pc into next_catch_list_pc.
	* DINO/d_yacc.y (access_list): Use ident_in_clause instead of
	ident.
	* DINO/d_eval.c (evaluate): Use next_catch_list_pc for exception.
	* DINO/d_context.c (second_block_passing):  Use ident_in_clause
	for access_ident.
	(third_block_passing, fourth_block_passing, dump_code): Use
	next_catch_list_pc for exception.

2012-09-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* d_yacc.y (designator): Use designator and component instead of
	left_operand and right_operand.

	* d_heap.c (REAL_BLOCK_VARS_NUMBER): Remove.  Use
	real_block_vars_number instead.

	* d_ir.sprut: Remove multiple inheritance.
	(real_block_vars_number): New function.
	(ir_node): Make it abstract.  Move next_pc to ...
	(generic_pos): ... here.
	(expr): Make it inherited from generic_pos.
	(designator, char, int, float, string, operation, nil): Make it
	inherited from expr.
	(ident): Make it inherited from designator.
	(member_access): Remove.
	(component_designator): New.
	(index, key_index): Make it inherited from component_designator.
	(period_designator): New.
	(period, no_testing_period): Make it inherited from period_designator.
	(type, vector_table, class_func_thread_call): Make it inherited
	from expr.
	(swap): Remove %abstract.
	(stmt): Add const_flag.
	(may_be_const_decl): Remove.
	(external_decl): New.
	(var):  Make it inherited from decl.
	(external_var, external_func):  Make it inherited from
	external_decl.
	(lvalue_index, lvalue_index_and_val, lvalue_key_index): Make it
	inherited from component_designator.
	(lvalue_key_index_and_val): Ditto.
	(lvalue_period, lvalue_period_and_val, lvalue_no_testing_period):
	Make it inherited from period_designator.
	(lvalue_no_testing_period_and_val): Ditto.
	(decl_in_block): Remove.
	(decl): Add decl_number_in_block.
	(occurrence): Make it inherited from designator.
	(var_occurrence, local_lvalue_var_occurrence): Make it inherited from occurence.
	(local_lvalue_var_occurrence_and_val, lvalue_var_occurrence): Ditto.
	(lvalue_var_occurrence_and_val, external_func_occurrence): Ditto.
	(func_occurrence, class_occurrence): Ditto.
	(external): Remove.
	(external_decl): New.
	(external_var, external_func): Make it inherited from
	external_decl.

	* DINO/d_context.c (current_scope): Rename to curr_scope.
	(current_pc): Rename to curr_pc.
	(first_expr_processing): Remove parameter and its processing.  Use
	designator and component instead of left_operand and right_operand
	for component designators.
	(process_extension_block): Remove code temporary_vars_number.
	(first_block_passing): Ditto.  Remove second argument for
	first_expr_processing calls.
	(curr_real_scope): New.
	(START_TEMP_VARS_NUMBER): Rename to ADD_TEMP_VARS_NUMBER.
	(second_expr_processing): New.
	(second_block_passing): Call second_expr_processing.  Set up
	curr_real_scope.
	(third_expr_processing, fourth_expr_processing, dump_code): Use
	designator and component instead of left_operand and right_operand
	for component designators.
	(current_node_num): Rename to curr_node_num.
	(test_context): Initiate curr_real_scope.

2012-09-04  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_eval.c (DIRECT_THREADED, USE_SWITCHES): Remove.
	(evaluate_code): Remove code for DIRECT_THREADED and USE_SWITCHES.
	Remove macros CASE and BREAK.

2012-09-04  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in: Check -flto.
	* configure: Update.
	* DINO/d_main.c (main): Remove code inside #if 0.
	* DINO/d_ir.sprut (if_stmt): New field common_part_pc.
	* DINO/d_extern.sprut (func, class): Move field definitions
	func_no and class_no upper.
	* DINO/d_common.h (dump_flag): New external.
	* DINO/d_dino.c (dump_flag): New.
	(COMMAND_LINE_DESCRIPTION): Add description for -d.
	(dino_main): Set up dump_flag.  Evaluate program if ! dump_flag.
	* DINO/d_context.c (third_block_passing): Set up common_part_pc.
	(go_through): Process block.
	(fourth_block_passing): Process common_part_pc.
	(print_indent, node_info_hash, node_info_eq, find_node_info): New
	functions.
	(initiate_node_tab, finish_node_tab, dump_code): Ditto.
	(struct node_info): New.
	(node_info, node_info_tab, node_info_os, current_node_num): New
	static vars.
	(last_goto_flag, curr_line_number): Ditto.
	(test_context): Dump the IR code if dump_flag.

2012-08-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in: Check -Ofast.
	* configure, cocom-config.h.in: Update.

2010-04-09  Vladimir Makarov  <vmakarov@users.sf.net>

	* cocom.spec: Remove removed doc files.
	* dino.spec: Change doc files path.

2010-04-09  Vladimir Makarov  <vmakarov@users.sf.net>

	* Makefile.in: use INSTALL, INSTALLDATA, prefix, docdir.  Add
	dino-copyright, cocom-copyright.  Install document files for cocom
	and dino.  New entries rpm, deb, dinorpm, dinodeb.
	* dino-copyright, cocom-copyright, dino.dsc, cocom.dsc: New files.
	* cocom.info: rebuild.
	* cocom.spec: Change doc files.
	* AMMUNITION/Makefile.in: Use docdir.  Install document files.
	* DINO/Makefile.in: Ditto.
	* MSTA/Makefile.in: Ditto.
	* NONA/Makefile.in: Ditto.
	* OKA/Makefile.in: Ditto.
	* SHILKA/Makefile.in: Ditto.
	* SPRUT/Makefile.in: Ditto.
	* AMMUNITION/ammunition++.info, AMMUNITION/ammunition.info:
	Rebuild.
	* AMMUNITION/errors.c (default_output_error_function): Use fputs.
	* AMMUNITION/errors.cpp (errors::output_error_function): Ditto.
	* DINO/d_func.c (chdir_call): Check chdir return status.
	(getgroups_call): Check getgroups return status.
	* DINO/dino.info: rebuild.
	* DINO/dino.tst.in (test 496): Change expected output.
	* MSTA/msta.info, OKA/oka.info, SHILKA/shilka.info,
	NONA/nona-{1-5}.html, NONA/nona.html, NONA/nona.dvi,
	NONA/nona.info, NONA/nona.pdf, NONA/nona.ps, NONA/nona.txt,
	SPRUT/sprut-{1-5}.html, SPRUT/sprut.html, SPRUT/sprut.dvi,
	SPRUT/sprut.info, SPRUT/sprut.pdf, SPRUT/sprut.ps,
	SPRUT/sprut.txt: Rebuild.
	* NONA/nona.1, SPRUT/sprut.1: Minor changes to remove warnings.
	* AMMUNITION/ammunition++.info-{1-4},
	AMMUNITION/ammunition.info-{1-3}: Remove.
	* cocom/cocom.info, cocom/sgml-info, cocom/sgml-postinfo: Remove.

2010-02-13  Vladimir Makarov  <vmakarov@users.sf.net>

	* dino.spec, cocom.spec: Use /usr/share/man instead of /usr/man.

2009-03-01  Vladimir Makarov  <vmakarov@users.sf.net>

	* configure.in: Use AC_CHECK_TYPES instead of AC_CHECK_TYPE.  Add
	comments for AC_DEFINE.  Change -O2 to -O3 for CFLAGS and
	CXXFLAGS.  Remove -finline-limit.
	* acconfig.h: Remove.
	* configure: Update.
	* AMMUNITION/cocom-config.h.in: Update.
	* AMMUNITION/sgramm.y (yyerror): Add const to parameter type.
	* DINO/socket_int.c: Use HAVE_INET_ATON instead of HAVE_inet_aton.
	* MSTA/fcalc.y: Include <string.h>.
	* SPRUT/A_base.sprut (comment): Add const to argument type.
	* SPRUT/gen.c (generate_spi): Remove usage standard macro
	offsetof.
	(output_node_names): Add const to the type.

2008-12-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Fix a typ in fgrep user.

2008-12-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.sgml.in: Remove duplication in OperatorOrDelimeter.
	Change rand description.

	* DINO/dino.txt, DINO/dino-3.html, DINO/dino-8.html,
	DINO/dino.dvi, DINO/dino.info, DINO/dino.pdf, DINO/dino.ps:
	Update.

2008-12-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Fix CPU speed scaling and printing only user time for spell test.

2008-12-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Add scaling code code to CPU speed.  Add code
	refactoring for Python 3.x.  Print only user time.

2007-08-15  Vladimir Makarov  <vmakarov@users.sf.net>

        * CHANGES, DINO-CHANGES: Added -t option.
	* DINO/d_common.h (trace_flag): New external.
	* DINO/d_dino.c (dino_finish). Call print_trace_stack.
	(COMMAND_LINE_DESCRIPTION): Add option -t.
	(trace_flag): New variable.
	(dino_main): Initiate trace_flag.  Process -t.
	* DINO/d_errors.c (ERR_decl_is_absent_in_a_block,
	ERR_invalid_type_of_arrow_left_operand,
	DERR_decl_is_absent_in_given_class_or_block): Fix typo.
	* DINO/d_eval.c (find_catch_pc): Collect stack trace.
	(evaluate_code): Add local_var_occurrence and wait_finish for the
	label table.  Use goto instead of continue for DIRECT_THREADED.
	Add USE_SWITCHES and the corresponding implementation.
	* DINO/d_func.c (trace_stack): New variable.
	(print_trace_stack): New function.
	(exit_call): Collect stack trace.
	(process_func_class_call): Use ER_call_pc instead of
	ER_return_pc.
	(initiate_funcs): Create trace_stack.
	(finish_funcs): Delete trace_stack.
	* DINO/d_func.h (print_trace_stack): New external.
	* DINO/d_heap.c (final_call_destroy_functions, heap_push,
	heap_pop): Use ER_call_pc instead of ER_return_pc.
	* DINO/d_run.sprut (struct trace_stack_elem): New.
	(trace_stack): New external.
	* DINO/dino.tst.in (214, 402, 403): Fix typo in message.
	(580-583): New tests for tracing.
	* DINO/dino.1: Add -t.
	* DINO/{dino.html, dino-[1-9].html, dino-10.html}, DINO/dino.dvi,
	DINO/dino.info, DINO/dino.pdf, DINO/dino.ps, DINO/dino.txt:
	Update.
	* DINO/O/FE/lex.d: Add newline at the end of file.

2007-05-23  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/msta.tst.in (test 11): Change conflicts number.
	* MSTA/contexts.c (context_concat): Use temporary context.

2007-05-15  Vladimir Makarov  <vmakarov@users.sf.net>

	* contexts.c (get_new_token_string): Change assert.
	(token_string_length): Check pointer after length.
	(output_token_string): Output empty.
	(context_concat): Zero context if 2nd one is empty.
	* descript.c (output_first_sets): New function.
	* descript.h (output_first_sets): New prototype.
	* gen.c (generate): Output first sets.
	* lr.c (shorten_LR_situation_context_token_string): Don't output
	token_string to stderr.
	* relation.c (set_nonterm_relation_FIRST): Initiate the first set
	from current iteration.  Rewrite with using <e>.
	(set_FIRST_of_rule_tail): Add <e> for rule end.
	(FIRST_of_tail): Use concat only.

2007-05-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/relation.c (set_nonterm_relation_FIRST): Add parameter
	init_p and use it.
	(evaluate_nonterminals_relation_FIRST): Use the new parameter.
	* MSTA/msta.tst.in: Add a new test.  Change # conflicts for 11
	test.

2007-05-04  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/ird.sprut (single_nonterm_definition): Add new field
	next_iter_relation_FIRST.
	* MSTA/relation.c (evaluate_minimal_derived_string_length,
	evaluate_nonterminals_relation_FIRST): Use prev iteration values
	of FIRST.
	* MSTA/msta.tst.in: Add a new test.

2007-05-03  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/msta.tst.in: Add a new test.

2007-05-03  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.tst.in (tests 131, 351, 352, 363, 403): Fix error
	position.

2007-05-03  Vladimir Makarov  <vmakarov@users.sf.net>

	* MSTA/relation.c (minimal_derived_string_length_pass_number,
	relation_FIRST_pass_number): Remove.
	(dfs_nonterm_definitions, something_changed_p): New static
	variables.
	(nonterm_DFS): New function.
	(set_nonterm_minimal_derived_string_length,
	set_nonterm_relation_FIRST): Change result type.  Rewrite.
	(evaluate_nonterminals_relation_FIRST,
	evaluate_minimal_derived_string_length): Use iterative algorithm.

2007-04-13  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.sgml.in (strtime): %% -> %.
	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.pdf, DINO/dino.ps, DINO/dino.txt:
	Update.

2007-04-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/d_context.c (third_expr_processing): Set up position for
	ident.

2007-04-05  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/ammunition++.sgml.in, AMMUNITION/ammunition.sgml.in:
	Add xor.
	* AMMUNITION/ammunition++-10.html, AMMUNITION/ammunition++.dvi,
	AMMUNITION/ammunition++.info, AMMUNITION/ammunition++.info-1,
	AMMUNITION/ammunition++.info-2, AMMUNITION/ammunition++.info-3,
	AMMUNITION/ammunition++.info-4, AMMUNITION/ammunition++.pdf,
	AMMUNITION/ammunition++.ps, AMMUNITION/ammunition++.txt,
	AMMUNITION/ammunition-10.html, AMMUNITION/ammunition.dvi,
	AMMUNITION/ammunition.info, AMMUNITION/ammunition.info-1,
	AMMUNITION/ammunition.info-2, AMMUNITION/ammunition.info-3,
	AMMUNITION/ammunition.pdf, AMMUNITION/ammunition.ps,
	AMMUNITION/ammunition.txt: Update.
	* AMMUNITION/arithm++.tst.in, AMMUNITION/arithm.tst.in: Add tests
	for xor.
	* AMMUNITION/arithm.c (integer_xor, unsigned_integer_xor): New
	functions.
	* AMMUNITION/arithm.cpp (signed_integer::_xor_,
	unsigned_integer::_xor_): New functions.
	* AMMUNITION/arithm.h (integer_xor, unsigned_integer_xor): New
	externals.
	(_xor_): New static class functions.
	(^): New class operators.
	* DINO/d_errors.c (DERR_func_in_left_arrow_side,
	DERR_class_in_left_arrow_side, DERR_there_is_not_such_decl,
	DERR_decl_name_is_not_string): Remove.
	* DINO/d_errors.h (): Ditto.
	* DINO/mpi.c (mpi_xor, mpi_unsigned_xor): New functions.
	* DINO/mpi.d (mpi_xor, mpi_unsigned_xor): New functions.

2007-02-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.test.in: simplify two tests for fp exceptions.

2007-02-08  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.html, DINO/dino-1.html, DINO/dino-2.html
	DINO/dino-3.html, DINO/dino-4.html, DINO/dino-5.html
	DINO/dino-6.html, DINO/dino-7.html, DINO/dino-9.html
	DINO/dino-10.html: Change modification date.

2007-02-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* cocom.spec (BuildRequires, Requires): New.
	(Version, dino_version): Increase.
	(/usr/bin/dino-%{dino_version},
	/usr/lib/dino-%{dino_version}/gmp.d,
	/usr/lib/dino-%{dino_version}/gmp.so): New.
	* dino.spec (BuildRequires, Requires): New.
	(/usr/bin/dino-%{version}, /usr/lib/dino-%{version}/gmp.d,
	/usr/lib/dino-%{version}/gmp.so): New.
	* MSTA/compare.tst.in: Don't fgrep with is.
	* OKA/Makefile.in: Remove dsp and dsw files.

2007-02-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Don't run AWK for spell checker and reversing
	a file.
	* DINO/dino.tst.in: Remove format 'F'.  Smaller 'too big width'.
	* DINO/d_func.c (general_putf_call): Remove 'F'.
	* DINO/dino.sgml.in: Remove format 'F'.
	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.pdf, DINO/dino.ps, DINO/dino.txt:
	Update.

2007-02-07  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/Makefile.in (dinolibdir, dinoincludedir): Rename from
	libdir and includedir.  Define through libdir and includedir.
	(libdir, includedir): New.
	(uninstall): Remove directories libdir and includedir. 

2007-02-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO-README, README: Tested platforms.
	* DINO-CHANGES, CHANGES: GMP package.
	* Makefile.in (additional_files): Remove yacc.exe

2007-02-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* AMMUNITION/errors++.tst.in, AMMUNITION/errors.tst.in: New
	possible output for error 0.
	* DINO/dino.tst.in: Ignore when gmp is not present.

2007-02-06  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/compare.tst: Put parentheses around time in if.
	Switch off ackermann for AWK.
	* DINO/d_func.c (general_putf_call): Remove a and A formats.
	* DINO/d_main.c (gmp_address): New external definition.
	(get_library_search_function): Call gmp_address.
	* DINO/dino.tst.in: Use SCMP instead of CMP for stdin.  Remove
	tests for format a and A.  Add alternative output for format f and
	F.
	* DINO/dino.sgml.in: Remove format a and A.
	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.pdf, DINO/dino.ps, DINO/dino.txt:
	Update.
	* DINO/gmp.c (mpz_address): Rename to gmp_address.

2007-02-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* Makefile.in, AMMUNITION/allocate.c, AMMUNITION/allocate.cpp,
	AMMUNITION/allocate.h, AMMUNITION/allocate.tst.in,
	AMMUNITION/allocate++.tst.in, AMMUNITION/arithm.c,
	AMMUNITION/arithm.cpp, AMMUNITION/arithm.h,
	AMMUNITION/arithm.tst.in, AMMUNITION/arithm++.tst.in,
	AMMUNITION/bits.c, AMMUNITION/bits.cpp, AMMUNITION/bits.h,
	AMMUNITION/bits.tst.in, AMMUNITION/bits++.tst.in,
	AMMUNITION/commline.c, AMMUNITION/commline.cpp,
	AMMUNITION/commline.h, AMMUNITION/commline.tst.in,
	AMMUNITION/commline++.tst.in, AMMUNITION/earley.c,
	AMMUNITION/earley.cpp, AMMUNITION/earley.h,
	AMMUNITION/earley.tst.in, AMMUNITION/earley++.tst.in,
	AMMUNITION/errors.c, AMMUNITION/errors.cpp, AMMUNITION/errors.h,
	AMMUNITION/errors.tst.in, AMMUNITION/errors++.tst.in,
	AMMUNITION/hashtab.c, AMMUNITION/hashtab.cpp,
	AMMUNITION/hashtab.h, AMMUNITION/hashtab.tst.in,
	AMMUNITION/hashtab++.tst.in, AMMUNITION/IEEE.c,
	AMMUNITION/IEEE.cpp, AMMUNITION/IEEE.h, AMMUNITION/IEEE.tst.in,
	AMMUNITION/IEEE++.tst.in, AMMUNITION/Makefile.in,
	AMMUNITION/objstack.c, AMMUNITION/objstack.cpp,
	AMMUNITION/objstack.h, AMMUNITION/objstack.tst.in,
	AMMUNITION/objstack++.tst.in, AMMUNITION/position.c,
	AMMUNITION/position.cpp, AMMUNITION/position.h,
	AMMUNITION/position.tst.in, AMMUNITION/position++.tst.in,
	AMMUNITION/sgramm.y, AMMUNITION/ticker.c, AMMUNITION/ticker.cpp,
	AMMUNITION/ticker.h, AMMUNITION/ticker.tst.in,
	AMMUNITION/ticker++.tst.in, AMMUNITION/vlobject.c,
	AMMUNITION/vlobject.cpp, AMMUNITION/vlobject.h,
	AMMUNITION/vlobject.tst.in, AMMUNITION/vlobject++.tst.in,
	DINO/compare.tst, DINO/d_built.h, DINO/d_common.h,
	DINO/d_context.c, DINO/d_context.h, DINO/d_conv.c, DINO/d_conv.h,
	DINO/d_dino.c, DINO/d_dino.h, DINO/d_errors.c, DINO/d_errors.h,
	DINO/d_eval.c, DINO/d_eval.h, DINO/d_extern.sprut, DINO/d_func.c,
	DINO/d_func.h, DINO/d_heap.c, DINO/dino.tst.in, DINO/d_ir.sprut,
	DINO/d_kw.shilka, DINO/d_main.c, DINO/d_run.sprut,
	DINO/d_runtab.c, DINO/d_runtab.h, DINO/d_types.h, DINO/d_yacc.h,
	DINO/d_yacc.y, DINO/gmp.c, DINO/ieee.d, DINO/ieee_int.c,
	DINO/ipcerr.d, DINO/ipcerr_int.c, DINO/Makefile.in, DINO/mpi.c,
	DINO/mpi.d, DINO/socket.d, DINO/socket_int.c, MSTA/anal.c,
	MSTA/anal.h, MSTA/common.c, MSTA/common.h, MSTA/compare.tst.in,
	MSTA/contexts.c, MSTA/contexts.h, MSTA/descript.c,
	MSTA/descript.h, MSTA/gen.c, MSTA/gen-comm.c, MSTA/gen-comm.h,
	MSTA/gen.h, MSTA/ird.sprut, MSTA/la-trie.c, MSTA/la-trie.h,
	MSTA/lr.c, MSTA/lr.h, MSTA/lr-sets.c, MSTA/lr-sets.h, MSTA/main.c,
	MSTA/Makefile.in, MSTA/oberon2-kw.shilka, MSTA/output.c,
	MSTA/output.h, MSTA/parser.c, MSTA/parser.h, MSTA/p-yacc.y,
	MSTA/quality.tst.in, MSTA/regular.c, MSTA/regular.h,
	MSTA/relation.c, MSTA/relation.h, MSTA/tab.c, MSTA/tab.h,
	MSTA/yacc.h, MSTA/yacc.y, NONA/a29k.nona, NONA/anal.c,
	NONA/anal.h, NONA/common.c, NONA/common.h, NONA/gen.c, NONA/gen.h,
	NONA/ird.sprut, NONA/main.c, NONA/Makefile.in, NONA/tab.c,
	NONA/tab.h, NONA/yacc.h, NONA/yacc.y, OKA/alpha-ev4.oka,
	OKA/alpha-ev5.oka, OKA/anal.c, OKA/anal.h, OKA/common.c,
	OKA/common.h, OKA/gen.c, OKA/gen.h, OKA/ird.sprut, OKA/main.c,
	OKA/Makefile.in, OKA/oka.tst, OKA/tab.c, OKA/tab.h, OKA/yacc.h,
	OKA/yacc.y, SHILKA/ada.shilka, SHILKA/ada-standards.shilka,
	SHILKA/anal.c, SHILKA/anal.h, SHILKA/b.shilka, SHILKA/common.c,
	SHILKA/common.h, SHILKA/cpp.shilka, SHILKA/c.shilka,
	SHILKA/d.shilka, SHILKA/gcc.shilka, SHILKA/gen.c, SHILKA/gen.h,
	SHILKA/gpc.shilka, SHILKA/ird.sprut, SHILKA/java.shilka,
	SHILKA/main.c, SHILKA/Makefile.in, SHILKA/modula2.shilka,
	SHILKA/modula3.shilka, SHILKA/pascal.shilka, SHILKA/shilka.tst.in,
	SHILKA/tab.c, SHILKA/tab.h, SHILKA/yacc.h, SHILKA/yacc.y,
	SPRUT/A_base.sprut, SPRUT/anal.c, SPRUT/anal.h,
	SPRUT/A_syntax.sprut, SPRUT/A_test.sprut, SPRUT/A_value.sprut,
	SPRUT/common.c, SPRUT/common.h, SPRUT/gen.c, SPRUT/gen.h,
	SPRUT/ird.sprut, SPRUT/main.c, SPRUT/Makefile.in,
	SPRUT/sprut-ird.c, SPRUT/sprut-ird.h, SPRUT/sprut.tst,
	SPRUT/std_bmem.sprut, SPRUT/std_mem.sprut, SPRUT/std_pos.sprut,
	SPRUT/std_str.sprut, SPRUT/std_type.sprut, SPRUT/tab.c,
	SPRUT/tab.h, SPRUT/yacc.h, SPRUT/yacc.y, DINO/Examples/extern.d,
	DINO/Examples/fact.d, DINO/Examples/fibonacci.d,
	DINO/Examples/idcount.d, DINO/Examples/mult.d,
	DINO/Examples/prodcons.d, DINO/Examples/sieve.d,
	DINO/Examples/tak.d, DINO/Examples/tmult.d,
	OKA/SCHEDULE/schedtst.c, OKA/SCHEDULE/schedtst.cpp,
	OKA/SCHEDULE/schedule.c, OKA/SCHEDULE/schedule.cpp,
	OKA/SCHEDULE/schedule.h, OKA/SCHEDULE/schedule.tst.in,
	OKA/SCHEDULE/schedule++.tst.in, OKA/SCHEDULE/test.oka: Change
	copyright year.

2007-02-02  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/dino.tst.in: New test for gmp.
	* DINO/gmp.c: Add stdlib.h
	(mpz_binary_op): Rename to mpz_three_op.
	(mpz_two_op_ui, mpz_two_op, mpz_one_op_ui, return_float,
	arithm_unary_op, op_ui, int_op_ui, _z_sub, _z_neg, _z_abs,
	_z_tdiv_r, _z_pow_ui, _z_root, int_res_op, _z_cmp, _z_ior, _z_xor,
	_z_and, _z_com, _z_set, _z_set_str, _z_get_d, _z_get_str,
	_z_set_bit, _z_clr_bit, _z_tst_bit, _z_urandomm): New functions.
	(mpz_address): Add the new _z functions.
	* DINO/gmp.d (_z_sub, _z_neg, _z_abs, _z_tdiv_r, _z_pow_ui,
	_z_root, _z_cmp, _z_ior, _z_xor, _z_and, _z_com, _z_set,
	_z_set_str, _z_get_d, _z_get_str, _z_set_bit, _z_clr_bit,
	_z_tst_bit, _z_urandomm): New external declarations.
	(check_ui, set, set_str, get_f, get_str, set_bit, clr_bit,
	tst_bit, sub, neg, abs, mul, mod, pow_ui, root, cmp, ior, xor,
	and, com, rand): New functions.
	(tdiv_q): Rename to div.

2007-01-24  Vladimir Makarov  <vmakarov@users.sf.net>

	* Makefile.in, AMMUNITION/Makefile.in, MSTA/Makefile.in,
	NONA/Makefile.in, OKA/Makefile.in, SHILKA/Makefile.in,
	SPRUT/Makefile.in: Remove .dsp and .dsw files.

2007-01-24  Vladimir Makarov  <vmakarov@users.sf.net>

	* DINO/gmp.c, DINO/gmp.d: New files.

2007-01-24  Vladimir Makarov  <vmakarov@users.sf.net>

	* CHANGES: WIN32 support is removed.
	* DINO-README: Ditto.
	* README: Ditto.
	* Makefile.in: Remove WIN32-INSTALL.txt and
	DINO-WIN32-INSTALL.txt.
	* configure.in: (LIBGMP): Check.
	(AC_CHECK_HEADERS): Check gmp.h.
	(DINO_ADDITIONAL_LIBS): Add header gmp.h.
	* configure: Update.
	* cocom.dvi, cocom.info, cocom.ps, DINO/dino-10.html,
	DINO/dino-3.html, DINO/dino-4.html, DINO/dino-5.html,
	DINO/dino-6.html, DINO/dino-8.html, DINO/dino-9.html,
	DINO/dino.html, DINO/dino.dvi, DINO/dino.ps, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.pdf, , DINO/dino.ps: Update.
	* AMMUNITION/IEEE.h: Remove WIN32.  Fix template functions with
	class result.
	* AMMUNITION/IEEE.tst.in: Add stdlib.h.
	* AMMUNITION/arithm.h: Remove WIN32.
	* AMMUNITION/cocom-config.h.in: Update.
	* AMMUNITION/earley++.tst.in:  Use prepared C file.  Add header
	stddef.h.  Change expected distance statistics.
	(test_read_token, test_syntax_error): Use ptrdiff_t.
	* AMMUNITION/earley.c (SYMB_CODE_TRANS_VECT): New macro.
	(struct symbs): New members symb_code_trans_vect and
	symb_code_trans_vect_start.
	(symb_init): Initiate symb_code_trans_vect.
	(symb_find_by_code): Add attrribute inline.  Use
	symb_code_trans_vect.
	(SYMB_CODE_TRANS_VECT_SIZE): New macro.
	(symb_finish_adding_terms): New function.
	(symb_empty, symb_fin): Use symb_code_trans_vect.
	(set_insert): Add code when dist hash table is not used.
	(earley_read_grammar): Call symb_finish_adding_terms.
	* AMMUNITION/earley.tst.in (TEST41): Use prepared C file.  Add
	sttdef.h.  Change expected distance statistics.
	(yylval): Remove.
	(get_lex): Use ptrdiff_t.  Don't set up yylval.
	(test_read_token): Use ptrdiff_t.
	* AMMUNITION/objstack.h (_OS_expand_memory): Do it public.  Add
	stddef.h.
	* DINO/Makefile.in (gmp_lib): New definition.
	(DINO_EXTERN_LIBS, DINO_EXTERN_LIBS_PATH): Add gmp_lib.
	(source): Add gmp.c and gmp.d.
	(additional_files): Remove dino.dsw and dino.dsp.
	(gmp_lib): New entry.
	(install, uninstall): Add gamp_lib and gmp.d.
	(clean): Add gmp_lib.
	(create-distdir): Remov mpi, ieee, ipcerr, socket.
	(dist-copy, rcslabel): Remove .dsp and .dsw files.
	Update dependcies.
	* DINO/compare.tst: New syntax for wait.
	* DINO/d_built.h (eltype_call): New definition.
	* DINO/d_common.h (get_ch_repr): New definition.  Remove WIN32.
	* DINO/d_context.c (first_expr_processing): Remove arrow and
	deref.
	(first_block_passing): Add swap.  Process wait-stmt.
	(second_block_passing): Ditto.
	(value_type,): Add local_var_occurrence.  Remove arrow and deref.
	(third_expr_processing): Skip simple blocks.  Remove arrow and
	deref.
	(make_designator_lvalue): New nodes IR_NM_lvalue_period_and_val,
	IR_NM_lvalue_index_and_val, IR_NM_lvalue_key_index_and_val,
	IR_NM_lvalue_var_occurrence_and_val,
	IR_NM_local_lvalue_var_occurrence_and_val,
	IR_NM_lvalue_external_var_occurrence_and_val,
	IR_NM_lvalue_no_testing_period_and_val.
	(third_block_passing): Process _and_val nodes too. Call
	make_designator_lvalue with additional parameter.  Process swap.
	Process wait-stmt.  Set simple_class_flag.  Use catch_block
	instead of block.  Remove arrow and deref.
	(fourth_block_passing): Process wait-stmt.  Use catch_block
	instead of block.
	* DINO/d_conv.c (implicit_conversion_for_binary_arithmetic_op):
	Speedup.
	* DINO/d_dino.c: Remove WIN32.
	(get_ch_repr): New function.
	(DINO/d_dino.h): Remove WIN32.
	* DINO/d_errors.c (ERR_non_variable_in_swap, ERR_const_swap,
	DERR_wait_in_sync_stmt, DERR_thread_call_in_sync_stmt): New
	variables.
	* DINO/d_errors.h (ERR_non_variable_in_swap, ERR_const_swap,
	DERR_wait_in_sync_stmt, DERR_thread_call_in_sync_stmt): New
	external variable definitions..
	* DINO/d_eval.c: Remove WIN32 code.
	(USE_SWITCH): New mcaro.
	(push_var_ref): Set stack or instance instead of var_ref.
	(push_var_ref_and_val): New function.
	(push_var_val): Remove container cache.
	(push_external_var, execute_a_period_operation): Add parameter.
	(load_vector_element_by_index): Rename from load_vector_element.
	(store_vector_element, store_table_element,
	store_designator_value): Don't use below_ctop.
	(load_table_element_by_key): Rename from load_table_element.
	(load_given_designator_value): New function.
	(load_designator_value): Use the previous function.
	(find_catch_pc): Use temp_ref.
	(temp_ident): Remove.
	(prepare_op_assign): Remove.
	(evaluate_code): Define goto table.  Remove arrow and deref.  Add
	code for swap.  Process new wait.
	(evaluate_program): Initialize sync_flag.
	* DINO/d_extern.sprut: Remove WIN32.
	(var_ref, vect_el_ref, tab_el_ref): Remove.
	(heap_tab). New filed last_key_index.
	* DINO/d_func.c: Remove WIN32.
	(NEW_VECTOR): New macro.
	(to_lower_upper): Add code without generating new vector.
	(trans_call): New function.
	(process_regcomp_errors): Use reg_erange_decl.
	(find_regex. match_call, gmatch_call, generall_sub_call,
	split_call): Add code when USE_POSIX_REGEXEC_FUNCTION is not
	defined.
	(rev_call). Code when NEW_VECTOR is defined.
	(print_ch): Use get_ch_repr.
	(process_func_class_call): Speed up.
	* DINO/d_heap.c: Remove WIN32.  Remove code with FEW_REGISTERS.
	(sync_flag, temp_ref): New global variable.
	(in_heap_temp_refs): Use temp_ref.
	(initiate_heap): Initialize temp_ref.
	(traverse_used_var): Remove var_ref, vect_el_ref, and tab_el_ref.
	(traverse_used_heap_object): Initialize last_key_index.
	(mark_used_heap_objects): Traverse temp_ref.
	(change_val): Remove var_ref, vect_el_ref, and tab_el_ref.
	(change_refs): Process temp_ref.  Set up state.
	(heap_push, heap_pop, expand_vector, unpack_vector, copy_vector):
	Use temp_ref.
	(eq_vector): Redirect v2.
	(hash_key): Better hashing.
	(START_TABLE_SIZE): Use bigger value.
	(create_tab): Set up last_key_index.
	(find_tab_entry): Use last_key_index.
	(expand_tab): Use temp_ref.  Set up last_key_index.
	(remove_tab_el): Use last_key_index.
	(table_to_vector_conversion, vector_to_table_conversion): Use
	temp_ref.
	(block_cprocess): Use sync_flag.
	(delete_cprocess, delete_cprocess_during_exception): Set up
	first_process_not_started.
	* DINO/d_ir.sprut (create_occurrence_node): Additional parameter.
	(syncthreadcall, syncwait): New classes.
	(dereftype, arrowtype): Remove.
	(trans): New function.
	(arrow, lvalue_arrow, deref, lvalue_deref): Remove.
	(member_access, swap): New nodes.
	(wait_stmt): New field wait_stmt.
	(exception): Rename block to catch_block.
	(local_var_occurrence, lvalue_period_and_val,
	lvalue_index_and_val, lvalue_key_index_and_val,
	lvalue_no_testing_period_and_val): New nodes.
	(class): New member simple_class_flag.
	(wait_finish, lvalue_external_var_occurrence_and_val,
	local_lvalue_var_occurrence_and_val,
	lvalue_var_occurrence_and_val): New nodes.
	(block): New field block_saved_sync_flag.
	(var): Remove fields var_cached_address,
	var_cached_container_tick.
	(syncthreadcall, reg_erange, syncwait): New table elements.
	(erange, dereftype, arrowtype): Remove table elements.
	* DINO/d_main.c: Remove WIN32 code.
	* DINO/d_run.sprut (sync_flag): New external definition.
	(FEW_REGISTERS): Remove.
	(heap_push): Additional parameter.
	(eval_error): Add attribute noreturn.
	* DINO/d_yacc.y: Remove WIN32.
	(swap): Add.
	(arrow, deref): Remove.
	(wait): New syntax.
	* DINO/dino.1 (DINO_EXTERN_LIBS): Description.
	* DINO/dino.sgml.in (trans, swap): New function and operation.
	(arrow, deref): Remove.
	(wait): New syntax.
	* DINO/dino.tst.in: New synatx for wait.
	No testing for arrow and deref.
	New tests from language shootout.
	* DINO/ipcerr_int.c: Remove WIN32.
	* DINO/mpi.c: Ditto.
	* DINO/ieee_int.c: Remove WIN32.  Add string.h.
	* DINO/socket_int.c: Ditto.
	* MSTA/compare.tst.in: Use prepared source file. Print used
	memory.  Add earley parser.
	* MSTA/main.c: Remove WIN32.
	* NONA/main.c: Ditto.
	* OKA/main.c: Ditto.
	* SHILKA/main.c: Ditto.
	* SHILKA/shilka.tst.in: Add stdlib.h.
	* SPRUT/main.c: Remove WIN32.
	* SPRUT/yacc.y: Ditto.
	* SPRUT/gen.c (generate_spi): Add stddlib.h.
	(output_rest_double_link_functions_definitions): Always call
	output_rest_double_link_functions_definitions.
	* DINO-WIN32-INSTALL.txt: Remove.
	* WIN32-INSTALL.txt: Ditto.
	* AMMUNITION/clibcocom/clibcocom.{dsp,dsw}: Ditto.
	* AMMUNITION/cpplibcocom/cpplibcocom.{dsp,dsw}: Ditto.
	* DINO/dino.{dsp,dsw}: Ditto.
	* DINO/ieee/ieee.{dsp,dsw}: Ditto.
	* DINO/mpi/mpi.{dsp,dsw}: Ditto.
	* MSTA/msta.{dsp,dsw}: Ditto.
	* NONA/nona.{dsp,dsw}: Ditto.
	* OKA/oka.{dsp,dsw}: Ditto.
	* OKA/SCHEDULE/cppschedule/cppschedule.{dsp,dsw}: Ditto.
	* OKA/SCHEDULE/cschedule/cschedule.{dsp,dsw}: Ditto.
	* OKA/SCHEDULE/schedule.cpp (resource_history, list): Forward
	declarations.
	* SHILKA/shilka.{dsp,dsw}:  Remove.
	* SPRUT/sprut.{dsp,dsw}: Ditto.
	* cocom/cocom.{c,dsp,dsw}: Ditto.
	* dinolang/dinolang.{c,dsp,dsw}: Ditto.
	
2005-01-17  Vladimir Makarov  <vmakarov@users.sf.net>

	* CHANGES: Major changes since the last release.

2005-01-15  Vladimir N. Makarov  <vmakarov@users.sf.net>

	* MSTA/compare.tst.in: Missed file for commiting.

	* SPRUT/std_pos.sprut, SPRUT/sprut-ird.c, SHILKA/gpc.shilka,
	NONA/tab.h:  Change the last year.

	* SPRUT/yacc.y, SPRUT/yacc.h, SPRUT/tab.h, SPRUT/tab.c,
	SPRUT/std_type.sprut, SPRUT/std_str.sprut, SPRUT/std_str.sprut,
	SPRUT/std_mem.sprut, SPRUT/std_bmem.sprut, SPRUT/sprut.tst,
	SPRUT/sprut-ird.h, SPRUT/sprut-ird.h, SPRUT/main.c,
	SPRUT/ird.sprut, SPRUT/gen.h, SPRUT/gen.c, SPRUT/common.h,
	SPRUT/common.c, SPRUT/anal.h, SPRUT/anal.c, SPRUT/Makefile.in,
	SPRUT/A_value.sprut, SPRUT/A_test.sprut, SPRUT/A_syntax.sprut,
	SPRUT/A_base.sprut, SHILKA/yacc.y, SHILKA/yacc.h, SHILKA/tab.h,
	SHILKA/tab.c, SHILKA/shilka.tst.in, SHILKA/pascal.shilka,
	SHILKA/modula3.shilka, SHILKA/modula2.shilka, SHILKA/main.c,
	SHILKA/java.shilka, SHILKA/ird.sprut, SHILKA/ird.sprut,
	SHILKA/gen.h, SHILKA/gen.c, SHILKA/gcc.shilka, SHILKA/d.shilka,
	SHILKA/cpp.shilka, SHILKA/common.h, SHILKA/common.c,
	SHILKA/c.shilka, SHILKA/b.shilka, SHILKA/anal.h, SHILKA/anal.c,
	SHILKA/ada.shilka, SHILKA/ada-standards.shilka,
	SHILKA/Makefile.in, OKA/SCHEDULE/test.oka,
	OKA/SCHEDULE/schedule.tst.in, OKA/SCHEDULE/schedule.h,
	OKA/SCHEDULE/schedule.cpp, OKA/SCHEDULE/schedule.c,
	OKA/SCHEDULE/schedule++.tst.in, OKA/SCHEDULE/schedtst.cpp,
	OKA/SCHEDULE/schedtst.c, OKA/yacc.y, OKA/yacc.h, OKA/tab.h,
	OKA/tab.c, OKA/oka.tst, OKA/main.c, OKA/ird.sprut, OKA/gen.h,
	OKA/gen.c, OKA/common.h, OKA/common.c, OKA/anal.h, OKA/anal.c,
	OKA/alpha-ev5.oka, OKA/alpha-ev4.oka, OKA/Makefile.in,
	NONA/yacc.y, NONA/yacc.h, NONA/yacc.h, NONA/tab.c, NONA/main.c,
	NONA/ird.sprut, NONA/gen.h, NONA/gen.c, NONA/common.h,
	NONA/common.c, NONA/anal.h, NONA/anal.c, NONA/a29k.nona,
	NONA/Makefile.in, MSTA/yacc.y, MSTA/yacc.h, MSTA/tab.h,
	MSTA/tab.c, MSTA/relation.h, MSTA/relation.c, MSTA/regular.h,
	MSTA/regular.c, MSTA/quality.tst.in, MSTA/parser.h, MSTA/parser.c,
	MSTA/p-yacc.y, MSTA/output.h, MSTA/output.c,
	MSTA/oberon2-kw.shilka, MSTA/main.c, MSTA/lr.h, MSTA/lr.c,
	MSTA/lr-sets.h, MSTA/lr-sets.c, MSTA/la-trie.h, MSTA/la-trie.c,
	MSTA/ird.sprut, MSTA/gen.h, MSTA/gen.c, MSTA/gen-comm.h,
	MSTA/gen-comm.c, MSTA/descript.h, MSTA/descript.c,
	MSTA/contexts.h, MSTA/contexts.c, MSTA/common.h, MSTA/common.c,
	MSTA/anal.h, MSTA/anal.c, MSTA/Makefile.in, DINO/Examples/tmult.d,
	DINO/Examples/tak.d, DINO/Examples/sieve.d,
	DINO/Examples/prodcons.d, DINO/Examples/mult.d,
	DINO/Examples/idcount.d, DINO/Examples/fibonacci.d,
	DINO/Examples/fact.d, DINO/Examples/extern.d, DINO/socket_int.c,
	DINO/socket.d, DINO/mpi.d, DINO/mpi.c, DINO/ipcerr_int.c,
	DINO/ipcerr.d, DINO/ieee_int.c, DINO/ieee.d, DINO/dino.tst.in,
	DINO/dino.ps, DINO/d_yacc.y, DINO/d_yacc.h, DINO/d_types.h,
	DINO/d_runtab.h, DINO/d_runtab.c, DINO/d_run.sprut, DINO/d_main.c,
	DINO/d_kw.shilka, DINO/d_ir.sprut, DINO/d_heap.c, DINO/d_func.h,
	DINO/d_func.c, DINO/d_extern.sprut, DINO/d_eval.h, DINO/d_eval.c,
	DINO/d_errors.h, DINO/d_errors.c, DINO/d_dino.h, DINO/d_dino.c,
	DINO/d_conv.h, DINO/d_conv.c, DINO/d_context.h, DINO/d_context.c,
	DINO/d_common.h, DINO/d_built.h, DINO/compare.tst,
	DINO/Makefile.in, AMMUNITION/vlobject.tst.in,
	AMMUNITION/vlobject.h, AMMUNITION/vlobject.cpp,
	AMMUNITION/vlobject.c, AMMUNITION/vlobject++.tst.in,
	AMMUNITION/ticker.tst.in, AMMUNITION/ticker.h,
	AMMUNITION/ticker.cpp, AMMUNITION/ticker.c,
	AMMUNITION/ticker++.tst.in, AMMUNITION/sgramm.y,
	AMMUNITION/position.tst.in, AMMUNITION/position.h,
	AMMUNITION/position.cpp, AMMUNITION/position.c,
	AMMUNITION/position++.tst.in, AMMUNITION/objstack.tst.in,
	AMMUNITION/objstack.h, AMMUNITION/objstack.cpp,
	AMMUNITION/objstack.c, AMMUNITION/objstack++.tst.in,
	AMMUNITION/hashtab.tst.in, AMMUNITION/hashtab.h,
	AMMUNITION/hashtab.cpp, AMMUNITION/hashtab.c,
	AMMUNITION/hashtab++.tst.in, AMMUNITION/errors.tst.in,
	AMMUNITION/errors.h, AMMUNITION/errors.cpp, AMMUNITION/errors.c,
	AMMUNITION/errors++.tst.in, AMMUNITION/earley.tst.in,
	AMMUNITION/earley.h, AMMUNITION/earley.cpp, AMMUNITION/earley.c,
	AMMUNITION/earley++.tst.in, AMMUNITION/commline.tst.in,
	AMMUNITION/commline.h, AMMUNITION/commline.cpp,
	AMMUNITION/commline.c, AMMUNITION/commline++.tst.in,
	AMMUNITION/bits.tst.in, AMMUNITION/bits.h, AMMUNITION/bits.cpp,
	AMMUNITION/bits.c, AMMUNITION/bits++.tst.in,
	AMMUNITION/arithm.tst.in, AMMUNITION/arithm.h,
	AMMUNITION/arithm.cpp, AMMUNITION/arithm.c,
	AMMUNITION/arithm++.tst.in, AMMUNITION/allocate.tst.in,
	AMMUNITION/allocate.h, AMMUNITION/allocate.cpp,
	AMMUNITION/allocate.c, AMMUNITION/allocate++.tst.in,
	AMMUNITION/Makefile.in, AMMUNITION/IEEE.tst.in, AMMUNITION/IEEE.h,
	AMMUNITION/IEEE.cpp, AMMUNITION/IEEE.c, AMMUNITION/IEEE++.tst.in,
	Makefile.in: Change the last year. Change the last year.

	* SPRUT/main.c, SHILKA/main.c, SHILKA/compare.tst.in, OKA/main.c,
	NONA/main.c, MSTA/main.c, DINO/d_main.c: Change return type of
	main.

	* SPRUT/gen.c (generate_spi): Use 16 instead of 0.

	* REGEX/regex.h (__restrict_arr): Define it only it is undefined.

	* MSTA/compare.tst.in, AMMUNITION/earley.tst.in,
	AMMUNITION/earley++.tst.in: Remove duplicated lex patterns.

	* DINO/dino.ps, DINO/dino.pdf, DINO/dino.info, DINO/dino.dvi:
	Update.

	* dino.spec, INSTALL, DINO-INSTALL: Change version.

2004-09-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* cocom.sgml.in: Add pdf.

	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.pdf,
	cocom.txt: Update.

	* DINO/dino.sgml.in: Remove url.

	* DINO/dino.pdf: New file.

	* DINO/dino.dvi, DINO/dino*.html, DINO/dino.info, DINO/dino.ps,
	DINO/dino.txt: Update.

2004-09-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

        * armoury.html, msta.jpg, nona.jpg, oka.jpg, shilka.jpg,
	sprut.jpg: Remove files.

	* Makefile.in: Remove references to the files.  Add pdf file
	generation.  Recursive calls for doc.  Use linuxdoc.

	* AMMUNITION/Makefile.in:   Add pdf file
	generation.  Use linuxdoc.

	* DINO/Makefile.in: Ditto.

	* MSTA/Makefile.in: Ditto.

	* NONA/Makefile.in: Ditto.

	* OKA/Makefile.in: Ditto.

	* SHILKA/Makefile.in: Ditto.

	* SPUT/Makefile.in: Ditto.

	* cocom.pdf, AMMUNITION/ammunition++.pdf,
	AMMUNITION/ammunition.pdf, MSTA/msta.pdf, NONA/nona.pdf,
	OKA/oka.pdf, SHILKA/shilka.pdf, SPRUT/sprut.pdf: New files.

	* cocom.spec: Remove garbage at the end of file.

	* cocom.sgml.in: Remove russian armoury and reference to
	armoury.html.

	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.txt: Update.

	* AMMUNITION/ammunition++.dvi, AMMUNITION/ammunition++*.html,
	AMMUNITION/ammunition++.info, AMMUNITION/ammunition++.ps,
	AMMUNITION/ammunition.dvi, AMMUNITION/ammunition*.html,
	AMMUNITION/ammunition.info, AMMUNITION/ammunition.ps: Update.

	* DINO/dino.dvi, DINO/dino*.html, DINO/dino.info, DINO/dino.ps: Ditto.

	* MSTA/msta.dvi, MSTA/msta*.html, MSTA/msta.info, MSTA/msta.ps,
	MSTA/msta.txt: Ditto.

	* NONA/nona.dvi, NONA/nona*.html, NONA/nona.info, NONA/nona.ps,
	NONA/nona.txt: Ditto.

	* OKA/oka.dvi, OKA/oka*.html, OKA/oka.info, OKA/oka.ps,
	OKA/oka.txt: Ditto.

	* SHILKA/shilka.dvi, SHILKA/shilka*.html, SHILKA/shilka.info,
	SHILKA/shilka.ps, SHILKA/shilka.txt: Ditto.

	* SPRUT/sprut.dvi, SPRUT/sprut*.html, SPRUT/sprut.info,
	SPRUT/sprut.ps, SPRUT/sprut.txt: Ditto.

2004-08-24  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (evaluate_code): Add code to use labels instead of
	switch-stmt.

	* DINO/O/DEBUG/Exp.ob: Add newline at the end of file.
	* DINO/O/DEBUG/Imp.ob: Add imported record.

	* DINO/O/FE/check.d: (find_qualid) Add checking for private
	identifier.
	(check_tdef_qualid): Change default value for parameter.
	(check_std_call): Add code for checking more standard procedures.
	(check_call): Assign type for function call.
	(check_des): Check private field.
	(func check_des): Add parameter value for call of find_qualid.

	* DINO/O/FE/table.d: Add more standard procedure declarations.

	* DINO/O/MACH/i386/machine.d: Change integer and long integer
	sizes.

	* MSTA/c5.y (main): Change return type.

	* MSTA/compare.tst.in (main): Use #if instead of #ifdef.

	* MSTA/lex.y (main): Change return type.

	* MSTA/quality.tst.in: Define CXX and use it for C++ tests.

	* MSTA/fcalc1.y: New file.

	* OKA/SCHEDULE/schedtst.c (main): Change return type.

	* OKA/SCHEDULE/schedtst.cpp (main): Ditto.

2004-05-11  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/{arithm.c, arithm.cpp}
	(multiply_unsigned_integer_by_digit_without_overflow_reaction,
	multiply_unsigned_integer_without_overflow_reaction,
	add_digit_to_unsigned_integer_without_overflow_reaction): Use
	unsigned long.

2004-01-29  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (putf_call, fputf_call, sputf_call): New external
	declarations.

	* DINO/d_errors.c (DERR_invalid_format): New global variable.

	* DINO/d_errors.h (DERR_invalid_format): New external variable
	declaration.

	* DINO/d_func.c (general_putf_call, putf_call, fputf_call,
	sputf_call): New functions.

	* DINO/d_ir.sprut (ENVIRONMENT): Add invfmt, putf, fputf, sputf.
	(INVFMT_NAME, PUTF_NAME, FPUTF_NAME, SPUTF_NAME): New macros.
	(invfmt_decl, putf_decl, fputf_decl, sputf_decl): New external
	declarations and definitions.
	(decls_table): Add entries for invfmt, putf, fputf, sputf.

	* DINO/dino.tst.in (228, 230): Ignore error about different
	directories -- just report about it.
	(265, 284): Change line in <environment>.
	(495): Skip test for datagram socket.
	(511-533): New tests for format output.

	* DINO/d_types.h: Remove test on 32 long and shorts.

        * DINO/dino.sgml.in: Add documenation for invfmt, putf, fputf,
	sputf.

	* DINO/{dino.html, dino-4.html, dino-8.html, dino.dvi, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt}: Update.

2003-12-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/O/FE/tree.d: Remove it.
	* DINO/O/DEBUG/Report.ob: Add.
	* DINO/O/DEBUG/com-check, DINO/O/DEBUG/com-tree: Process
	Report.ob.
	* DINO/O/DEBUG/et2atest.d (pr_tree): Check on exit-stmt.
	* DINO/O/FE/atree.d: Add scope to tdefs.proc.
	* DINO/O/FE/check.d (str_char): Use lexs instead of exprs.
	(is_of_char): New func.
	(type_extended): Check only t1 on ptr.
	(eq_type): Check only tp for proc return type.
	(not_assign_compatible): Fix cases for proc type and array of
	char.
	(case_tp): New variable.
	(case_lab_cmp): New function.
	(check_stmt): Use ranges for comparison.
	(check_op2): Fix nested declarations of opn.
	* DINO/O/FE/ctree.d (case_lab): New class.
	(case): New filed case_labs.
	* DINO/O/FE/et2at.d (tr_set_in): Rename it on tr_in.
	(tr_des_and_par): Use find instead of get.
	(tr_repeat): Fix typo in parameters.
	(tr_fps): Add new parameter.
	(tr_vfps): New function.
	(proc_p): New variable.
	(tr_formals): Change scope for proc type.
	(tr_proc): Use proc_p.
	* DINO/O/FE/o.y: Use new node vfps.
	* DINO/O/FE/scanner.d (p_char): Fix regexp.
	(scanner): Copy tok when it is changed.  Process exception for
	opening file.
	* DINO/O/LIB/error.d (simple_fatal): New function.
	(warn): Add prefix to message.

2003-12-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/O/DEBUG: New directory.
	* DINO/O/DEBUG/{chtest.d, et2atest.d, outest.d, parstest.d, scandeb.d,
	scantest.d}: New files.
	* DINO/O/DEBUG/{com-check, com-error, com-out, com-parse,
	com-scan, com-tree}: New files.
	* DINO/O/DEBUG/{Exp.ob, Export.ob, Imp.ob, List.ob, Sieve.ob}: New
	files.

2003-12-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/O: New directory.
	* DINO/O/FE: New directory.
	* DINO/O/FE{atree.d, check.d, ctree.d, et2at.d, lex.d, outsym.d,
	o.y, parser.d, scanner.d, table.d, tree.d}: New files.
	* DINO/O/MACH: New directory.
	* DINO/O/MACH/i386: New directory.
	* DINO/O/MACH/i386/machine.d: New file.
	* DINO/O/LIB: New directory.
	* DINO/O/LIB{comm.d, error.d}: New files.

2003-12-15  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (store_table_element, initiate_vars): Make the table
	key immutable.

	* DINO/dino.tst.in: New test #510 for checking that key became
	immutable.

	* DINO/dino.1: Remove apostrophes.

	* DINO/dino.sgml.in: Making immutable table key in assignment.

	* DINO/dino.txt, DINO/dino.ps, DINO/dino.info*, DINO/dino.dvi,
	DINO/dino*.html: Update.

2003-10-18  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_context.c (third_block_passing): Check return inside
	class/ext/function if it is in a scope.

	* DINO/dino.tst.in: New test 509 for return on the top level.

2003-09-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * configure.in: Check size of char *.

	* configure: Update.

	* AMMUNITION/cocom-config.h.in: Add undef for SIZEOF_CHAR_P.

	* AMMUNITION/earley.c (make_parse):  Add state to the stack even
	if the situation position is zero.

	* AMMUNITION/{earley.tst.in, earley++.tst.in}: Add test for empty
	rule with anode.

	* DINO/d_blocktab.{ch}: Rename them into d_runtab.{ch}.
	(initiate_blocks_table): Rename it onto initiate_run_tables.
	(set_func_class_no): New function.
	(finish_blocks_table): rename it onto finish_run_tables.

	* DINO/Makefile.in: Rename blocktab on runtab.

	* DINO/dino.dsp: Rename blocktab on runtab.

	* DINO/d_common.h: Define SIZEOF_CHAR_P for WIN32.

	* DINO/d_extern.sprut (func): Change field func onto func_no.
	(class): Change field class onto class_no.

	* DINO/d_func.c: Add include d_runtab.h.
	(internal_inside_call, array_sort_compare_function, sort_call,
	place_file_instance, print_val, create_instance,
	process_func_class_call, init_syntax_token, tree_to_heap,
	int_earley_parse): Use field func_{class_}no instead of
	func{class}.

	* DINO/d_heap.c: Rename blocktab on runtab.
	(node_mode_2_type, destroy_instances, hash_val, eq_key):

	* DINO/d_ir.sprut: (func_or_class, external_func): New field no.

	* DINO/d_context.c: Rename blocktab on runtab.
	(second_block_passing): Set up func_class_no.

	* DINO/d_dino.c: Rename blocktab on runtab.
	(dino_start): Rename finish_blocks_table on finish_run_tables.
	(dino_finish): Rename initiate_blocks_table on
	initiate_run_tables.

	* DINO/d_eval.c: Rename blocktab on runtab.
	(execute_a_period_operation): Use field func_{class_}no instead of
	func{class}.
	(evaluate_code): Ditto.

2003-05-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.tst.in (test 41): Print used memory for linux.

2003-04-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * d_ir_sprut (ir_node): New type.  Make it as a root.
	(logical_binary_operation): New abstract type.
	(logical_or, logical_and, cond): Inherit logical_binary_operation.
	(vector_table): New abstract type.
	(vector, table): Inherit vector_table.
	(elist): Rename field elist into next_elist.
	(class_func_thread_call): Rename field elist into actuals.
	(access_ident): Rename field public_flag onto
	access_ident_public_flag.
	(procedure_call): Rename field elist into proc_actuals.
	(for_break_continue): New abstract node.
	(break_stmt, continue_stmt): Inherit for_break_continue.
	(wait_stmt): Rename field scope into block_scope.
	(for_stmt): Rename field body_pc into for_body_pc.
	(foreach_stmt): Rename field body_pc into foreach_body_pc.
	(external_var_occurrence, var_occurrence,
	lvalue_external_var_occurrence, lvalue_var_occurrence): Make
	occurrence as the first supertype for them.
	(block_finish): Rename field simple_block_flag into
	simple_block_finish_flag.
	(char, int, float, string): Add new field whose value is value
	from the corresponding unique nodes.
	(find_decl): Use block_scope.

	* d_run.sprut (executed_stmts_count, process_quantum): Make them
	signed.
	(QUANTUM_SWITCH_PROCESS): Simplify it.

	* d_yacc.y: Use new field names actuals, proc_actuals, next_elist,
	block_scope, access_ident_public_flag.

        * d_extern.sprut (heap_obj): Add field immutable.
	(immutable_obj, context): Remove them.
	(heap_vect_tab, heap_hideblock): Inherit heap_obj.
	(context_heap_obj): New abstract type.
	(heap_instance, heap_stack, heap_process): Inherit context_heap_obj.

	* d_func.c (internal_inside_call): Use new field name block_scope.
	(get_file, get_stat, create_instance, init_read_token,
	int_earley_parse): Use new field name instance_class.

	* d_heap.c (heap_object_size, traverse_used_heap_object): Use new
	field name instance_class.
	(change_obj_refs): Use _ER_M_context_heap_obj instead of
	_ER_M_context.
	(profile_interrupt): Use new field name block_scope.
	(eq_instance): Use new field name instance_class.
	(hash_key): Use new field name block_scope, instance_class.
	(activate_process): Initialize as -process_quantum.
	(block_cprocess): Set up status as PS_STARTED if at least one
	statement has been executed.
	(process_quantum, executed_stmts_count): Make them signed.

	* d_context.c (first_expr_processing): Use new field names actuals
	and next_elist.
	(process_extension_block): Use new field name block_scope.
	(first_block_passing): Use new field names proc_actuals,
	next_elist, and block_scope.
	(second_block_passing): Use new field name
	access_ident_public_flag.
	(surrounding_class): Use new field name block_scope.
	(third_expr_processing): Set up new fields ch_val, i_val, f_val,
	str_val.  Use new field names actuals and next_elist.
	(find_covered_func_class_ext): Use new field name block_scope.
	(third_block_passing): Use new field names proc_actuals,
	next_elist, for_body_pc, foreach_body_pc,
	simple_block_finish_flag.
	(go_through): Use new field name simple_block_finish_flag.
	(fourth_expr_processing): Use new field names actuals,
	proc_actuals, next_elist, for_body_pc, foreach_body_pc.

	* d_eval.c (execute_a_period_operation): Use new field name
	block_scope.
	(find_catch_pc): Ditto plus instance_class.
	(evaluate_code): Use new field name simple_block_finish_flag.
	(fourth_expr_processing): Use new field names instance_class,
	next_elist, for_body_pc, foreach_body_pc and new fields ch_val,
	i_val, f_val, str_val.
	(eval_error): use new field name instance_class.

2003-03-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_types.h (__infinity): Add missed ;

2003-03-07  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* configure.in: Set up -finline-limit for x86 gcc.

	* configure: Update.

2003-03-07  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* configure.in: Use -fomit-frame-pointer for x86 gcc.

	* configure: Update.

	* DINO/d_run.sprut (FEW_REGISTERS): Define for x86.
	(below_ctop): define as macros if FEW_REGISTERS is defined.
	(SET_TOP, TOP_UP, TOP_DOWN): Make variants for FEW_REGISTERS.

	* DINO/d_heap.c (below_ctop): undefine if FEW_REGISTERS is defined.

2003-01-09  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (test #14): Output results and check them.

2002-12-09  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_heap.c (eq_instance): Check context too.

	* DINO/dino.tst.in: Add a new test for the change.

	* DINO/dino.sgml.in: Document the change.

	* DINO/dino.txt, DINO/dino.ps, DINO/dino.info*, DINO/dino.dvi,
	DINO/dino.html, DINO/dino-5.html, DINO/dino-10.html: Update.

2002-07-31  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_heap.c (remove_tab_el): Decrease number of elements too.

	* DINO/dino.tst.in (507th test): New test for checking the bug.

2002-05-21  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (distdir, distdinodir): Set up the new versions.

	* DINO/Makefile.in (DINO_VERSION):  Set up new version 0.55.

	* AMMUNITION/Makefile.in (distdir): Set up new version 0.996.

	* MSTA/Makefile.in (distdir): Ditto.

	* NONA/Makefile.in (distdir): Ditto.

	* OKA/Makefile.in (distdir): Ditto.

	* SHILKA/Makefile.in (distdir): Ditto.

	* SPRUT/Makefile.in (distdir): Ditto.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* CHANGES, DINO-CHANGES: Update them.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/socket_int.c (h_errno): Check cywgin too.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* OKA/gen.c (unit_on_all_alternatives,
	form_the_same_automaton_unit_lists_from_expression): Process
	nothing.

	* DINO/compare.tst (test 4): Remove wait.

	* DINO/dino.tst.in (78, 79, 81): Process ia64 output.

	* DINO/socket.d (stream_server): Remove debuging output.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* OKA/oka.sgml.in: Add comments about checking automata of units
	in exclusion and on reservation alternatives.

	* OKA/{oka-2.html, oka.dvi, oka.info, oka.ps, oka.txt}: Update.

2002-05-17  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* OKA/oka.tst: New file.

	* OKA/Makefile.in (additional_files): Add oka.tst
	(test-oka test-sched): New entries.
	(test): Use them.
	(gen.c): Update dependencies.

	* OKA/alpha-ev5.oka (multiply): Remove the automaton.

	* OKA/anal.c (add_exclusion_list): Check automata of the units and
	report if they are not the same.

	* OKA/gen.c (position.h, errors.h): Add teh included files.
	(the_same_automaton_lists): New variable.
	(unit_on_all_alternatives,
	form_the_same_automaton_unit_lists_from_expression,
	form_the_same_automaton_unit_lists,
	check_unit_distributions_to_automata): New functions.
	(generate): Call check_unit_distributions_to_automata.  Check
	number_of_errors after that.

	* OKA/ird.sprut (single_unit_declaration): Add new fields
	the_same_automaton_unit, the_same_automaton_message_reported_p.

2002-05-15  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (sit_number): Add the sit_number.
	(sit_create): Initiate it.
	(sit_print): Print it.
	(set_insert): Use it in sorting.
	(error_recovery): Add debug print about building the new set.

2002-05-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* SPRUT/{A_base.sprut, A_syntax.sprut, A_test.sprut,
	A_value.sprut, Makefile.in, anal.c, anal.h, common.c, common.h,
	gen.c, gen.h, ird.sprut, main.c, sprut-ird.c, sprut-ird.h,
	sprut.tst, std_bmem.sprut, std_mem.sprut, std_pos.sprut,
	std_str.sprut, std_type.sprut, tab.c, tab.h, yacc.h, yacc.y}:
	Copyright in the file headers.

	* SHILKA/{Makefile.in, ada-standards.shilka, ada.shilka, anal.c,
	anal.h, b.shilka, c.shilka, common.c, common.h, cpp.shilka,
	d.shilka, gcc.shilka, gen.c, gen.h, gpc.shilka, ird.sprut,
	java.shilka, main.c, modula2.shilka, modula3.shilka,
	pascal.shilka, shilka.tst.in, tab.c, tab.h, yacc.h, yacc.y}:
	Ditto.

	* NONA/{Makefile.in, a29k.nona, anal.c, anal.h, common.c,
	common.h, gen.c, gen.h, ird.sprut, main.c, tab.c, tab.h, yacc.h,
	yacc.y}: Ditto.

	* OKA/{Makefile.in, alpha-ev4.oka, alpha-ev5.oka, anal.c, anal.h,
	common.c, common.h, gen.c, gen.h, ird.sprut, main.c, tab.c, tab.h,
	yacc.h, yacc.y}: Ditto.

	* OKA/SCHEDULE/{schedtst.c, schedtst.cpp, schedule++.tst.in,
	schedule.c, schedule.cpp, schedule.h, schedule.tst.in, test.oka}:
	Ditto.

	* MSTA/{Makefile.in, anal.c, anal.h, common.c, common.h,
	compare.tst.in, contexts.c, contexts.h, descript.c, descript.h,
	gen-comm.c, gen-comm.h, gen.c, gen.h, ird.sprut, la-trie.c,
	la-trie.h, lr-sets.c, lr-sets.h, lr.c, lr.h, main.c,
	oberon2-kw.shilka, output.c, output.h, p-yacc.y, parser.c,
	parser.h, quality.tst.in, regular.c, regular.h, relation.c,
	relation.h, tab.c, tab.h, yacc.h, yacc.y}: Ditto.

	* DINO/{Makefile.in, compare.tst, d_blocktab.c, d_blocktab.h,
	d_built.h, d_common.h, d_context.c, d_context.h, d_conv.c,
	d_conv.h, d_dino.c, d_dino.h, d_errors.c, d_errors.h, d_eval.c,
	d_eval.h, d_extern.sprut, d_func.c, d_func.h, d_heap.c,
	d_ir.sprut, d_kw.shilka, d_main.c, d_run.sprut, d_types.h,
	d_yacc.h, d_yacc.y, dino.tst.in, ieee.d, ieee_int.c, ipcerr.d,
	ipcerr_int.c, mpi.c, mpi.d, socket.d, socket_int.c}: Ditto.

	* DINO/Examples/{extern.d, fact.d, fibonacci.d, idcount.d, mult.d,
	prodcons.d, sieve.d, tak.d, tmult.d}: Ditto.

	* AMMUNITION/{IEEE++.tst.in, IEEE.c, IEEE.cpp, IEEE.h,
	IEEE.tst.in, Makefile.in, allocate++.tst.in, allocate.c,
	allocate.cpp, allocate.h, allocate.tst.in, arithm++.tst.in,
	arithm.c, arithm.cpp, arithm.h, arithm.tst.in, bits++.tst.in,
	bits.c, bits.cpp, bits.h, bits.tst.in, commline++.tst.in,
	commline.c, commline.cpp, commline.h, commline.tst.in,
	earley++.tst.in, earley.c, earley.cpp, earley.h, earley.tst.in,
	errors++.tst.in, errors.c, errors.cpp, errors.h, errors.tst.in,
	hashtab++.tst.in, hashtab.c, hashtab.cpp, hashtab.h,
	hashtab.tst.in, objstack++.tst.in, objstack.c, objstack.cpp,
	objstack.h, objstack.tst.in, position++.tst.in, position.c,
	position.cpp, position.h, position.tst.in, sgramm.y,
	ticker++.tst.in, ticker.c, ticker.cpp, ticker.h, ticker.tst.in,
	vlobject++.tst.in, vlobject.c, vlobject.cpp, vlobject.h,
	vlobject.tst.in}: Ditto.

	* Makefile.in: Ditto.

2002-05-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (PATH_MAX): Define it for WIN32.

	* DINO/d_yacc.y (PATH_MAX): Ditto.

	* DINO/dino.tst.in (506): Indentation.

2002-05-12  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (506): Add Serhei's interpriter.

2002-05-11  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (set_core_hash, parse_state_hash,
	trans_visit_node_hash, reserv_mem_hash): Use size_t.

2002-05-11  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_heap.c (expand_vector): Fix bug with disp.

	* DINO/d_func.c (tree_heap_node_hash): Use size_t.

	* DINO/socket_int.c (h_errno): Check on macro.

2002-05-10  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (357): Fix missed changing stderr onto ftemp.

2002-05-10  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/la-trie.c: Include gen-comm.h.

	* MSTA/Makefile.in: Update dependencies.

	* DINO/socket_int.c (_recvfrom, _accept): Use always int for
	length under HPUX.

	* DINO/dino.tst.in (357): Use env instead of set.

	* DINO/d_yacc.y (canonical_path_name): Use PATH_MAX instead of
	FILENAME_MAX.

	* DINO/d_func.c (getcwd_call): Ditto.
	Include unistd.h.

	* DINO/compare.tst: Use /dev/null as AWK input for startup test.

	* cocom/cocom.dsw: Add projects ipcerr and socket.

2002-05-09  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/IEEE++.tst.in: Extend arrays for results.

	* DINO/Makefile.in (test-dino, compare-dino): New entries.

	* DINO/dino.tst.in: Add processing zero division tests for
	ppc-linux.
	(357): Remove LS_COLORS.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/IEEE.tst.in: Extend arrays for results.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (357): Try a few environement variables.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (499): Try absent service too for non CYGWIN.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* SHILKA/Makefile.in (test): Don't compare if there is no gperf.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* configure.in (DINO_ADDITIONAL_LIBS): Add socket and ipcerr.

	* configure: Update.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_context.c (fourth_expr_processing): Make the result type
	void.
	(fourth_block_passing): Remove variables temp and elist.

	* DINO/d_eval.c (find_catch_pc): Don't pop the uppest stack.
	(evaluate_code): Don't check cpc in the cycle.  Fix typo in
	setting up the heap instance mode.  Make return on `return' and
	`block_finish' when cpc == NULL.  Don't pop up the uppest stack.
	(call_func_class): Check cpc before evaluate_code.

	* DINO/d_extern.sprut (spi): Add missed parameter for
	create_pack_vector.
	(create_pack_vector): Add and use the missed parameter.

	* DINO/d_func.c (match_call): Remove variable vect.
	(gmatch_call): Ditto.  Remove els_number.
	(seek_call): Remove res.
	(initiate_io, finish_io): Make the function result void.
	(gc_call): Remove result.
	(exit_call): Remove val and vect.
	(process_func_class_call): Remove class.
	(int_earley_parse): Remove i and save_pos_ptr.
	(int_earley_create_grammar): Remove code.

	* DINO/d_heap.c (final_call_destroy_functions): Add assert to
	check that uppest stack was not popped up.  Check cstack not NULL.
	Set up ctop and cpc when cstack is the uppest stack.
	(hash_key): Remove j and el_type.
	(spi): Add miised create_pack_vector.

	* DINO/d_yacc.y (canonical_path_name): Expand name on 2 bytes on
	WIN32.
	(full_file_name): Remove buf.

	* DINO/dino.tst.in: Add parameter that the interpreter built by
	the Visual C.
	(CMP): Remove CR from the second file too.
	(SCMP): New shell variable.
	(228): Use the new parameter.
	(230): Remove Dos drive and change \ onto /.
	(357): Remove some shell varaibles from the environemnt.
	(437, 438): Try also concatenated stdout and stderr in another
	order.
	(453): Use suffix .dll for CYGWIN.
	(457 - 461): Use SCMP.
	(487): Try additional digit in the exponent.
	(495): Increase datagram message buffer.
	(497): Use suffix .dll and canonized path in the error message.
	(499): Try absent service too for CYGWIN.

	* DINO/ipcerr_int.c (_ipc_err_init): Fix typo with eltype of
	vector _eos_specific_nos.  Return nil.
	(ipcerr_address): Return addresses of external objects.

	* DINO/mpi.c (mpi_unary_op): Fix typo with setting up var.
	(from_based_string): Fix typo in assert.

	* DINO/socket.d: Add functions destroy.

	* DINO/socket_int.c: Remove winsock2.h.
	(socklen_t): Define it for WIN32.
	(get_ip_address): Fix typo in WSAGetLastError.
	(_gethostinfo): Remove addr_p and str.  Fix typo in
	WSAGetLastError.
	(form_servent): Don't setup errno for WSANO_DATA.  Fix typo in
	WSAGetLastError.
	(_sread, _swrite): Fix typo in WSAGetLastError.
	(_recvfrom, _sendto, _accept, _stream_client): Ditto.
	(_dgram_client): Ditto.  Remove addr, port, saddr, sin_addr_ptr.
	(_stream_server): Remove addr, sin_addr_ptr.
	(_dgram_server): Remove addr, queue_len, sin_addr_ptr.  Fix typo
	in WSAGetLastError.
	(socket_address): Return addresses of external objects.

	* dinolang/dinolang.dsw: Add socket project.

2002-05-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (earley_create_grammar): Initialize cost_p.

2002-04-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_dino.c (dino_finish): Call final_call_destroy_functions.
	Process negative code.
	(error_func_for_allocate): Use the negative code.

	* DINO/d_heap.c (final_call_destroy_functions): New function.
	(mark_instances_need_destroying): Add new parameter.
	(mark_used_heap_objects): Call mark_instances_need_destroying with
	the parameter.

	* DINO/d_run.sprut (final_call_destroy_functions): New prototype.

	* DINO/dino.tst.in: Add new tests for final destroying.

	* DINO/socket.d (_socket_fin, _close_socket): New declarations.
	(destroy): New functions in __socket_package, stream_client,
	dgram_client, stream_server, dgram_server.

	* DINO/socket_int.c (_close_socket, _socket_fin): New functions.
	(socket_initialized_p): New static variable.
	(_socket_init): Set up socket_initialized_p.
	(socket_address): Add references for _close_socket, _socket_fin.

	* DINO/dino.sgml.in: Calling destroy by finishing the program.

	* DINO/{dino.dvi, dino.info*, dino.ps, dino.txt, dino.html,
	dino-4.html}: Update.

2002-04-29  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in: New tests for getservbyname, getservbyport.

	* DINO/ipcerr.d: Add _eos_specific_nos and _eos_specific_msgs.

	* DINO/ipcerr_int.c: Ditto.
	(set_ipc_os_error): New function.
	(_ipc_err_init): Add windows errors.

	* DINO/socket.d (_setservent, _getservent, _endservent): Remove
	them.
	(_getservbyport, _getservbyname): New externals.
	(getservices): Remove it.
	(getservbyport, getservbyname): Use _getservbyport and
	_getservbyname.

	* DINO/socket_int.c: Add code for windows.
	(_setservent, _getservent, _endservent): Remove them.
	(_getservbyport, _getservbyname, form_servent): New functions.

2002-04-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (find_context_by_scope): Remove checking cached
	value by NULL.
	(push_var_val): Add code for cached variable address value.
	(evaluate_code): Set up unique number for copied instance.

	* DINO/d_heap.c (heap_push, heap_pop): Always increase the tick.
	(copy_vector): Set up unique number for copied vector.

	* DINO/d_ir.sprut (block): Change comment for the cached address.
	(var): New fields `var_cached_address' and
	`var_cached_container_tick'.

	* DINO/dino.tst.in: Add test for the cashes in complicated cases.

2002-04-11  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_ir.sprut (ENVIRONMENT): Rename i into __i.

	* DINO/d_func.c (init_syntax_token): Add processing attributes
	equal to NULL.

	* DINO/dino.sgml.in: Add comments about possible nil values for
	attributes in function syntax_error.

	* dino.info, dino.info-1, dino.info-2, dino.info-3, dino.info-4,
	dino.ps, dino.dvi, dino.txt, dino-8.html, dino-10.html: Update.

2002-03-31  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

        * DINO/dino.sgml.in: Edit it.

	* DINO/dino.1: Ditto.

	* DINO/dino.html, DINO/dino-1.html, DINO/dino-2.html,
	DINO/dino-3.html, DINO/dino-4.html, DINO/dino-5.html,
	DINO/dino-6.html, DINO/dino-7.html, DINO/dino-8.html,
	DINO/dino-10.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.dvi, DINO/dino.txt: Update.

2002-03-28  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.spec, dino.spec: Use %attr for %doc.

	* DINO/d_dino.h (STANDARD_DINO_EXTERN_LIBS): Add ipcerr and
	socket.

	* DINO/d_func.c (process_errno_call): Remove assert.

	* DINO/dino.1: Add ipcerr and socket.

	* DINO/dino.dvi, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

	* DINO/dino.tst.in: Add tests for socket.

2002-03-28  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.spec: New file.

	* dino.spec: New file.

	* Makefile.in, AMMUNITION/Makefile.in, DINO/Makefile.in,
	MSTA/Makefile.in, NONA/Makefile.in, OKA/Makefile.in,
	SHILKA/Makefile.in, SPRUT/Makefile.in: Add DESTDIR needed for RPM.

2002-03-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in: Check only_cocom_source_files on empty.

	* acconfig.h (socklen_t, HAVE_INET_ATON): New undefs.

	* configure.in: Check type scoklen_t, function inet_aton, and
	libaray -lxnet.

	* configure: Update.

	* AMMUNITION/cocom-config.h.in: Update.

	* DINO/Makefile.in (ipcerr_lib): New macro.
	(DINO_EXTERN_LIBS, DINO_EXTERN_LIBS_PATH, source): Add files for
	ipcerr.
	(ipcerr_lib): New rule for building.
	(install, uninstall, create-distdir, depend): Add files for
	ipcerr.
	Update dependencies.

	* DINO/compare.tst: Add test numbers.

	* DINO/d_main.c (get_library_search_function): Add code for ipcerr
	and socket.
	(ipcerr_address, socket_address): Add externals.

	* DINO/d_built.h (process_errno_call): New prototype.

	* DINO/d_func.c (process_system_errors): Use strerror for
	default message.
	(process_errno_call): New function.

	* DINO/d_ir.sprut (ENVIROMENT): New function __process_errno__.
	(PROCESS_ERRNO_NAME): New macro.
	(process_errno_decl): New global variable.
	(decls_table): Add entry for __process_errno__.

	* DINO/socket.d (ipcerr): Include it.
	(socket_error): Extend error.
	(invalid_address, host_not_found, no_address, no_recovery): New
	classes in socket_error.
	(socket_errors): New variable.
	(socket_excepts): remove it from __scoket_package.
	(_socket_invalid_address, _socket_host_not_found,
	_socket_no_address, _socket_no_recovery, _socket_try_again): New
	private external vars.
	(generate_socket_exception): Change it.  Remove parameter.

	* DINO/socket_int.c: Include d_config.h.
	(_socket_invalid_address, _socket_host_not_found,
	_socket_no_address, _socket_no_recovery, _socket_try_again): New
	global vars.
	(get_ip_address, _gethostinfo, _getservent, _sread, _swrite,
	_recvfrom, _sendto, _accept, _stream_client, _dgram_client,
	_stream_server, _dgram_server): Process errors.
	(_socket_init): Set up _socket_invalid_address,
	_socket_host_not_found, _socket_no_address, _socket_no_recovery,
	_socket_try_again.
	(socket_address): New function.

	* MSTA/Makefile.in: Update dependencies.

	* NONA/Makefile.in: Ditto.

	* OKA/Makefile.in: Ditto.

	* SHILKA/Makefile.in: Ditto.

	* SPRUT/Makefile.in: Ditto.

	* AMMUNITION/Makefile.in: Ditto.

	* DINO/ipcerr.d: New file.

	* DINO/ipcerr_int.c: New file.

2002-03-18  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (earley_set_lookahead_level): Check the
	parameter level and change it if it is not in the range.

	* AMMUNITION/{earley.tst.in, earley++.tst.in}: Add tests with
	lookahead level not in the range.

	* AMMUNITION/{ammunition.sgml.in, ammunition++.sgml.in}: Comments
	about the lookahead value not in ther range.

        * AMMUNITION/{ammunition++-13.html, ammunition++.dvi,
	ammunition++.info, ammunition++.info-1, ammunition++.info-2,
	ammunition++.info-3, ammunition++.info-4, ammunition++.ps,
	ammunition++.txt, ammunition-13.html, ammunition.dvi,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.ps, ammunition.txt}: Update.

	* DINO/d_ir.sprut (int_earley_set_lookahead_level, set_lookahead):
	New functions in the environment.
	(INT_EARLEY_SET_LOOKAHEAD_LEVEL_NAME): New macro.
	(int_earley_set_lookahead_level_decl): New global variable.
	(decls_table): Add entry for int_earley_set_lookahead_level.

	* DINO/d_built.h (int_earley_set_lookahead_level): New extrenal
	definition.

	* DINO/d_func.c (int_earley_set_lookahead_level): New function.

	* DINO/dino.tst.in: New tests for set_lookahead.

	* DINO/dino.sgml.in (set_lookahead): Describe it.

	* DINO/{dino-10.html, dino-8.html, dino.dvi, dino.html, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt): Update.

2002-03-15  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (int_earley_parse): Process case root==NULL.

	* DINO/dino.tst.in: Add test for parse returning nil.

	* DINO/dino.sgml.in: Add comments about returning nil by function
	parse.

	* DINO/{dino.html, dino-8.html, dino-10.html, dino.dvi, dino.dvi,
	dino.info, dino.info-1, dino.info-2, dino.info-3, dino.info-4,
	dino.ps, dino.txt}: Update.

	* AMMUNITION/{ammunition.sgml.in, ammunition++.sgml.in}: Fix typo.

	* AMMUNITION/{ammunition++-13.html, ammunition++.dvi,
	ammunition++.info, ammunition++.info-1, ammunition++.info-2,
	ammunition++.info-3, ammunition++.info-4, ammunition++.ps,
	ammunition++.txt, ammunition-13.html, ammunition.dvi,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.ps, ammunition.txt}: Update.

2002-03-14  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/earley.c (make_parse): Check found reduce situation
	always.

	* AMMUNITION/earley.tst.in: Add test for right recursion.

	* AMMUNITION/earley++.tst.in: Ditto.

2002-03-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_heap.c (eq_vector): Fix typo in the 2nd argument of eq_val in
	comparison of unpacked vectors.

2002-03-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_heap.c (eq_key): Process nil too.

2002-03-08  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/socket.d: New file.

	* DINO/socket_int.c: New file.

	* DINO/Makefile.in: Add building sockets module.

	* DINO/d_heap.c (move_object): Check that the tailored size is less
	than the original one.
	(compact_heap): Take moved stacks into account of checking the
	last heap chunk.

2002-03-08  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/{ammunition++.dvi, ammunition++.info,
	ammunition++.info-1, ammunition++.info-2, ammunition++.info-3,
	ammunition++.info-4, ammunition++.ps, ammunition.dvi,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.ps): Update.

2002-03-08  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_heap.c (unpack_vector): Set up mode after moving the
	value.

	* DINO/compare.tst: Add Dino test for sockets.

2002-02-27  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in: Remove CR for test outputs under Cygwin.

2002-02-11  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/common.h (error_conflict_flag, error_single_definition):
	Add it.

	* MSTA/common.c (error_conflict_flag, error_single_definition):
	Add it.

	* MSTA/anal.c (process_definition_list): Use
	errro_single_definition instead of single_definition.

	* MSTA/gen-comm.h (error_single_definition): Remove it.

	* MSTA/gen-comm.c (error_single_definition): Ditto.

	* MSTA/gen.c (find_error_single_definition): Remove it.
	(generate): Don't call it.

	* MSTA/la-trie.c (set_up_default_LR_situation_of_trie_level):
	Don't make default for LR-set containing `... error .' too.

	* MSTA/lr.c (contains_error): New function.
	(add_context_conflicts): Use error_conflict_flag and the function.

	* MSTA/main.c: Add options -(no-)error-conflict.
	(main): Add error_conflict_flag.

	* MSTA/msta.tst.in: Add tests for options -(no-)error-conflict.

	* MSTA/msta.1: Add description of options -(no-)error-conflict.

	* MSTA/msta-5.html, MSTA/msta.dvi, MSTA/msta.info,
	MSTA/msta.info-1, MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.txt:
	Update.

2002-02-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/common.h (error_conflict_flag): Remove it.

	* MSTA/common.c (error_conflict_flag): Remove it.

	* MSTA/lr.c (contains_error): Remove.
	(add_context_conflicts): Remove error_conflict_flag.

	* MSTA/main.c: Remove options -(no-)error-conflict.
	(main): Remove error_conflict_flag.

	* MSTA/msta.tst.in: Remove test for options -(no-)error-conflict.

	* MSTA/msta.1: Add description of options -(no-)error-conflict.

	* MSTA/msta-5.html, MSTA/msta.dvi, MSTA/msta.info,
	MSTA/msta.info-1, MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.txt:
	Update.

2002-02-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (distdir, distdinodir): Change it.

	* MSTA/Makefile.in (distdir): Change it.

2002-02-10  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/Makefile.in: Use -local-error-recovery.

	* DINO/dino.dsp: Ditto.

2002-02-08  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/common.h (error_reduce_flag, error_conflict_flag): New
	external definition.

	* MSTA/common.c (error_reduce_flag, error_conflict_flag): New
	variables.

	* MSTA/lr.c (contains_error): New function.
	(add_context_conflicts): Don't add conflict on error if not
	error_conflict_flag.

	* MSTA/main.c: Add options -(no-)error-reduce,
	-(no-)error-conflict.
	(main): Set up error_reduce_flag and error_conflict_flag.

	* MSTA/gen.c (set_up_LR_set_some_field_standard_values): Set up
	field it_is_errored_LR_set.

	* MSTA/la-trie.c (set_up_default_LR_situation_of_trie_level):
	Don't set up default reduce if not error_reduce_flag.

	* MSTA/parser.c (YYRESTORE_AND_TRY_NEXT_ERROR_LABEL_NAME): New
	macro.
	(output_switch): Use `goto yyrestore_and_try_next_error' instead
	of YYABORT.
	(output_code_before_switch): Use yyrestore_and_try_next_error.
	Clear yychar after end of one error recovery try.
	(output_parser_itself): Set up yychar and yylval at the end of
	error recovery.

	* MSTA/msta.tst.in: New tests for options -(no-)error-reduce,
	-(no-)error-conflict.

	* MSTA/msta.1: Add description of options -(no-)error-reduce,
	-(no-)error-conflict.

	* MSTA/msta-5.html, MSTA/msta.dvi, MSTA/msta.info,
	MSTA/msta.info-1, MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.txt:
	Update.

2002-02-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* MSTA/parser.c (YYERROR_MESSAGE_MACRO_NAME): New macro.
	(output_definitions_outside_yyparse): Output the new macro
	definition.
	(output_shift_pop_actions): Output setting up yyprev_char for all
	regimes.
	(output_switch): Use YYERROR_MESSAGE.  Output setting up
	yyprev_char for all regimes.
	(output_definition_inside_yyparse): Output definition of
	yyprev_char for all regimes.
	(output_parser_itself): Output clearing yychar and setting up
	yyprev_char at the end of minimal cost error recovery.

	* MSTA/msta.sgml.in (YYERROR_MESSAGE): Describe the new macro.

	* MSTA/msta-3.html, MSTA/msta.dvi, MSTA/msta.ps, MSTA/msta.txt,
	MSTA/msta.info*: Update.

2002-01-28  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (additional_files): Add fcalc1.y.

	* MSTA/common.h (YACC_ERROR_RECOVERY, LOCAL_ERROR_RECOVERY,
	MINIMAL_ERROR_RECOVERY): New macros.
	(yacc_error_recovery_flag): Rename it into msta_error_recovery.

	* MSTA/common.c (yacc_error_recovery_flag): Rename it into
	msta_error_recovery.

	* MSTA/main.c (COMMAND_LINE_DESCRIPTION_PART3, main): Rename
	-no-yacc-error-recovery into -local-error-recovery.  Add new
	option -minimal-error-recovery.  Make -yacc-error-recovery by
	default.

	* MSTA/ird.sprut (LR_set): Add field it_is_errored_LR_set.

	* MSTA/regular.c (mark_semantic_pushed_LR_sets): Setup flag
	it_is_errored_LR_set.

	* MSTA/parser.c (ERRORED_STATE_FLAGS_VECTOR_NAME,
	YYUNDEFINED_RECOVERY_COST_MACRO_NAME,
	YYEXPAND_SAVED_STATES_BUFFER_FUNCTION_NAME,
	YYEXPAND_SAVED_ATTRIBUTES_BUFFER_FUNCTION_NAME,
	YYINCREASE_TOKENS_BUFFER_FUNCTION_NAME): New macros.
	(output_errored_states_table): New function.
	(output_parser_tables): Call the new function.
	(output_include_directives): Add include file limits.h.
	(YYSTATE_TOKEN_NUMS_VARIABLE_NAME,
	YYSAVED_STATE_TOKEN_NUMS_VARIABLE_NAME,
	YYSAVED_STATES_VARIABLE_NAME, YYSAVED_ATTRIBUTES_VARIABLE_NAME):
	New macros.
	(output_inside_outside_definitions): Add code for minimal error
	recovery.
	(output_saved_state_or_attribute_buffer_expansion_function_title,
	output_token_buffer_increase_function_title): New functions.
	(output_class_start, output_class_start): Add code for minimal
	error recovery.
	(YYNEXT_ERROR_LABEL_NAME, YYERR_RECOVERY_TRY_END_LABEL_NAME,
	YYRECOVERY_FINISH_LABEL_NAME, YYSAVED_STATES_END_VARIABLE_NAME,
	YYSAVED_ATTRIBUTES_END_VARIABLE_NAME,
	YYLOOK_AHEAD_CHAR_END_VARIABLE_NAME, YYCHAR_PTR_VARIABLE_NAME,
	YYERROR_STATE_VARIABLE_NAME, YYBEST_ERROR_STATE_VARIABLE_NAME,
	YYERROR_ATTRIBUTE_VARIABLE_NAME,
	YYBEST_ERROR_ATTRIBUTE_VARIABLE_NAME,
	YYRECOVERY_COST_VARIABLE_NAME, YYBEST_RECOVERY_COST_VARIABLE_NAME,
	YYERROR_STATE_NUM_VARIABLE_NAME,
	YYBEST_ERROR_STATE_NUM_VARIABLE_NAME,
	YYERROR_ATTRIBUTE_NUM_VARIABLE_NAME,
	YYBEST_ERROR_ATTRIBUTE_NUM_VARIABLE_NAME,
	YYTOKEN_IGNORED_NUM_VARIABLE_NAME,
	YYBEST_TOKEN_IGNORED_NUM_VARIABLE_NAME,
	YYCURR_TOKEN_NUM_VARIABLE_NAME, YYERROR_TOKEN_NUM_VARIABLE_NAME,
	YYLOOK_AHEAD_CHAR_END_VARIABLE_NAME): New macros.
	(output_look_ahead_arrays_length,
	output_definitions_outside_yyparse,
	output_state_or_attribute_stack_expansion,
	output_states_stack_check, output_states_stack_check,
	output_states_stack_check, output_shift_pop_actions,
	output_shift_pop_actions, output_debug_print_about_saving_token,
	output_check_yyfirst_char_ptr): Add code for minimal error
	recovery.
	(output_saving_token, output_increase_tokens_buffer,
	output_restoring_minimal_recovery_state): New functions.
	(output_switch, output_definition_inside_yyparse,
	output_code_before_switch, output_initiation_code,
	output_scanner_array_variables_allocatio,
	output_parser_array_variables_allocation, output_free_arrays,
	output_parser_itself): Add code for minimal error recovery.

	* MSTA/quality.tst.in: New tests 46 and 47 for minimal error
	recovery.  Use option -local-error-recovery.

	* MSTA/msta.1: Rename -no-yacc-error-recovery into
	-local-error-recovery.  Add new option -minimal-error-recovery.
	Make -yacc-error-recovery by default.

	* cocom.sgml.in: Add information about the new error recovery
	method.

	* MSTA/msta.sgml.in: Add information about the new (minimal) error
	recovery method.

	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.txt: Update.

        * MSTA/msta-1.html, MSTA/msta-3.html, MSTA/msta-5.html,
	MSTA/msta.1, MSTA/msta.dvi, MSTA/msta.info, MSTA/msta.info-1,
	MSTA/msta.info-2, MSTA/msta.ps, MSTA/msta.sgml.in, MSTA/msta.txt:
	Update.

2001-12-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_built.h (int_earley_set_cost_flag): New prototype.

	* d_ir.sprut (ENVIRONMENT): New Dino variables nil_anode and
	error_anode, new functions int_earley_set_cost_flag and set_cost.
	(nil_anode_decl, error_anode_decl, int_earley_set_cost_flag_decl):
	New variables.
	(NIL_ANODE_NAME, ERROR_ANODE_NAME, INT_EARLEY_SET_COST_FLAG_NAME):
	New macros.
	(decls_table): New entries for nil_anode, error_anode,
	int_earley_set_cost_flag.

	* d_func.c (int_earley_set_cost_flag): New function.
	(tree_to_heap): Use nil_anode_decl and error_anode_decl.
	(init_parse_alloc): Rename it into int_parse_alloc.
	(int_earley_parse): Add new parameter for earley_parse.

	* dino.tst.in (265, 284): New expected positions for argv and env.

	* dino.sgml.in (nil_anode, error_anode): New environment
	variables.
	(set_cost): New parser function.

	* dino.html, dino-4.html, dino-8.html,, dino.dvi, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt: Update.

2001-12-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * earley.h (EARLEY_NIL_TRANSLATION_NUMBER, EARLEY_NEGATIVE COST):
	new macros.
	(earley_anode): New member cost.
	(earley_set_cost_flag, set_cost_flag): New functions.
	(earley_parse, parse): New parameter parse_free.
	(read_rule): New parameter anode_cost.

	* earley.c (grammar): New member cost_p.
	(parse_free): New global variable.
	(rule): New member anode_cost.
	(rule_new_start): New parameter anode_cost.
	(earley_read_grammar): New parameter anode_cost.
	(earley_set_cost_flag): New function.
	(trans_print_node): Rename it trans_visit_node.
	(trans_print_node_hash): Rename it trans_visit_node_hash.
	(trans_print_node_eq): Rename it trans_visit_node_eq.
	(trans_print_nodes_tab): Rename it trans_visit_nodes_tab.
	(trans_print_nodes_os): Rename it trans_visit_nodes_os.
	(n_trans_print_nodes): Rename it n_trans_visit_nodes.
	(reserv_mem_tab, tnodes_vlo): New global variables.
	(reserv_mem_hash, reserv_mem_eq, prune_to_minimal,
	traverse_pruned_translation, find_minimal_translation): New
	functions.
	(make_parse): Change NULL onto empty node after processing the
	corresponding rule. Change pl_ind even if we don't nee a
	translation (a bug). Add building minimal tree(s).  Setup original
	cost to abstract nodes.
	(earley_parse): New parameter parse_free.
	(read_rule): New parameter anode_cost.  Set up anode_cost.
	(use_functions, use_description): Add the new parameters.

        * earley.cpp (earley::read_grammar): New paarmeter anode_cost.
	(earley::set_cost_flag): New function.
	(earley::parse): New parmeter parse_free.
	(use_functions, use_description): Add the new paremeters.

	* sgramm.y: Add rules for cost and empty nodes.
	(srule): New member anode_cost.
	(anode_cost): New global variable.
	(yylex): New lexema '-'.
	(sread_rule): New parameter anode_cost.

	* earley.tst.in, earley++.tst.in: New shell variable srdcir.  Add
	new parameters for (erley_)parse and read_rule.
	(42-47): New tests for costs and empty nodes.

	* ammunition.sgml.in, ammunition++.sgml.in: Add building minimal
	cost trees.  New grammar syntax for transaltion (cost and `-').
	(macro EARLEY_NIL_TRANSLATION_NUMBER, macro EARLEY_NEGATIVE COST,
	member cost, parameter anode_cost, function earley_set_cost_flag,
	public function set_cost_flag, parameter parse_free): Describe
	them.

	* ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.info-4, ammunition.dvi,
	ammunition.ps, ammunition.txt, ammunition-13.html,
	ammunition.info, ammunition.info-1, ammunition.info-2,
	ammunition.info-3, ammunition.info-4, ammunition.dvi,
	ammunition.ps, ammunition.txt, ammunition-13.html: Update.

	* cocom.sgml.in: Add building minimal cost trees.

	* cocom.dvi, cocom.html, cocom.info, cocom.ps, cocom.txt: Update.

2001-11-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/compare.tst: Check for failing tests.

2001-11-22  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_common.h (source_position_ptr): Remove it.
	(SET_SOURCE_POSITION_PTR): Ditto.

	* DINO/d_context.c (type_test, third_expr_processing,
	third_block_passing): Use source_position instead of
	source_position_ptr.

	* DINO/d_dino.c (source_position_ptr): Remove it.
	(error_func_for_allocate, exception_action): Use IR_pos (cpc)
	instead of source_position_ptr.

	* DINO/d_errors.c (yyerror): Use source_position instead of
	source_position_ptr.

	* DINO/d_eval.c (FIND_CONTEXT_BY_SCOPE): New macro.
	(find_context_by_scope): Use it.
	(find_context_by_scope): New macro.
	(execute_a_period_operation, check_vector_index,
	store_vector_element, load_table_element, store_table_element):
	Use IR_pos (cpc) instead of source_position_ptr.
	(load_designator_value): Remove parameter and
	SET_SOURCE_POSITION_PTR.
	(store_designator_value):
	(store_designator_value): Remove SET_SOURCE_POSITION_PTR.
	(prepare_op_assign): Call load_designator_value without the
	parameter.  Use IR_pos (cpc) instead of source_position_ptr.
	(execute_div_op, execute_mod_op, execute_concat_op): Use IR_pos
	(cpc) instead of source_position_ptr.
	(evaluate): Move its code into evaluate_code.  Remove it.  Use
	IR_pos (cpc) instead of source_position_ptr.

	* DINO/d_func.c (min_max_call, to_lower_upper, eltype_call,
	keys_call, context_call, inside_call, process_regcomp_errors,
	match_call, gmatch_call, generall_sub_call, split_call, subv_call,
	cmpv_call, del_call, general_ins_call, rev_call,
	array_sort_compare_function, sort_call, two_strings_func_start,
	string_func_start, getcwd_call, get_stat, file_start, open_call,
	flush_call, tell_call, seek_call, file_function_call_start,
	general_put_call, general_get_call, general_get_ln_file_call,
	get_call, getln_call, getf_call, fget_function_call_start,
	fgetf_call, invinput_error, general_scan_call, scan_call,
	scanln_call, function_without_par, getgroups_call,
	float_function_start, float_function_start2, general_rand_call,
	process_system_errors, readdir_call, stat_start, time_call,
	strtime_call, clock_call, system_call, exit_call,
	process_func_class_call, int_earley_parse_grammar,
	int_earley_parse_grammar, int_earley_set_debug_level,
	int_earley_set_one_parse_flag, int_earley_set_error_recovery_flag,
	int_earley_set_recovery_match, init_read_token, int_earley_parse,
	int_earley_create_grammar): Use IR_pos (cpc) instead of
	source_position_ptr.
	(real_func_call_pos_ptr): Rename it into real_func_call_pc.

	* DINO/d_heap.c (activate_process, external_address): Use IR_pos
	(cpc) instead of source_position_ptr.

	* DINO/d_ir.sprut (assign_stmt): New abstract node.
	(assign, mult_assign, div_assign, rem_assign, plus_assign,
	minus_assign, concat_assign, lshift_assign, rshift_assign,
	ashift_assign, and_assign, xor_assign, or_assign, var_assign,
	par_assign): Use it as base.

	* DINO/d_yacc.y: Use source_position instead of
	source_position_ptr.
	(yylex): Ditto.

	* DINO/dino.tst.in (128, 314, 348-350): Change expected error
	position.

	* DINO/dino.sgml.in: New function sput, sputln, sprint, sprintln.

	* DINO/{dino-4.html, dino-8.html, dino.dvi, dino.html, dino.info,
	dino.info-1, dino.info-2, dino.info-3, dino.info-4, dino.ps,
	dino.txt: Update.

2001-11-16  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (sput_call, sputln_call, sprint_call,
	sprintln_call): New function prototypes.

	* DINO/d_func.c (print_ch): Adding to temp_vlobj instead of
	printing.
	(print_context): Ditto.
	(print_val): Ditto.
	(file_param_type): New enumeration.
	(finish_output): New function.
	(general_put_call, general_print_call): Adding to temp_vlobj
	instead of printing.  Call finish_output.
	(put_call, putln_call, fput_call, fputln_call, print_call,
	println_call, fprint_call, fprintln_call): Use the enumeration.
	(sput_call, sputln_call, sprint_call, sprintln_call): New
	functions.

	* DINO/d_ir.sprut (ENVIRONMENT): Add sput, sputln, sprint, sprint.
	(SPUT_NAME, SPUTLN_NAME, SPRINT_NAME, SPRINTLN_NAME): New macros.
	(sput_decl, sputln_decl, sprint_decl, sprintln_decl): New
	definitions.
	(decls_table): Add entries for sput, sputln, sprint, sprint.

	* DINO/dino.tst.in: Add new tests for sput, sputln, sprint,
	sprint.

2001-11-02  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in (258, 453): Use srdcir for include under
	Cygnwin.
	(483): Process success for conversion of string representation of
	tiny float into 0 too.

2001-11-01  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/Makefile.in: Add all necessary for new file d_heap.c.

	* DINO/d_ir.sprut (destroy_unique_ident): New global variable.
	(initiate_icode): Initiate the new variable.

	* DINO/d_blocktab.h (process_block_decl_ident): Rename it onto
	process_block_decl_unique_ident.

	* DINO/d_blocktab.c (process_block_decl_ident): Rename it onto
	process_block_decl_unique_ident.

	* DINO/d_context.c (first_expr_processing): Use
	`process_block_decl_unique_ident' instead of
	`process_block_decl_ident'.
	(test_context): Add processing for ident `destroy'.

	* DINO/d_extern.sprut (instance_state_t, instance_state): New type
	and enumeration.
	(heap_obj): Add field `state'.

	* DINO/d_heap.c: New file -- former part of d_run.sprut.  Add code
	for implementing destroy.  Set up field `saved_cstack' for the
	current process whenever cstack is changed.

	* DINO/d_func.c (create_instance): Set up field `state'.
	(process_func_class_call): Set up field `saved_cstack' for the
	current process.

	* DINO/d_run.sprut: Move all functions into d_heap.c.

	* DINO/dino.dsp: Add d_heap.c.

	* DINO/dino.tst.in: New test for destroy.

	* DINO/dino.sgml.in:  Add description of function destroy.

	* DINO/{dino-4.html, dino.html, dino-10.html, dino.dvi,
	dino.info*, dino.ps, dino.txt}: Update.

2001-10-27  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/dino.tst.in: Add new test for version.

2001-10-27  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (getgn, getegn, getgroups_call, fgn_call): Add
	checking getgrgid on NULL.

	* DINO/d_eval.c (initiate_arguments): Rename it into
	initiate_vars.  Add initializing varaibale version.
	(evaluate_program): Use initiate_vars instead of
	initiate_arguments.

	* DINO/d_ir.sprut (ENVIRONMENT): Add final variable version.
	(VERSION_NAME): New macro.
	(version_decl): New variable.
	(decls_table): Add entry for version.

	* DINO/dino.sgml.in:  Add description of version and new
	parameter for getf, fgetf.

	* DINO/{dino-4.html, dino.html, dino-8.html, dino-10.html,
	dino.dvi, dino.info*, dino.ps, dino.txt}: Update.

2001-10-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (test): Remove function test.

	* DINO/d_func.c (process_func_class_call): Remove function test
	call.

2001-10-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/Makefile.in (DINO_VERSION): New macro.
	(distdir, libdir, includedir, OPTIONS): Use the new macro.
	(install): Copy the executable with version in the name.

	* DINO/compare.tst: New tests.  Print versions of the
	interpreters.  New parameter to run only DINO tests.

	* DINO/d_context.c (fourth_block_passing): Process chain starting
	with next_pc.

	* DINO/d_conv.c (implicit_arithmetic_conversion): Use ctop instead
	of free.
	(implicit_conversion_for_binary_arithmetic,
	implicit_int_conversion): Change depths in
	implicit_arithmetic_conversion calls.
	(implicit_eq_conversion): Use ctop instead of free.
	(implicit_conversion_for_eq_op): Change depths in
	implicit_eq_conversion calls.

	* DINO/d_dino.c (d_main): Use macro DINO_VERSION.

	* DINO/d_eval.c (push_var_ref, store_vector_element,
	store_table_element, store_designator_value, prepare_op_assign):
	Use ctop instead of free.
	(evaluate): Ditto.  Change depths in calls of
	implicit_arithmetic_conversion, implicit_int_conversion.

	* DINO/d_extern.sprut (DECR_FREE): Change it onto DECR_TOP.
	(DECR_CTOP): New macro.
	(heap_stack): Rename field free onto ctop.

	* DINO/d_func.c (min_max_call, to_lower_upper, eltype_call,
	keys_call, context_call, inside_call, match_call, gmatch_call,
	generall_sub_call, generall_sub_call, split_call, subv_call,
	cmpv_call, del_call, general_ins_call, rev_call, sort_call,
	get_file, rename_call, mkdir_call, rmdir_call, getcwd_call,
	chdir_call, general_chmod, isatty_call, open_call, close_call,
	flush_call, popen_call, pclose_call, tell_call, seek_call,
	file_function_call_start, general_put_call, general_print_call,
	getf_call, fgetf_call, scanel, str_function_end, getgroups_call,
	float_function_start, float_function_start2,
	float_function_finish, general_rand_call, readdir_call,
	ftype_call, stat_finish, fun_call, fgn_call, mode_finish,
	time_call, strtime_call, clock_call, gc_call, system_call,
	exit_call, init_call, call_external_func, create_instance,
	int_earley_parse_grammar, int_earley_set_debug_level,
	int_earley_set_one_parse_flag, int_earley_set_error_recovery_flag,
	int_earley_set_recovery_match, int_earley_parse): Use ctop instead
	of free.  Change depths in calls of implicit_arithmetic_conversion
	and implicit_int_conversion.
	(process_func_class_call): Ditto.  Save ctop and set up new one.

	* DINO/d_run.sprut (ER_CTOP): New macro.
	(SET_TOP, TOP_UP, TOP_DOWN): Use ctop instead of free.  New
	variants of macros.
	(traverse_used_heap_object, change_obj_refs): Use ctop instead of
	free.
	(gc): Save and restore ctop.
	(heap_push): Ditto.  Use ctop instead of free.
	(heap_pop, activate_given_process): Save and restore ctop.

	* DINO/dino.tst.in (test 356): Change output because of added
	optimizations.

2001-10-18  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_func.c (del_call): Fix typo in the condition.

	* DINO/d_eval.c (evaluate): Pop stack before blocking process too.

2001-10-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/{earley.tst.in, earley++.tst.in}: Use srcdir for the
	tests.

	* DINO/dino.tst.in: Use new diagnostics in tests 466 and 469
	(functions getf and fgetf).

2001-10-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * DINO/d_ir.sprut (ENVIRONMENT): Add definition of function rev.
	(REV_NAME): New macro.
	(rev_decl): New varaibale and its external declaration.
	(format_vectorof): New node type.
	(decls_table): Add entry for the new function.
        
	* DINO/d_extern.sprut (heap_vect): Add field disp.
	(ER_unpack_els, ER_pack_els): Use the field.

	* DINO/d_run.sprut (OPTIMAL_ELS_SIZE): Make it bigger.
	(_pack_els, _unpack_els):
	(heap_chunk): Add member chunk_stack_top.
	(new_heap_chunk): Initialize the member
	(heap_allocate): Add new parameter saying where in the heap to
	allocate.
	(try_heap_free): Rename it onto try_heap_stack_free.
	(tailored_heap_object_size): Take field disp (for vector) into
	account.
	(define_new_heap_object): New function.
	(define_new_heap_object_places): Use the new function.
	(change_obj_refs): Rename it into change_refs.  Use the next new
	function.
	(change_obj_refs): New function.
	(move_object): New function.
	(compact_heap): Use the previous new function.
	(gc): Use function change_refs.
	(heap_push, heap_pop):  Use allocation for the stacks.
	(create_empty_vector): Use the disp and new parameter for heap
	allocation.
	(create_unpack_vector, expand_vector, unpack_vector): Ditto.
	(create_pack_vector, pack_vector_if_possible): Use the disp.
	(copy_vector): Use the new parameter for heap allocation.
	(hash_val): Use another encoding.
	(hash_key): Ditto.
	(START_TABLE_SIZE): Use the bigger vector.
	(create_tab, create_process): Use the new parameter for heap
	allocation.

	* DINO/d_yacc.y: Add transformation into vector with a format.

	* DINO/d_built.h (rev_call): New function definition.

	* DINO/d_context.c (first_expr_processing, value_type,
	third_expr_processing, fourth_expr_processing): Add processing
	format_vectorof.

	* DINO/d_conv.h (to_vect_string_conversion): New format parameter.

	* DINO/d_conv.c (to_vect_string_conversion): Add conversion with
	format.  Fix a GC bug.
	(implicit_var_arithmetic_conversion,
	implicit_conversion_for_eq_op): Add NULL parameter to call of
	to_vect_string_conversion.

	* DINO/d_errors.h (ERR_invalid_conversion_format_type,
	DERR_format_conversion_to_vector_operand_type,
	DERR_vector_conversion_format_type):  External definitions of the
	new error messages.

	* DINO/d_errors.c (ERR_invalid_conversion_format_type,
	DERR_format_conversion_to_vector_operand_type,
	DERR_vector_conversion_format_type): The new error messages.

	* DINO/d_eval.c (execute_concat_op): Add NULL parameter to call of
	to_vect_string_conversion.
	(evaluate): Ditto.  Add new parameter to call of heap_allocate.
	Process format_vectorof.
	(eval_error): Add new parameter to call of heap_allocate.

	* DINO/d_func.c (to_lower_upper, match_call, gmatch_call,
	generall_sub_call, split_call, subv_call, cmpv_call): Add NULL
	parameter to call of to_vect_string_conversion.
	(del_call): Take the first element disp into account.  Return the
	result.
	(general_ins_call): Return the result.
	(rev_call): New function.
	(two_strings_func_start, string_func_start, print_val,
	general_put_call, general_get_call): Add NULL parameter to call of
	to_vect_string_conversion.
	(general_get_ln_file_call): Add new parameter as_lns_p.
	(getf_call): Process the new parameter.
	(fgetln_call): Use the new general_get_ln_file_call parameter.
	(fgetf_call): Ditto.  Process the new parameter.
	(general_scan_call): Use shorter code.
	(readdir_call, strtime_call, system_call): Add NULL parameter to
	call of to_vect_string_conversion.
	(create_instance): Add new parameter to call of heap_allocate.

	* DINO/dino.tst.in: New output for test # 362 because of new
	hashing.

	* DINO/dino.sgml.in: Vector conversion with format.  New function
	rev.  Function del, ins, insv now return the vector.  Function
	getln is with parameter now.

	* DINO/{dino-4.html, dino-5.html, dino-8.html, dino-9.html,
	dino.html, dino.dvi, dino.info, dino.info-1, dino.info-2,
	dino.info-3, dino.info-4, dino.ps, dino.txt}: Update.

2001-10-05  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* REGEX/regex.h: Update it.

	* REGEX/regex.c: Update it.

2001-07-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_run.sprut (new_heap_chunk): Increase size according to
	heuristic.
	(compact_heap): Don't delete free heap chunk according to
	heuristic.  Move objects only if it is necessary.

2001-07-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_errors.h (ERR_invalid_conversion_to_char_operand_type,
	ERR_invalid_conversion_to_int_operand_type,
	ERR_invalid_conversion_to_float_operand_type,
	DERR_conversion_to_char_operand_type,
	DERR_conversion_to_int_operand_type,
	DERR_conversion_to_float_operand_type): New external definitions.

	* DINO/d_errors.c (ERR_invalid_conversion_to_char_operand_type,
	ERR_invalid_conversion_to_int_operand_type,
	ERR_invalid_conversion_to_float_operand_type,
	DERR_conversion_to_char_operand_type,
	DERR_conversion_to_int_operand_type,
	DERR_conversion_to_float_operand_type): New messages.
	(DERR_erange): Change the message.

	* DINO/d_yacc.y: Add rules for {char, int, float} (..).
	(get_string_code): Add processing `\a'.

	* DINO/d_ir.sprut (charof, intof, floatof): New nodes.

	* DINO/d_func.c (print_ch, get_char_code): Add processing `\a'.

	* DINO/d_eval.c (evaluate): Add evaluating charof, intof, floatof.

	* DINO/d_context.c (first_expr_processing, value_type,
	third_expr_processing, fourth_expr_processing): Add processing
	charof, intof, floatof.

	* DINO/d_run.sprut (try_heap_free): Return TRUE if heap piece has
	been freed.
	(heap_pop): Changed saved_cstack for current processor if the
	stack has been popped.
	(pack_vector_if_possible): Set eltype when els_number == 0.

	* DINO/d_conv.c (to_vect_string_conversion): Switch off GC
	temporally.

	* Dino/Makefile.in: Fix typo.

	* DINO/dino.tst.in: Add tests for {char, int, float} (..).  Modify
	output for system error `result too large'.

	* DINO/dino.sgml.in: Add descriptions of {char, int, float} (..).

	* DINO/dino-5.html, DINO/dino-8.html, DINO/dino-9.html,
	DINO/dino.dvi, DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

2001-07-23  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (rcount_call): Rename it into gmatch.

        * DINO/d_func.c (rcount_call): Rename it into gmatch.  Return
	vector instead of the count.

        * DINO/d_ir.sprut (RCOUNT_NAME, rcount_decl): Rename them into
	GMATCH_NAME, gmatch_decl.

	* DINO/d_run.sprut (temp_vlobj2): New global variable.
	(initiate_heap): Create temp_vlobj2.
	(finish_heap): Delete temp_vlobj2.

	* DINO/dino.tst.in: Test gmatch instead of rcount.

	* DINO/dino.sgml.in: Add description of function gmatch and
	remove rcount.

	* DINO/dino-4.html, DINO/dino-8.html DINO/dino.dvi,
	DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

2001-07-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_built.h (getf_call, fgetf_call): New prototypes.

	* DINO/d_func.c (general_getln_call): rename it onto
	general_get_ln_file_call.  Add new parameters to process [f]getf.
	(getf_call, fgetf_call): New functions.
	(getln_call, fgetln_call): Use general_get_ln_file_call.

	* DINO/d_ir.sprut (GETF_NAME, FGETF_NAME, getf_decl, fgetf_decl):
	New macros and variables.
	(decls_table): Add entries for getf fgtef.

	* DINO/dino.tst.in: Add tests for getf and fgetf.

	* DINO/dino.sgml.in: Add description of functions getf and
	fgetf.

	* DINO/dino-4.html, DINO/dino-8.htmlM DINO/dino.dvi,
	DINO/dino.html, DINO/dino.info, DINO/dino.info-1,
	DINO/dino.info-2, DINO/dino.info-3, DINO/dino.info-4,
	DINO/dino.ps, DINO/dino.txt: Update.

2001-07-13  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_common.h (HAVE_SETITIMER): Set up the default value.

	* DINO/d_dino.c (exception_action): Use HAVE_SETITIMER value.

	* DINO/d_eval.c (find_context_by_scope): Use
	current_cached_container_tick.
	(evaluate_program): Use HAVE_SETITIMER value.
	(profile_compare_function): Ditto.
	(print_profile): Ditto.  Print gc time when HAVE_SETITIMER==0.

	* DINO/d_ir.sprut (block): New field cached_container_tick.

	* DINO/d_run.sprut (current_cached_container_tick, gc_ticker): New
	global variables.
	(initiate_heap): Initialize the variables.
	(clear_caches): Remove it.
	(gc): Modify current_cached_container_tick instead of calling
	clear_caches.  Switch on/off gc_ticker.
	(heap_push): Modify current_cached_container_tick.
	(activate_given_process): Modify current_cached_container_tick
	instead of calling clear_caches.

2001-07-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_eval.c (print_profile): Print GC time too.

	* DINO/d_run.sprut (in_gc_p, gc_interrupts_number): New global
	variables.
	(initiate_heap): Initiate them.
	(gc): Set up and clear in_gc_p.
	(profile_interrupt): Check that we are in GC.

2001-07-12  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_extern.sprut (create_pack_vector): New function prototype
	and member in struct spi.
	(create_pack_vector): New function.

	* DINO/d_run.sprut (compact_heap): Use new_place for looking for
	object in temp refs.
	(create_pack_vector): New function.
	(create_empty_string, create_string): Use create_pack_vector.
	(external_address): Insert an external variable address in
	external_vars only once.

	* DINO/d_conv.c (to_vect_string_conversion): Use create_string.

	* DINO/d_eval.c (execute_concat_op): Use create_pack_vector and
	create_unpack_vector.
	(evaluate): Use create_pack_vector.  Set up the correct context
	for func and class.

	* DINO/d_func.c (to_lower_upper): Create the result string first
	before copying into it.
	(regex_node): New global structure.
	(regex_tab, regex_os, regex_vlo): New global variables.
	(regex_node_hash, regex_node_eq, regex_node_eq,
	initiate_regex_tab, finish_regex_tab): New functions.
	(match_call): Use find_regex and create_pack_vector.  Place pmatch
	in temp_vlobj.  Don't call regfree.
	(rcount_call): Use find_regex.  Don't call regfree.
	(generall_sub_call): Use find_regex and create_pack_vector.  Don't
	call regfree.
	(split_call): Ditto.
	(subv_call): Use create_pack_vector.
	(getgroups_call, readdir_call): Ditto.
	(mode_finish): Create the string before set mode of ctop.
	(initiate_funcs): Call initiate_regex_tab.
	(finish_funcs): New function.

	* DINO/dino.tst.in: Correct test results for the 66th test.

	* DINO/dino.sgml.in: Fix typo in regex syntax.

	* DINO/{dino-8.html, dino.dvi, dino.info*, dino.ps, dino.txt}:
	Update.

2001-07-06  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* DINO/d_run.sprut (heap_object_size): Add processing hideblock.

2001-06-29  Vladimir Makarov  <vmakarov@users.sourceforge.net>

        * AMMUNITION/IEEE.h (MAX_SINGLE_2_STRING_LENGTH,
	MAX_DOUBLE_2_STRING_LENGTH, MAX_QUAD_2_STRING_LENGTH,
	MAX_SINGLE_4_STRING_LENGTH, MAX_DOUBLE_4_STRING_LENGTH,
	MAX_QUAD_4_STRING_LENGTH, MAX_SINGLE_8_STRING_LENGTH,
	MAX_DOUBLE_8_STRING_LENGTH, MAX_QUAD_8_STRING_LENGTH,
	MAX_SINGLE_10_STRING_LENGTH, MAX_DOUBLE_10_STRING_LENGTH,
	MAX_QUAD_10_STRING_LENGTH, MAX_SINGLE_16_STRING_LENGTH,
	MAX_DOUBLE_16_STRING_LENGTH, MAX_QUAD_16_STRING_LENGTH): New
	macros.
	(IEEE_single_to_binary_string, IEEE_double_to_binary_string,
	IEEE_quad_to_binary_string, IEEE_single_from_binary_string,
	IEEE_double_from_binary_string, IEEE_quad_from_binary_string): New
	function prototypes.
	(to_binary_string, from_binary_string): New C++ functions.

        * AMMUNITION/IEEE.c (float_to_binary_string,
	IEEE_to_binary_string, IEEE_single_to_binary_string,
	IEEE_double_to_binary_string, IEEE_quad_to_binary_string,
	binary_string_to_float, IEEE_from_binary_string,
	IEEE_single_from_binary_string, IEEE_double_from_binary_string,
	IEEE_quad_from_binary_string): New functions.
	(float_to_string): Use local array to get the fraction string.

        * AMMUNITION/IEEE.cpp (float_to_binary_string,
	IEEE_to_binary_string, IEEE_single::to_binary_string,
	IEEE_double::to_binary_string, IEEE_quad::to_binary_string,
	binary_string_to_float, IEEE_from_binary_string,
	IEEE_single::from_binary_string, IEEE_double::from_binary_string,
	IEEE_quad::from_binary_string): New functions.
	(float_to_string): Use local array to get the fraction string.

	* AMMUNITION/IEEE.tst.in: Add the new macros and test the new
	external functions.

	* AMMUNITION/IEEE++.tst.in: Ditto.

	* AMMUNITION/ammunition.sgml.in: Add description of the new macros
	and the external functions.

	* AMMUNITION/ammunition++.sgml.in: Ditto.

	* AMMUNITION/{ammunition.info*, ammunition.txt, ammunition.ps,
	ammunition.dvi, ammunition-11.html}: Update.

	* AMMUNITION/{ammunition++.info*, ammunition++.txt,
	ammunition++.ps, ammunition++.dvi, ammunition++-11.html}: Ditto.

	* AMMUNITION/ammunition++.info-4: New file.

	* DINO/ieee.d (opvalue): New exception class.
	(ignore_excepts): New variable.
	(process_except): Use it.
	(to_binary_string, from_binary_string):  New functions.

	* DINO/ieee_int.c (ieee_single_to_binary_string,
	ieee_double_to_binary_string, ieee_quad_to_binary_string,
	ieee_single_from_binary_string, ieee_double_from_binary_string,
	ieee_quad_from_binary_string): New functions.
	(ieee_address): Add their addresses.

	* DINO/ieee.tst.in (453): Test new functions and ignoring the
	excepts.

2001-06-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* SHILKA/yacc.y (make_lower_case_string): New function.  Use it
	for creation of keywords when -case.

	* SHILKA/shilka.tst.in: Add Novikov's test.

2001-06-26  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/arithm.h (unsigned_integer_from_based_string): Fix
	typo.

	* DINO/mpi.d (mpi_ignore_overflow): New variable.
	(check_overflow): Make it private.  Do not generate excpetion if
	mpi_ignore_overflow is set up.
	(unsigned_add, unsigned_subtract, unsigned_multiply,
	unsigned_divide, unsigned_remainder, unsigned_shift_right,
	unsigned_shift_left, unsigned_or, unsigned_and, unsigned_not,
	unsigned_eq, unsigned_ne, unsigned_gt, unsigned_lt, unsigned_ge,
	unsigned_le, unsigned_change_size, unsigned_to_based_string,
	unsigned_to_string, unsigned_from_based_string,
	unsigned_from_string): New functions.
	(mpi_unsigned_add, mpi_unsigned_subtract, mpi_unsigned_multiply,
	mpi_unsigned_divide, mpi_unsigned_remainder,
	mpi_unsigned_shift_right, mpi_unsigned_shift_left,
	mpi_unsigned_or, mpi_unsigned_and, mpi_unsigned_not,
	mpi_unsigned_eq, mpi_unsigned_ne, mpi_unsigned_gt,
	mpi_unsigned_lt, mpi_unsigned_ge, mpi_unsigned_le,
	mpi_unsigned_change_size, mpi_unsigned_to_based_string,
	mpi_unsigned_from_based_string): New external functions.

	* DINO/mpi.c (arithm_op): New function.
	(mpi_add, mpi_subtract, mpi_multiply, mpi_divide, mpi_remainder):
	Use it.
	(mpi_unsigned_add, mpi_unsigned_subtract, mpi_unsigned_multiply,
	mpi_unsigned_divide, mpi_unsigned_remainder): New functions.
	(mpi_par_op): Set up size of the result mpi.
	(shift): New function.
	(mpi_shift_right, mpi_shift_left): Use it.
	(mpi_unsigned_shift_right, mpi_unsigned_shift_left): New
	functions.
	(logical): New function.
	(mpi_or, mpi_and): Use it.
	(mpi_unsigned_or, mpi_unsigned_and): New functions.
	(not): New function.
	(mpi_not): Use it.
	(mpi_unsigned_not): New function.
	(cmp): New function.
	(mpi_eq, mpi_new, mpi_gt, mpi_lt, mpi_ge, mpi_le): Use it.
	(mpi_unsigned_eq, mpi_unsigned_new, mpi_unsigned_gt,
	mpi_unsigned_lt, mpi_unsigned_ge, mpi_unsigned_le): New functions.
	(change_size): New function.
	(mpi_change_size): Use it.
	(mpi_unsigned_change_size): New function.
	(to_based_string): New function.
	(mpi_to_based_string): Use it.
	(mpi_unsigned_to_based_string): New function.
	(from_based_string): New function.
	(mpi_from_based_string): Use it.
	(mpi_unsigned_from_based_string): New function.
	(mpi_address): Add new exported functions.

	* DINO/dino.tst.in: Expand test for mpi.

	* DINO/dino.sgml.in: Add comment for match.

	* DINO/dino-8.html, DINO/dino.dvi, DINO/dino.info,
	DINO/dino.info-1, DINO/dino.info-2, DINO/dino.info-3,
	DINO/dino.info-4, DINO/dino.ps, DINO/dino.txt: Update.

2001-06-22  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* d_built.h (rcount_call): New prototype.

	* d_eval.c (evaluate): Create objects before setting mode.

	* d_func.c (rcount_call): New function.

	* d_run.sprut (create_string): Call create_empty_string with
	bigger min_length.

	* d_ir.sprut (rcount): Add new function (macros, table entry
	etc.).

	* dino.tst.in: Add tests for rcount.

	* dino.sgml.in: Add documentation of rcount.

	* dino.html, dino-4.html, dino-8.html, dino.dvi, dino.info*,
	dino.ps, dino.txt: Update.

2001-06-21  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* mpi.c (mpi_to_string, mpi_from_string): Rename them into
	mpi_to_based_string and mpi_from_based_string.  Use
	integer_to_based_string and integer_from_based_string.

	* mpi.d (mpi_except): Add mpi_base.
	(mpi_to_string, mpi_from_string): Rename them into
	mpi_to_based_string and mpi_from_based_string.
	(to_based_string, from_based_string): New functions.
	(to_string, from_string): Use them.

2001-06-20  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* arithm.c, arithm.cpp, arithm.h: Add new functions
	unsigned_integer_to_based_string, integer_to_based_string,
	unsigned_integer_from_base_string, integer_from_based_string,
	to_based_string, from_based_string, to_based_str, from_based_str.
	(integer_from_string, unsigned_integer_from_string,
	string_to_unsigned_integer_without_overflow_reaction,
	integer_to_string, unsigned_integer_to_string): Modify them.
	(signed_integer::from_string, unsigned_integer::from_string,
	string_to_unsigned_integer_without_overflow_reaction,
	signed_integer::to_string, unsigned_integer::to_string): Modify
	them.

        * ammunition.sgml.in, ammunition.sgml.in: The new functions
	documentation.

	* ammunition.txt, ammunition.ps, ammunition.info*, ammunition.dvi,
	ammunition-10.html, ammunition++.txt, ammunition++.ps,
	ammunition++.info*, ammunition++.dvi, ammunition++-10.html:
	Update.

2001-06-19  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* sgml-txt: Fix bug with itemize inside enum.

	* dino.sgml.in: Fix indentation for itemize.

	* dino-{468}.html, dino.dvi, dino-info*, dino.ps, dino.txt:
	Update.

2001-06-05  Dave Bodenstab  <imdave@mcs.net>

	* DINO/compare.tst: Permit to use compiled code for TCL tests.

2001-05-31  Vladimir N. Makarov  <vmakarov@users.sourceforge.net>

	* Makefile.in (distdino): Fix different build directory problem.

	* yacc.exe: New file.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* AMMUNITION/Makefile.in DINO/Makefile.in MSTA/Makefile.in
	NONA/Makefile.in OKA/Makefile.in SHILKA/Makefile.in
	SPRUT/Makefile.in: Change generated documenation if it is only
	obsolete.

	* Makefile.in AMMUNITION/Makefile.in DINO/Makefile.in
	MSTA/Makefile.in NONA/Makefile.in OKA/Makefile.in
	SHILKA/Makefile.in SPRUT/Makefile.in: Generation doc files from
	any build directory.

	* REGEX/Makefile.in REGEX/doc/Makefile.in REGEX/test/Makefile.in:
	Removing some unnecessary entries.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* cocom.html cocom.dvi cocom.txt cocom.ps cocom.info
	AMMUNITION/ammunition*.html AMMUNITION/ammunition.info*
	AMMUNITION/ammunition.txt AMMUNITION/ammunition.dvi
	AMMUNITION/ammunition.ps AMMUNITIONammunition++*.html
	AMMUNITIONammunition++.info* AMMUNITIONammunition++.txt
	AMMUNITIONammunition++.dvi AMMUNITIONammunition++.ps
	DINO/dino*.html DINO/dino.info* DINO/dino.txt DINO/dino.dvi
	DINO/dino.ps MSTA/msta*.html MSTA/msta.info* MSTA/msta.txt
	MSTA/msta.dvi MSTA/msta.ps NONA/nona*.html NONA/nona.info*
	NONA/nona.txt NONA/nona.dvi NONA/nona.ps OKA/oka*.html
	OKA/oka.info* OKA/oka.txt OKA/oka.dvi OKA/oka.ps
	SHILKA/shilka*.html SHILKA/shilka.info* SHILKA/shilka.txt
	SHILKA/shilka.dvi SHILKA/dino.ps SPRUT/sprut*.html
	SPRUT/sprut.info* SPRUT/sprut.txt SPRUT/sprut.dvi SPRUT/sprut.ps:
	Add generated documentation files.

2001-05-30  Vladimir Makarov  <vmakarov@users.sourceforge.net>

	* Initial revision of cocom and dino.
