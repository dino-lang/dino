#   FILE NAME:   Makefile
#
#   Copyright (C) 1997-2015 Vladimir Makarov.
#
#   Written by Vladimir Makarov <vmakarov@gcc.gnu.org>
#
#   This file is part of COCOM toolset and interpreter of DINO.
#
#   This is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2, or (at your option)
#   any later version.
#
#   This software is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with GNU CC; see the file COPYING.  If not, write to the Free
#   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
#   02111-1307, USA.
#
#   TITLE:       Makefile for COCOM
#
#   SPECIAL CONSIDERATION: Following makefile macro can be redefined
#        on make command line:
#            distdir     the subdirectory used for creation of compressed
#                        distribution tar file
#            prefix      common prefix for installation directories
#            INSTALL     utility used for installing executables
#            INSTALLDATA utility used for installing nonexecutables
#            ETAGS       utility used for creation of COCOM tag table
#
#   MAKEFILE ENTRIES:
#            all (default)   create all
#            install         create and install all
#            test            test all
#            uninstall       delete the installed file
#            clean           delete all temporary (object) files
#            realclean       deletion all which can be built up automatically
#            distclean       deletion all not needed for distribution
#            dist            unconditional creation of compressed
#                            distribution tar file
#            TAGS            updating TAGS table for all COCOM sources
#

SHELL=/bin/sh

@SET_MAKE@

# Utility for creation of `COCOM' tag table.
ETAGS=etags

# SED utility
SED=sed

# RCS utility
RCS=rcs

# Undefined value for marking a release.
RCSLABEL=

# COCOM only start
# The subdirectory used for copying sources and creation of 
# compressed distribution tar file.
distdir = cocom-0.997
# COCOM only end

# Additional prefix used to install cocom and dino temporarily.
# It is necessary only for RPM.
DESTDIR=

# Utility for installation `oka'.
INSTALL=@INSTALL@

# Utility for installing nonexecutables.
INSTALLDATA=@INSTALL_DATA@

# The subdirectory used for copying sources and creation of 
# compressed distribution tar file only for DINO.
distdinodir = dino-0.91

# Supporting possibility build directories

srcdir = @srcdir@

# All files in this directory.
source_files = $(srcdir)/Makefile.in

# COCOM only start
only_cocom_source_files =
# COCOM only end

# Additional files
additional_files = COPYING COPYING.LIB configure install-sh dino-copyright

# COCOM only start
only_cocom_additional_files = README INSTALL CHANGES cocom-copyright
# COCOM only end

doc_files =

# Common prefix for installation directories.
# NOTE: this directory must exist when you start installation.
prefix=@prefix@

# The directory for installation of documentation
docdir=@docdir@

# Files which are not in distribution
additional_rcs_files = configure.in acconfig.h

# COCOM only start
only_cocom_doc_files = cocom.txt cocom.info* cocom*.html cocom.pdf cocom.dvi cocom.ps

only_cocom_rcs_doc_files = 

# Files which are not in distribution
only_cocom_additional_rcs_files = cocom.sgml.in configure.in msta-template.bmp

# COCOM only end

# All directories containing needed for DINO
directories = AMMUNITION SPRUT SHILKA MSTA DINO

# COCOM only start
# All directories containing components of COCOM
only_cocom_directories = NONA OKA
# COCOM only end

# Regexp directory
# RX = REGEX
RX = ONIGURUMA

# Default entry
all:
	for i in $(directories);do\
	  if test $$i = DINO; then\
	    (cd $(RX); $(MAKE) GCC_FPIC='@DINO_GCC_FPIC@');\
          fi;\
	  (cd $$i; $(MAKE));\
	done
# COCOM only start
	for i in $(only_cocom_directories);do\
	  (cd $$i; $(MAKE));\
	done
# COCOM only end

# For internal use only.  It requires executables of some tools.
# Use it only if your compiler is GCC.
depend: all
	for i in $(directories);do\
	  (cd $$i; $(MAKE) depend);\
	done
# COCOM only start
	for i in $(only_cocom_directories);do\
	  (cd $$i; $(MAKE) depend);\
	done
# COCOM only end

test:
	for i in $(directories);do\
	  (cd $$i; $(MAKE) test);\
	done
# COCOM only start
	for i in $(only_cocom_directories);do\
	  (cd $$i; $(MAKE) test);\
	done
# COCOM only end

# Creation of installation directories and install files.
install: all
# COCOM only start
	for i in $(directories) $(only_cocom_directories);do\
	  if test $$i != DINO; then\
	    (cd $$i; $(MAKE) DESTDIR=$(DESTDIR) install);\
	  fi;\
	done
	-mkdir -p $(DESTDIR)/$(docdir)/cocom
	$(INSTALLDATA) $(srcdir)/README $(srcdir)/CHANGES \
            $(srcdir)/cocom.txt $(srcdir)/cocom*.html \
            $(srcdir)/cocom.info $(srcdir)/cocom.pdf $(srcdir)/cocom.dvi \
            $(srcdir)/cocom.ps $(DESTDIR)/$(docdir)/cocom
	$(INSTALLDATA) $(srcdir)/cocom-copyright \
            $(DESTDIR)/$(docdir)/cocom/copyright
# COCOM only end
	(cd DINO; $(MAKE) DESTDIR=$(DESTDIR) install)
	-mkdir -p $(DESTDIR)/$(docdir)/dino
	$(INSTALLDATA) $(srcdir)/CHANGES $(srcdir)/README \
            $(DESTDIR)/$(docdir)/dino
	$(INSTALLDATA) $(srcdir)/dino-copyright \
            $(DESTDIR)/$(docdir)/dino/copyright

# Delete the installed files and the installation directories.
uninstall:
# COCOM only start
	rm -f $(DESTDIR)/$(docdir)/cocom/README\
            $(DESTDIR)/$(docdir)/cocom/CHNAGES\
            $(DESTDIR)/$(docdir)/cocom/cocom.txt\
            $(DESTDIR)/$(docdir)/cocom/cocom*.html \
	    $(DESTDIR)/$(docdir)/cocom/cocom.pdf\
            $(DESTDIR)/$(docdir)/cocom/cocom.dvi\
            $(DESTDIR)/$(docdir)/cocom/cocom.ps\
            $(DESTDIR)/$(docdir)/cocom/copyright
	-rmdir $(DESTDIR)/$(docdir)/cocom
	for i in $(directories) $(only_cocom_directories);do\
	  if test $$i != DINO; then\
            (cd $$i; $(MAKE) DESTDIR=$(DESTDIR) uninstall);\
	  fi;\
	done
# COCOM only end
	rm -f $(DESTDIR)/$(docdir)/dino/copyright
	rm -f $(DESTDIR)/$(docdir)/dino/CHANGES
	rm -f $(DESTDIR)/$(docdir)/dino/README
	-rmdir $(DESTDIR)/$(docdir)/dino
	(cd DINO; $(MAKE) DESTDIR=$(DESTDIR) uninstall)
	-rmdir $(DESTDIR)/$(docdir)

# Deletion of temporary (object) files.
clean:
# COCOM only start
	rm -f cocom.sgml
	for i in $(only_cocom_directories);do\
	  (cd $$i; $(MAKE) clean);\
	done
# COCOM only end
	for i in $(directories) $(RX);do\
	  (cd $$i; $(MAKE) clean);\
	done

# Deletion all not needed for distribution.
distclean:
# COCOM only start
	rm -f cocom.sgml
	for i in $(only_cocom_directories);do\
	  (cd $$i; $(MAKE) distclean);\
	done
# COCOM only end
	for i in $(directories) $(RX);do\
	  (cd $$i; $(MAKE) distclean);\
	done
	rm -f TAGS Makefile config.cache config.log config.status
	rm -f cocom-config.h

# Deletion all which can be built up automatically:
realclean:
	for i in $(directories) $(RX);do\
	  (cd $$i; $(MAKE) realclean);\
	done
	rm -f TAGS Makefile config.cache config.log config.status
# COCOM only start
	for i in $(only_cocom_directories);do\
	  (cd $$i; $(MAKE) realclean);\
	done
	rm -f cocom.tex cocom.log cocom.aux cocom.toc cocom.sgml
# COCOM only end
	rm -f cocom-config.h

# Unconditional creation of compressed distribution tar file.
# COCOM only start
dist: doc
	rm -f -r $(distdir)
	mkdir $(distdir)
	for i in $(source_files) $(only_cocom_source_files);do\
	   cp $$i $(distdir);\
        done
	for i in  $(additional_files) $(only_cocom_additional_files);do\
          cp $(srcdir)/$$i $(distdir);\
        done
	for i in $(doc_files) $(only_cocom_doc_files) $(only_cocom_rcs_doc_files);do\
          cp $(srcdir)/$$i $(distdir);\
        done
	for i in $(directories) $(only_cocom_directories) $(RX);do\
	  (cd $$i; $(MAKE) distdir=../$(distdir)/$$i dist-copy);\
	done
	chmod -R +w $(distdir)
	tar cf -  $(distdir) | gzip -c >$(distdir).tar.gz
# COCOM only end

distdino:
	rm -f -r $(distdinodir)
	mkdir $(distdinodir)
	for i in $(source_files);do cp $$i $(distdinodir);done
	for i in $(additional_files) $(doc_files);do\
	   cp $(srcdir)/$$i $(distdinodir);\
	done
	cp $(srcdir)/DINO-README $(distdinodir)/README
	cp $(srcdir)/DINO-INSTALL $(distdinodir)/INSTALL
	cp $(srcdir)/DINO-CHANGES $(distdinodir)/CHANGES
	for i in $(directories) $(RX);do\
	  (cd $$i; $(MAKE) distdir=../$(distdinodir)/$$i dist-copy);\
	done
	chmod -R +w $(distdinodir)
	$(SED) '/# COCOM only start/,/# COCOM only end/d'\
		 $(distdinodir)/configure >__tmp
	mv __tmp $(distdinodir)/configure
	chmod +x $(distdinodir)/configure
	$(SED) '/# COCOM only start/,/# COCOM only end/d'\
		 $(distdinodir)/Makefile.in | $(SED) 's/COCOM/DINO/' >__tmp
	mv __tmp $(distdinodir)/Makefile.in
	tar cf -  $(distdinodir) | gzip -c >$(distdinodir).tar.gz

# Creation of documentation

# COCOM only start
doc : $(srcdir)/cocom.txt $(srcdir)/cocom.html $(srcdir)/cocom.info $(srcdir)/cocom.pdf $(srcdir)/cocom.dvi $(srcdir)/cocom.ps
	for i in $(directories);do\
	  (cd $$i; $(MAKE) doc);\
	done
# COCOM only start
	for i in $(only_cocom_directories);do\
	  (cd $$i; $(MAKE) doc);\
	done
# COCOM only end

cocom.sgml: $(srcdir)/cocom.sgml.in
	cp $(srcdir)/cocom.sgml.in cocom.sgml

$(srcdir)/cocom.txt: cocom.sgml
	linuxdoc -B txt --papersize=letter -f cocom.sgml
	mv cocom.txt $(srcdir)
	
$(srcdir)/cocom.html: cocom.sgml
	linuxdoc -B html --papersize=letter cocom.sgml
	if test -f cocom-1.html;then\
  	  for i in cocom-*.html;do\
   	    mv $$i $(srcdir)/$$i;\
	  done;\
        fi
	mv cocom.html $(srcdir)/cocom.html
	
$(srcdir)/cocom.info: cocom.sgml
	linuxdoc -B info --papersize=letter cocom.sgml
	if test -f cocom.info;then\
	  for i in cocom.info*;do\
   	    mv $$i $(srcdir)/$$i;\
	  done;\
        fi
	
$(srcdir)/cocom.dvi: cocom.sgml
	linuxdoc -B latex --papersize=letter cocom.sgml
	if test ! -f cocom.dvi\
           -o -f cocom.tex -a cocom.tex -nt cocom.dvi; then\
    	        latex cocom.tex; latex cocom.tex;\
        fi
	mv cocom.dvi $(srcdir)/cocom.dvi

$(srcdir)/cocom.ps: $(srcdir)/cocom.dvi
	dvips -o $@ $(srcdir)/cocom.dvi

$(srcdir)/cocom.pdf: $(srcdir)/cocom.ps
	ps2pdf $(srcdir)/cocom.ps $@
# COCOM only end

# COCOM only start
rpm: dist
	rm -rf build-rpm && mkdir -p build-rpm/SOURCES
	mv $(distdir).tar.gz build-rpm/SOURCES
	rpmbuild -ba --define "_topdir `pwd`/build-rpm" $(srcdir)/cocom.spec
	mv build-rpm/RPMS/*/cocom*.rpm .
	rpm --resign cocom*.rpm

deb: dist
	rm -rf build-debian debian && mkdir -p build-debian debian/DEBIAN
	(cd build-debian \
	 && ../$(distdir)/configure --srcdir=../$(distdir) --prefix=/usr \
	 && make && make DESTDIR=`pwd`/../debian install)
	strip debian/usr/bin/* debian/usr/lib/*/*.so \
	&& gzip --best debian/usr/share/man/man1/*.1 \
	&& $(SED) "s/ARCH/$(ARCH)/" $(srcdir)/cocom.dsc > debian/DEBIAN/control \
	&& fakeroot dpkg-deb --build debian \
	&& rm -rf build-debian debian \
	&& mv debian.deb $(distdir)_$(ARCH).deb \
	&& lintian -X chg $(distdir)_$(ARCH).deb \
	&& debsigs --sign=origin $(distdir)_$(ARCH).deb
# COCOM only end

dinorpm: distdino
	rm -rf build-rpm && mkdir -p build-rpm/SOURCES
	mv $(distdinodir).tar.gz build-rpm/SOURCES
	rpmbuild -ba --define "_topdir `pwd`/build-rpm" $(srcdir)/dino.spec
	mv build-rpm/RPMS/*/dino*.rpm .
	rpm --resign dino*.rpm

dinodeb: distdino
	rm -rf build-debian debian && mkdir -p build-debian debian/DEBIAN
	(cd build-debian \
	 && ../$(distdinodir)/configure --srcdir=../$(distdinodir) --prefix=/usr \
	 && make && make DESTDIR=`pwd`/../debian install)
	strip debian/usr/bin/* debian/usr/lib/*/*.so \
	&& gzip --best debian/usr/share/man/man1/*.1 \
	&& $(SED) "s/ARCH/$(ARCH)/" $(srcdir)/dino.dsc > debian/DEBIAN/control \
	&& fakeroot dpkg-deb --build debian \
	&& rm -rf build-debian debian \
	&& mv debian.deb $(distdinodir)_$(ARCH).deb \
	&& lintian -X chg $(distdinodir)_$(ARCH).deb \
	&& debsigs --sign=origin $(distdinodir)_$(ARCH).deb

# Updating TAGS table for all COCOM sources.
TAGS : make-TAGS

make-TAGS:
	rm -f TAGS
	for i in $(directories);do\
	    for j in `(cd $$i; $(MAKE) -s tagsout)`;do\
	        $(ETAGS) -a @top_srcdir@/$$i/$$j;\
	    done;\
	done
# COCOM only start
	for i in $(only_cocom_directories);do\
	    for j in `(cd $$i; $(MAKE) -s tagsout)`;do\
	        $(ETAGS) -a @top_srcdir@/$$i/$$j;\
	    done;\
	done
	if test x$(only_cocom_source_files) != x; then $(ETAGS) -a $(only_cocom_source_files); fi
# COCOM only end
	$(ETAGS) -a $(source_files)

# Label RCS files.
rcslabel:
	@if test x$(RCSLABEL) = x; then echo undefined RCSLABEL; exit 1; fi
	for i in $(source_files);do $(RCS) -n$(RCSLABEL) $$i;done
# COCOM only start
	for i in $(only_cocom_source_files);do $(RCS) -n$(RCSLABEL) $$i;done
# COCOM only end
	for i in $(additional_files);do\
          $(RCS) -n$(RCSLABEL) $(srcdir)/$$i;\
        done
# COCOM only start
	for i in $(only_cocom_additional_files);do\
           $(RCS) -n$(RCSLABEL) $(srcdir)/$$i;\
        done
# COCOM only end
	$(RCS) -n$(RCSLABEL) DINO-README DINO-INSTALL DINO-CHANGES
	for i in $(additional_rcs_files) $(only_cocom_rcs_doc_files);do\
           $(RCS) -n$(RCSLABEL) $(srcdir)/$$i;\
        done
# COCOM only start
	for i in $(only_cocom_additional_rcs_files);do\
          $(RCS) -n$(RCSLABEL) $(srcdir)/$$i;\
        done
# COCOM only end
	for i in $(directories);do\
	  (cd $$i; $(MAKE) rcslabel RCSLABEL=$(RCSLABEL));\
	done
# COCOM only start
	for i in $(only_cocom_directories);do\
	  (cd $$i; $(MAKE) rcslabel RCSLABEL=$(RCSLABEL));\
	done
# COCOM only end
